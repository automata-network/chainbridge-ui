{"version":3,"sources":["Contracts/WethFactory.ts","Contexts/Adaptors/EVMAdaptors/EVMHomeAdaptorProvider.tsx","media/tokens/eth.svg","media/tokens/weth.svg","media/tokens/dai.svg","media/tokens/cusd.svg","Contexts/Adaptors/EVMAdaptors/EVMDestinationAdaptorProvider.tsx","Contexts/Adaptors/SubstrateAdaptors.tsx","Contexts/Reducers/TransitMessageReducer.tsx","Contexts/NetworkManagerContext.tsx","Contexts/Adaptors/SubstrateApis lazy /^/.//.*$/ groupOptions: {} namespace object","Components/Custom/CustomDrawer.tsx","Modules/AboutDrawer.tsx","Modules/ChangeNetworkDrawer.tsx","Utils/Helpers.tsx","Modules/PreflightModalTransfer.tsx","Components/Custom/AddressInput.tsx","Components/Custom/CustomModal.tsx","Modules/NetworkSelectModal.tsx","Contexts/ChainbridgeContext.tsx","Modules/TransferActiveModal.tsx","Components/Custom/TokenSelectInput.tsx","Components/Custom/TokenInput.tsx","Components/Pages/FormikContextElements/Fees.tsx","Modules/NetworkUnsupportedModal.tsx","Components/Pages/TransferPage.tsx","webpack:///./src/media/tokens/eth.svg?f8ce","Modules/PreflightModalWrap.tsx","Modules/WrapActiveModal.tsx","Utils/History.tsx","Components/Custom/SimpleTokenInput.tsx","Contexts/Reducers/TransfersReducer.tsx","Components/Pages/WrapperPage.tsx","Components/Pages/ExplorerPage.tsx","Contexts/ExplorerContext.tsx","Components/Routes.tsx","Themes/LightTheme.ts","Layouts/AppHeader.tsx","media/Icons/global.svg","Layouts/AppWrapper.tsx","App.tsx","serviceWorker.ts","index.tsx","Contexts/HomeBridgeContext.tsx","Contexts/Adaptors/EVMAdaptors/helpers.ts","Contexts/DestinationBridgeContext.tsx","Contexts/Adaptors/SubstrateApis/ChainBridgeAPI.tsx","chainbridgeConfig.ts","Contracts/Erc20DetailedFactory.ts"],"names":["WethFactory","address","signerOrProvider","Contract","_abi","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","resetAllowanceLogicFor","EVMHomeAdaptorProvider","children","useWeb3","isReady","network","provider","gasPrice","tokens","wallet","checkIsReady","ethBalance","onboard","resetOnboard","useNetworkManager","homeChainConfig","setTransactionStatus","setDepositNonce","handleSetHomeChain","homeChains","setNetworkId","useState","undefined","homeBridge","setHomeBridge","relayerThreshold","setRelayerThreshold","bridgeFee","setBridgeFee","depositAmount","setDepositAmount","selectedToken","setSelectedToken","wrapper","setWrapper","wrapTokenConfig","setWrapperConfig","useEffect","chain","find","networkId","chainId","initialising","setInitialising","walletSelected","setWalletSelected","console","log","then","success","signer","getSigner","bridge","BridgeFactory","connect","bridgeAddress","wrapperToken","token","isNativeWrappedToken","connectedWeth","catch","error","finally","walletSelect","getRelayerThreshold","a","BigNumber","_relayerThreshold","threshold","from","toNumber","getBridgeFee","Number","utils","_fee","formatEther","handleConnect","useCallback","handleCheckSupplies","amount","tokenAddress","destinationChainId","destinationChain","chainbridgeConfig","chains","c","hasTokenSupplies","deposit","recipient","Buffer","decodeAddress","toString","erc20","Erc20DetailedFactory","erc20Decimals","decimals","data","hexZeroPad","parseUnits","toHexString","substr","hexlify","length","getPriceCompatibility","gasPriceCompatibility","allowance","erc20HandlerAddress","currentAllowance","formatUnits","includes","approve","wait","once","filters","Deposit","resourceId","destChainId","depositNonce","value","Promise","resolve","wrapToken","tx","hash","unwrapToken","withdraw","Provider","disconnect","getNetworkName","id","chainConfig","nativeTokenBalance","module","exports","EVMDestinationAdaptorProvider","destinationChainConfig","tokensDispatch","setTransferTxHash","setDepositVotes","depositVotes","destinationBridge","setDestinationBridge","getProvider","on","ProposalEvent","originChainId","status","dataHash","payload","transactionHash","ProposalVote","getTransactionReceipt","txReceipt","String","signed","removeAllListeners","DestinationBridgeContext","SubstrateHomeAdaptorProvider","registry","TypeRegistry","api","setApi","setIsReady","accounts","setAccounts","setAddress","setTokens","initiaising","createApi","rpcUrl","query","chainbridgePalletName","toHuman","config","bridgeFeeFunctionName","BN","transferPalletName","shiftedBy","bridgeFeeValue","fee","confirmChainID","currentId","consts","bridgeChainId","item","isConnected","unsubscribe","system","account","result","balance","toJSON","free","symbol","parseInt","balanceBN","unsub","web3Enable","web3Accounts","map","meta","source","injectedAccounts","selectAccount","index","allAccounts","targetAccount","transferExtrinsic","submitDeposit","web3FromSource","injector","signAndSend","events","isInBlock","isFinalized","filter","event","FungibleTransfer","is","chainNonces","response","HomeBridgeContext","SubstrateDestinationAdaptorProvider","listenerActive","setListenerActive","forEach","record","phase","types","typeDef","section","method","documentation","unsubscribeCall","transitMessageReducer","transitMessage","action","NetworkManagerContext","React","createContext","NetworkManagerProvider","walletType","setWalletType","setHomeChainConfig","setHomeChains","setDestinationChain","destinationChains","setDestinationChains","transferTxHash","transactionStatus","useReducer","inTransitMessages","bridgeConfig","handleSetDestination","Error","DestinationProvider","input","context","useContext","webpackAsyncContext","req","__webpack_require__","o","e","code","ids","all","slice","t","keys","Object","useStyles","makeStyles","constants","palette","createStyles","root","backgroundColor","additional","color","common","white","main","border","padding","generalUnit","backdrop","opacity","CustomDrawer","className","rest","classes","classNames","clsx","display","flexDirection","justifyContent","buttons","alignItems","marginRight","textDecoration","AboutDrawer","open","close","onClose","variant","component","onClick","rel","href","process","target","flexWrap","marginTop","paragraph","margin","ChangeNetworkDrawer","useHomeBridge","useDestinationBridge","require","encodeAddress","hexToU8a","isHex","shortenAddress","zIndex","blocker","position","content","height","width","borderRadius","top","left","transform","subtitle","agreement","startButton","marginBottom","layer4","PreflightModalTransfer","receiver","sender","sourceNetwork","targetNetwork","tokenSymbol","start","size","fullsize","label","checkbox","AddressInput","senderAddress","inputVariant","placeholder","labelClassName","captionMessage","sendToSameAccountHelper","useField","field","helpers","stored","setStored","toggleReceiver","setValue","state","onChange","disabled","borderTopLeftRadius","borderTopRightRadius","overflow","CustomModal","slide","textAlign","NetworkSelectModal","useChainbridge","active","closePosition","injectedClass","inner","ChainbridgeContext","ChainbridgeProvider","handleDeposit","checkSupplies","homeConfig","resetDeposit","animation","typography","maxWidth","bottom","transitionDuration","heading","whiteSpace","stepIndicator","h4","button","borderColor","initCopy","sendingCopy","vote","textOverflow","marginLeft","fontStyle","warning","fontWeight","receipt","weighted","progress","background","TransferActiveModal","m","i","key","TokenSelectInput","sync","labelParsed","synced","setSynced","TokenInput","tokenSelectorKey","values","useFormikContext","FeesFormikWrapped","feeSymbol","amountFormikName","toFixed","icon","fill","NetworkUnsupportedModal","pathname","useLocation","setOpen","supportedNetworks","setSupportedNetworks","ROUTE_LINKS","Transfer","bc","Wrap","n","PredefinedIcons","ETHIcon","WETHIcon","DAIIcon","celoUSD","walletArea","connectButton","connecting","connected","changeButton","cursor","networkName","formArea","currencySection","tokenInputArea","tokenInputSection","tokenInput","borderBottomRightRadius","borderRight","maxButton","borderBottomLeftRadius","currencySelector","paddingRight","addressInput","generalInput","faqButton","tokenItem","minWidth","fees","accountSelector","TransferPage","aboutOpen","setAboutOpen","walletConnecting","setWalletConnecting","changeNetworkOpen","setChangeNetworkOpen","preflightModalOpen","setPreflightModalOpen","tokenAmount","preflightDetails","setPreflightDetails","DECIMALS","REGEX","RegExp","transferSchema","object","shape","string","test","parseFloat","supplies","Boolean","required","isValidSubstrateAddress","isAddress","options","acc","findIndex","v","initialValues","validateOnChange","validationSchema","onSubmit","props","isValidating","dc","url","imageUri","src","alt","Fees","nativeTokenSymbol","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","points","_ref","svgRef","title","viewBox","preserveAspectRatio","ref","ForwardRef","forwardRef","PreflightModalWrap","wrappedTitle","WrapActiveModal","txState","tokenInfo","txHash","blockExplorer","history","historyApi","ProposalStatus","SimpleTokenInput","max","minHeight","blurb","black","tokenIndicator","submitButtonArea","MainPage","setAction","txDetails","setTxDetails","handleWrapToken","handleUnwrapToken","wrapSchema","matches","val","location","push","ExplorerPage","transfersReducer","transfers","currentProposals","proposalEvents","currentVotes","votes","transferDetails","proposalStatus","Inactive","proposalEventBlockNumber","depositBlockNumber","proposalEventTransactionHash","depositTransactionHash","timestamp","proposalEventDetails","voteDetails","ExplorerContext","ExplorerProvider","transfersDispatch","fetchTransfersAndListen","providers","JsonRpcProvider","bridgeContract","erc20HandlerContract","Erc20HandlerFactory","depositFilter","getLogs","fromBlock","deployedBlockNumber","depositLogs","dl","parsedLog","interface","parseLog","getDepositRecord","args","destinationChainID","depositRecord","_depositer","blockNumber","getBlock","_destinationRecipientAddress","_tokenAddress","_amount","resourceID","fromAddress","fromChainId","fromNetworkName","toChainId","toNetworkName","toAddress","proposalEventFilter","proposalEventLogs","pel","originChainID","proposalVoteFilter","proposalVoteLogs","pvl","voteBlockNumber","voteTransactionHash","voteStatus","bridges","bridgeContracts","handler","Explore","FilesRoutes","exact","path","WrapperPage","to","lightTheme","createTheme","globalStyling","body","themeConfig","navItemHeight","general","1","transferUi","header","2","3","preflight","transactionModal","overrides","CheckboxInput","Button","variants","primary","hover","focus","outline","breakpoints","borderBottom","layer2","down","logo","maxHeight","indicator","accountInfo","mainInfo","AppHeader","d","paddingTop","between","paddingBottom","cta","right","pageArea","navTabs","AppWrapper","activeClassName","App","reduce","tca","fallback","componentStack","eventId","resetError","message","showReportDialog","onReset","window","reload","themes","light","autoDismiss","tokensToWatch","networkIds","onboardConfig","dappId","wallets","walletName","preferred","subscriptions","checkNetwork","gasPricePollingInterval","gasPriceSetting","Routes","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","CeloProvider","startsWith","parts","split","ethers","InfuraWebSocketProvider","AlchemyWebSocketProvider","urlInstance","URL","username","password","urlInfo","user","getRpcProviderFromHttpUrl","destinationToken","_token","erc20destinationToken","destinationErc20Handler","destinationErc20DHandlerInstance","_burnList","balanceOf","balanceTokens","detectEIP1559MaxFeePerGas","getFeeData","maxFeePerGas","warn","defaultGasPrice","WsProvider","subChainConfig","typesFileName","ApiPromise","create","transferFunctionName","multipliedBy","pow"],"mappings":"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","file":"static/js/main.88fbb5e8.chunk.js","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Weth } from \"./Weth\";\n\nexport class WethFactory {\n  static connect(address: string, signerOrProvider: Signer | Provider): Weth {\n    return new Contract(address, _abi, signerOrProvider) as Weth;\n  }\n}\n\nconst _abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Deposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Withdrawal\",\n    type: \"event\",\n  },\n];\n","import React from \"react\";\nimport { Bridge, BridgeFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { useWeb3 } from \"@chainsafe/web3-context\";\nimport { BigNumber, utils } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  chainbridgeConfig,\n  EvmBridgeConfig,\n  TokenConfig,\n} from \"../../../chainbridgeConfig\";\nimport { Erc20DetailedFactory } from \"../../../Contracts/Erc20DetailedFactory\";\nimport { Weth } from \"../../../Contracts/Weth\";\nimport { WethFactory } from \"../../../Contracts/WethFactory\";\nimport { useNetworkManager } from \"../../NetworkManagerContext\";\nimport { IHomeBridgeProviderProps } from \"../interfaces\";\nimport { HomeBridgeContext } from \"../../HomeBridgeContext\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\n\nimport { hasTokenSupplies, getPriceCompatibility } from \"./helpers\";\n\nconst resetAllowanceLogicFor = [\n  \"0xdac17f958d2ee523a2206206994597c13d831ec7\", //USDT\n  \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\", //cUSD CELO\n  // \"0xe09523d86d9b788BCcb580d061605F31FCe69F51\", //сTST CELO cUSD on Rinkeby\n  //Add other offending tokens here\n];\n\nexport const EVMHomeAdaptorProvider = ({\n  children,\n}: IHomeBridgeProviderProps) => {\n  const {\n    isReady,\n    network,\n    provider,\n    gasPrice,\n    address,\n    tokens,\n    wallet,\n    checkIsReady,\n    ethBalance,\n    onboard,\n    resetOnboard,\n  } = useWeb3();\n\n  const getNetworkName = (id: any) => {\n    switch (Number(id)) {\n      case 5:\n        return \"Localhost\";\n      case 1:\n        return \"Mainnet\";\n      case 3:\n        return \"Ropsten\";\n      case 4:\n        return \"Rinkeby\";\n      // case 5:\n      //   return \"Goerli\";\n      case 6:\n        return \"Kotti\";\n      case 42:\n        return \"Kovan\";\n      case 61:\n        return \"Ethereum Classic - Mainnet\";\n      case 42220:\n        return \"CELO - Mainnet\";\n      case 44787:\n        return \"CELO - Alfajores Testnet\";\n      case 62320:\n        return \"CELO - Baklava Testnet\";\n      default:\n        return \"Other\";\n    }\n  };\n\n  const {\n    homeChainConfig,\n    setTransactionStatus,\n    setDepositNonce,\n    handleSetHomeChain,\n    homeChains,\n    setNetworkId,\n  } = useNetworkManager();\n\n  const [homeBridge, setHomeBridge] = useState<Bridge | undefined>(undefined);\n  const [relayerThreshold, setRelayerThreshold] = useState<number | undefined>(\n    undefined\n  );\n  const [bridgeFee, setBridgeFee] = useState<number | undefined>();\n\n  const [depositAmount, setDepositAmount] = useState<number | undefined>();\n  const [selectedToken, setSelectedToken] = useState<string>(\"\");\n\n  // Contracts\n  const [wrapper, setWrapper] = useState<Weth | undefined>(undefined);\n  const [wrapTokenConfig, setWrapperConfig] = useState<TokenConfig | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (network) {\n      const chain = homeChains.find((chain) => chain.networkId === network);\n      setNetworkId(network);\n      if (chain) {\n        handleSetHomeChain(chain.chainId);\n      }\n    }\n  }, [handleSetHomeChain, homeChains, network, setNetworkId]);\n\n  const [initialising, setInitialising] = useState(false);\n  const [walletSelected, setWalletSelected] = useState(false);\n  useEffect(() => {\n    if (initialising || homeBridge || !onboard) return;\n    console.log(\"starting init\");\n    setInitialising(true);\n    if (!walletSelected) {\n      onboard\n        .walletSelect(\"metamask\")\n        .then((success) => {\n          setWalletSelected(success);\n          if (success) {\n            checkIsReady()\n              .then((success) => {\n                if (success) {\n                  if (homeChainConfig && network && isReady && provider) {\n                    const signer = provider.getSigner();\n                    if (!signer) {\n                      console.log(\"No signer\");\n                      setInitialising(false);\n                      return;\n                    }\n\n                    const bridge = BridgeFactory.connect(\n                      (homeChainConfig as EvmBridgeConfig).bridgeAddress,\n                      signer\n                    );\n                    setHomeBridge(bridge);\n\n                    const wrapperToken = homeChainConfig.tokens.find(\n                      (token) => token.isNativeWrappedToken\n                    );\n\n                    if (!wrapperToken) {\n                      setWrapperConfig(undefined);\n                      setWrapper(undefined);\n                    } else {\n                      setWrapperConfig(wrapperToken);\n                      const connectedWeth = WethFactory.connect(\n                        wrapperToken.address,\n                        signer\n                      );\n                      setWrapper(connectedWeth);\n                    }\n                  }\n                }\n              })\n              .catch((error) => {\n                console.error(error);\n              })\n              .finally(() => {\n                setInitialising(false);\n              });\n          }\n        })\n        .catch((error) => {\n          setInitialising(false);\n          console.error(error);\n        });\n    } else {\n      checkIsReady()\n        .then((success) => {\n          if (success) {\n            if (homeChainConfig && network && isReady && provider) {\n              const signer = provider.getSigner();\n              if (!signer) {\n                console.log(\"No signer\");\n                setInitialising(false);\n                return;\n              }\n\n              const bridge = BridgeFactory.connect(\n                (homeChainConfig as EvmBridgeConfig).bridgeAddress,\n                signer\n              );\n              setHomeBridge(bridge);\n\n              const wrapperToken = homeChainConfig.tokens.find(\n                (token) => token.isNativeWrappedToken\n              );\n\n              if (!wrapperToken) {\n                setWrapperConfig(undefined);\n                setWrapper(undefined);\n              } else {\n                setWrapperConfig(wrapperToken);\n                const connectedWeth = WethFactory.connect(\n                  wrapperToken.address,\n                  signer\n                );\n                setWrapper(connectedWeth);\n              }\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          setInitialising(false);\n        });\n    }\n  }, [\n    initialising,\n    homeChainConfig,\n    isReady,\n    provider,\n    checkIsReady,\n    network,\n    homeBridge,\n    onboard,\n    walletSelected,\n  ]);\n\n  useEffect(() => {\n    const getRelayerThreshold = async () => {\n      if (homeBridge) {\n        const threshold = BigNumber.from(\n          await homeBridge._relayerThreshold()\n        ).toNumber();\n        setRelayerThreshold(threshold);\n      }\n    };\n    const getBridgeFee = async () => {\n      if (homeBridge) {\n        const bridgeFee = Number(utils.formatEther(await homeBridge._fee()));\n        setBridgeFee(bridgeFee);\n      }\n    };\n    getRelayerThreshold();\n    getBridgeFee();\n  }, [homeBridge]);\n\n  const handleConnect = useCallback(async () => {\n    if (wallet && wallet.connect && network) {\n      await onboard?.walletSelect(\"metamask\");\n      await wallet.connect();\n    }\n  }, [wallet, network, onboard]);\n\n  const handleCheckSupplies = useCallback(\n    async (\n      amount: number,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (homeChainConfig) {\n        const destinationChain = chainbridgeConfig.chains.find(\n          (c) => c.chainId === destinationChainId\n        );\n        const token = homeChainConfig.tokens.find(\n          (token) => token.address === tokenAddress\n        );\n\n        if (destinationChain?.type === \"Ethereum\" && token) {\n          const hasSupplies = await hasTokenSupplies(\n            destinationChain,\n            tokens,\n            token,\n            amount,\n            tokenAddress\n          );\n          if (!hasSupplies) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    [homeChainConfig, tokens]\n  );\n\n  const deposit = useCallback(\n    async (\n      amount: number,\n      recipient: string,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (!homeChainConfig || !homeBridge) {\n        console.error(\"Home bridge contract is not instantiated\");\n        return;\n      }\n      const signer = provider?.getSigner();\n      if (!address || !signer) {\n        console.log(\"No signer\");\n        return;\n      }\n\n      const destinationChain = chainbridgeConfig.chains.find(\n        (c) => c.chainId === destinationChainId\n      );\n      if (destinationChain?.type === \"Substrate\") {\n        recipient = `0x${Buffer.from(decodeAddress(recipient)).toString(\n          \"hex\"\n        )}`;\n      }\n      const token = homeChainConfig.tokens.find(\n        (token) => token.address === tokenAddress\n      );\n\n      if (!token) {\n        console.log(\"Invalid token selected\");\n        return;\n      }\n      setTransactionStatus(\"Initializing Transfer\");\n      setDepositAmount(amount);\n      setSelectedToken(tokenAddress);\n      const erc20 = Erc20DetailedFactory.connect(tokenAddress, signer);\n      const erc20Decimals = tokens[tokenAddress].decimals;\n\n      const data =\n        \"0x\" +\n        utils\n          .hexZeroPad(\n            // TODO Wire up dynamic token decimals\n            BigNumber.from(\n              utils.parseUnits(amount.toString(), erc20Decimals)\n            ).toHexString(),\n            32\n          )\n          .substr(2) + // Deposit Amount (32 bytes)\n        utils\n          .hexZeroPad(utils.hexlify((recipient.length - 2) / 2), 32)\n          .substr(2) + // len(recipientAddress) (32 bytes)\n        recipient.substr(2); // recipientAddress (?? bytes)\n\n      try {\n        const gasPriceCompatibility = await getPriceCompatibility(\n          provider,\n          homeChainConfig,\n          gasPrice\n        );\n\n        const currentAllowance = await erc20.allowance(\n          address,\n          (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress\n        );\n\n        if (\n          Number(utils.formatUnits(currentAllowance, erc20Decimals)) < amount\n        ) {\n          if (\n            Number(utils.formatUnits(currentAllowance, erc20Decimals)) > 0 &&\n            resetAllowanceLogicFor.includes(tokenAddress)\n          ) {\n            //We need to reset the user's allowance to 0 before we give them a new allowance\n            //TODO Should we alert the user this is happening here?\n            await (\n              await erc20.approve(\n                (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress,\n                BigNumber.from(utils.parseUnits(\"0\", erc20Decimals)),\n                {\n                  gasPrice: gasPriceCompatibility,\n                }\n              )\n            ).wait(1);\n          }\n          await (\n            await erc20.approve(\n              (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress,\n              BigNumber.from(\n                utils.parseUnits(amount.toString(), erc20Decimals)\n              ),\n              {\n                gasPrice: gasPriceCompatibility,\n              }\n            )\n          ).wait(1);\n        }\n        homeBridge.once(\n          homeBridge.filters.Deposit(\n            destinationChainId,\n            token.resourceId,\n            null\n          ),\n          (destChainId, resourceId, depositNonce) => {\n            setDepositNonce(`${depositNonce.toString()}`);\n            setTransactionStatus(\"In Transit\");\n          }\n        );\n\n        await (\n          await homeBridge.deposit(destinationChainId, token.resourceId, data, {\n            gasPrice: gasPriceCompatibility,\n            value: utils.parseUnits((bridgeFee || 0).toString(), 18),\n          })\n        ).wait();\n\n        return Promise.resolve();\n      } catch (error) {\n        console.error(error);\n        setTransactionStatus(\"Transfer Aborted\");\n        setSelectedToken(tokenAddress);\n      }\n    },\n    [\n      homeBridge,\n      address,\n      bridgeFee,\n      homeChainConfig,\n      gasPrice,\n      provider,\n      setDepositNonce,\n      setTransactionStatus,\n      tokens,\n    ]\n  );\n\n  const wrapToken = async (value: number): Promise<string> => {\n    if (!wrapTokenConfig || !wrapper?.deposit || !homeChainConfig)\n      return \"not ready\";\n\n    try {\n      const gasPriceCompatibility = await getPriceCompatibility(\n        provider,\n        homeChainConfig,\n        gasPrice\n      );\n\n      const tx = await wrapper.deposit({\n        value: parseUnits(`${value}`, homeChainConfig.decimals),\n        gasPrice: gasPriceCompatibility,\n      });\n\n      await tx?.wait();\n      if (tx?.hash) {\n        return tx?.hash;\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      console.error(error);\n      return \"\";\n    }\n  };\n\n  const unwrapToken = async (value: number): Promise<string> => {\n    if (!wrapTokenConfig || !wrapper?.withdraw || !homeChainConfig)\n      return \"not ready\";\n\n    try {\n      const gasPriceCompatibility = await getPriceCompatibility(\n        provider,\n        homeChainConfig,\n        gasPrice\n      );\n\n      const tx = await wrapper.deposit({\n        value: parseUnits(`${value}`, homeChainConfig.decimals),\n        gasPrice: gasPriceCompatibility,\n      });\n\n      await tx?.wait();\n      if (tx?.hash) {\n        return tx?.hash;\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      console.error(error);\n      return \"\";\n    }\n  };\n\n  return (\n    <HomeBridgeContext.Provider\n      value={{\n        connect: handleConnect,\n        disconnect: async () => {\n          await resetOnboard();\n        },\n        getNetworkName,\n        bridgeFee,\n        deposit,\n        depositAmount,\n        selectedToken,\n        setDepositAmount,\n        setSelectedToken,\n        tokens,\n        relayerThreshold,\n        wrapTokenConfig,\n        wrapper,\n        wrapToken,\n        unwrapToken,\n        isReady,\n        chainConfig: homeChainConfig,\n        address,\n        nativeTokenBalance: ethBalance,\n        handleCheckSupplies,\n      }}\n    >\n      {children}\n    </HomeBridgeContext.Provider>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/eth.9b4c5748.svg\";","module.exports = __webpack_public_path__ + \"static/media/weth.802c6eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/dai.15edf859.svg\";","module.exports = __webpack_public_path__ + \"static/media/cusd.45c5902a.svg\";","import React from \"react\";\nimport { Bridge, BridgeFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { BigNumber } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { EvmBridgeConfig } from \"../../../chainbridgeConfig\";\nimport { useNetworkManager } from \"../../NetworkManagerContext\";\nimport { IDestinationBridgeProviderProps } from \"../interfaces\";\nimport { DestinationBridgeContext } from \"../../DestinationBridgeContext\";\n\nimport { getProvider } from \"./helpers\";\n\nexport const EVMDestinationAdaptorProvider = ({\n  children,\n}: IDestinationBridgeProviderProps) => {\n  const {\n    depositNonce,\n    destinationChainConfig,\n    homeChainConfig,\n    tokensDispatch,\n    setTransactionStatus,\n    setTransferTxHash,\n    setDepositVotes,\n    depositVotes,\n  } = useNetworkManager();\n\n  const [destinationBridge, setDestinationBridge] = useState<\n    Bridge | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (destinationBridge) return;\n    const provider = getProvider(destinationChainConfig);\n\n    if (destinationChainConfig && provider) {\n      const bridge = BridgeFactory.connect(\n        (destinationChainConfig as EvmBridgeConfig).bridgeAddress,\n        provider\n      );\n      setDestinationBridge(bridge);\n    }\n  }, [destinationChainConfig, destinationBridge]);\n\n  useEffect(() => {\n    if (\n      destinationChainConfig &&\n      homeChainConfig?.chainId !== null &&\n      homeChainConfig?.chainId !== undefined &&\n      destinationBridge &&\n      depositNonce\n    ) {\n      destinationBridge.on(\n        destinationBridge.filters.ProposalEvent(\n          homeChainConfig.chainId,\n          BigNumber.from(depositNonce),\n          null,\n          null,\n          null\n        ),\n        (originChainId, depositNonce, status, resourceId, dataHash, tx) => {\n          switch (BigNumber.from(status).toNumber()) {\n            case 1:\n              tokensDispatch({\n                type: \"addMessage\",\n                payload: `Proposal created on ${destinationChainConfig.name}`,\n              });\n              break;\n            case 2:\n              tokensDispatch({\n                type: \"addMessage\",\n                payload: `Proposal has passed. Executing...`,\n              });\n              break;\n            case 3:\n              setTransactionStatus(\"Transfer Completed\");\n              setTransferTxHash(tx.transactionHash);\n              break;\n            case 4:\n              setTransactionStatus(\"Transfer Aborted\");\n              setTransferTxHash(tx.transactionHash);\n              break;\n          }\n        }\n      );\n\n      destinationBridge.on(\n        destinationBridge.filters.ProposalVote(\n          homeChainConfig.chainId,\n          BigNumber.from(depositNonce),\n          null,\n          null\n        ),\n        async (originChainId, depositNonce, status, resourceId, tx) => {\n          const txReceipt = await tx.getTransactionReceipt();\n          if (txReceipt.status === 1) {\n            setDepositVotes(depositVotes + 1);\n          }\n          tokensDispatch({\n            type: \"addMessage\",\n            payload: {\n              address: String(txReceipt.from),\n              signed: txReceipt.status === 1 ? \"Confirmed\" : \"Rejected\",\n            },\n          });\n        }\n      );\n    }\n    return () => {\n      //@ts-ignore\n      destinationBridge?.removeAllListeners();\n    };\n  }, [\n    depositNonce,\n    homeChainConfig,\n    destinationBridge,\n    depositVotes,\n    destinationChainConfig,\n    setDepositVotes,\n    setTransactionStatus,\n    setTransferTxHash,\n    tokensDispatch,\n  ]);\n\n  return (\n    <DestinationBridgeContext.Provider\n      value={{\n        disconnect: async () => {},\n      }}\n    >\n      {children}\n    </DestinationBridgeContext.Provider>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { DestinationBridgeContext } from \"../DestinationBridgeContext\";\nimport { HomeBridgeContext } from \"../HomeBridgeContext\";\nimport { useNetworkManager } from \"../NetworkManagerContext\";\nimport { createApi, submitDeposit } from \"./SubstrateApis/ChainBridgeAPI\";\nimport {\n  IDestinationBridgeProviderProps,\n  IHomeBridgeProviderProps,\n  InjectedAccountType,\n} from \"./interfaces\";\n\nimport { ApiPromise } from \"@polkadot/api\";\nimport {\n  web3Accounts,\n  web3Enable,\n  web3FromSource,\n} from \"@polkadot/extension-dapp\";\nimport { TypeRegistry } from \"@polkadot/types\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\nimport { BigNumber as BN } from \"bignumber.js\";\nimport { UnsubscribePromise, VoidFn } from \"@polkadot/api/types\";\nimport { utils } from \"ethers\";\nimport {\n  SubstrateBridgeConfig,\n  chainbridgeConfig,\n} from \"../../chainbridgeConfig\";\nimport { hasTokenSupplies } from \"./EVMAdaptors/helpers\";\n\nexport const SubstrateHomeAdaptorProvider = ({\n  children,\n}: IHomeBridgeProviderProps) => {\n  const registry = new TypeRegistry();\n  const [api, setApi] = useState<ApiPromise | undefined>();\n  const [isReady, setIsReady] = useState(false);\n  const [accounts, setAccounts] = useState<InjectedAccountType[]>([]);\n  const [address, setAddress] = useState<string | undefined>(undefined);\n\n  const {\n    homeChainConfig,\n    setTransactionStatus,\n    setDepositNonce,\n    handleSetHomeChain,\n    homeChains,\n  } = useNetworkManager();\n\n  const [relayerThreshold, setRelayerThreshold] = useState<number | undefined>(\n    undefined\n  );\n  const [bridgeFee, setBridgeFee] = useState<number | undefined>(undefined);\n\n  const [depositAmount, setDepositAmount] = useState<number | undefined>();\n  const [selectedToken, setSelectedToken] = useState<string>(\"CSS\");\n\n  const [tokens, setTokens] = useState<Tokens>({});\n\n  useEffect(() => {\n    // Attempt connect on load\n    handleConnect();\n  });\n\n  const [initiaising, setInitialising] = useState(false);\n  useEffect(() => {\n    // Once the chain ID has been set in the network context, the homechain configuration will be automatically set thus triggering this\n    if (!homeChainConfig || initiaising || api) return;\n    setInitialising(true);\n    createApi(homeChainConfig.rpcUrl)\n      .then((api) => {\n        setApi(api);\n        setInitialising(false);\n      })\n      .catch(console.error);\n  }, [homeChainConfig, registry, api, initiaising]);\n\n  const getRelayerThreshold = useCallback(async () => {\n    if (api) {\n      const relayerThreshold = await api.query[\n        (homeChainConfig as SubstrateBridgeConfig).chainbridgePalletName\n      ].relayerThreshold();\n      setRelayerThreshold(Number(relayerThreshold.toHuman()));\n    }\n  }, [api, homeChainConfig]);\n\n  const getBridgeFee = useCallback(async () => {\n    if (api) {\n      const config = homeChainConfig as SubstrateBridgeConfig;\n\n      const fee = config.bridgeFeeFunctionName\n        ? new BN(\n            Number(\n              await api.query[config.transferPalletName][\n                config.bridgeFeeFunctionName\n              ]()\n            )\n          )\n            .shiftedBy(-config.decimals)\n            .toNumber()\n        : config.bridgeFeeValue\n        ? config.bridgeFeeValue\n        : 0;\n\n      setBridgeFee(fee);\n    }\n  }, [api, homeChainConfig]);\n\n  const confirmChainID = useCallback(async () => {\n    if (api) {\n      const currentId = Number(\n        api.consts[\n          (homeChainConfig as SubstrateBridgeConfig).chainbridgePalletName\n        ].bridgeChainId.toHuman()\n      );\n      if (homeChainConfig?.chainId !== currentId) {\n        const correctConfig = homeChains.find(\n          (item) => item.chainId === currentId\n        );\n        if (correctConfig) {\n          handleSetHomeChain(currentId);\n        }\n      }\n    }\n  }, [api, handleSetHomeChain, homeChainConfig, homeChains]);\n\n  useEffect(() => {\n    // For all constants & essential values like:\n    // Relayer Threshold, resources IDs & Bridge Fees\n    // It is recommended to collect state at this point\n    if (api) {\n      if (api.isConnected && homeChainConfig) {\n        getRelayerThreshold();\n        confirmChainID();\n        getBridgeFee();\n      }\n    }\n  }, [api, getRelayerThreshold, getBridgeFee, confirmChainID, homeChainConfig]);\n\n  useEffect(() => {\n    if (!homeChainConfig || !address) return;\n    let unsubscribe: VoidFn | undefined;\n    if (api) {\n      api.query.system\n        .account(address, (result) => {\n          const {\n            data: { free: balance },\n          } = result.toJSON() as any;\n          setTokens({\n            [homeChainConfig.tokens[0].symbol || \"TOKEN\"]: {\n              decimals: homeChainConfig.decimals,\n              balance: parseInt(\n                utils.formatUnits(balance, homeChainConfig.decimals)\n              ),\n              balanceBN: new BN(balance).shiftedBy(-homeChainConfig.decimals),\n              name: homeChainConfig.tokens[0].name,\n              symbol: homeChainConfig.tokens[0].symbol,\n            },\n          });\n        })\n        .then((unsub) => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n    }\n    return () => {\n      unsubscribe && unsubscribe();\n    };\n  }, [api, address, homeChainConfig]);\n\n  const handleConnect = useCallback(async () => {\n    // Requests permission to inject the wallet\n    if (!isReady) {\n      web3Enable(\"chainbridge-ui\")\n        .then(() => {\n          // web3Account resolves with the injected accounts\n          // or an empty array\n          web3Accounts()\n            .then((accounts) => {\n              return accounts.map(({ address, meta }) => ({\n                address,\n                meta: {\n                  ...meta,\n                  name: `${meta.name} (${meta.source})`,\n                },\n              }));\n            })\n            .then((injectedAccounts) => {\n              // This is where the correct chain configuration is set to the network context\n              // Any operations before presenting the accounts to the UI or providing the config\n              // to the rest of the dapp should be done here\n              setAccounts(injectedAccounts);\n              if (injectedAccounts.length === 1) {\n                setAddress(injectedAccounts[0].address);\n              }\n              handleSetHomeChain(\n                homeChains.find((item) => item.type === \"Substrate\")?.chainId\n              );\n            })\n            .catch(console.error);\n        })\n        .catch(console.error);\n    }\n  }, [isReady, handleSetHomeChain, homeChains]);\n\n  useEffect(() => {\n    // This is a simple check\n    // The reason for having a isReady is that the UI can lazy load data from this point\n    api?.isReady.then(() => setIsReady(true));\n  }, [api, setIsReady]);\n\n  const selectAccount = useCallback(\n    (index: number) => {\n      setAddress(accounts[index].address);\n    },\n    [accounts]\n  );\n\n  const deposit = useCallback(\n    async (\n      amount: number,\n      recipient: string,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (api && address) {\n        const allAccounts = await web3Accounts();\n        const targetAccount = allAccounts.find(\n          (item) => item.address === address\n        );\n        if (targetAccount) {\n          const transferExtrinsic = submitDeposit(\n            api,\n            amount,\n            recipient,\n            destinationChainId\n          );\n\n          const injector = await web3FromSource(targetAccount.meta.source);\n          setTransactionStatus(\"Initializing Transfer\");\n          setDepositAmount(amount);\n          transferExtrinsic\n            .signAndSend(\n              address,\n              { signer: injector.signer },\n              ({ status, events }) => {\n                status.isInBlock &&\n                  console.log(\n                    `Completed at block hash #${status.isInBlock.toString()}`\n                  );\n\n                if (status.isFinalized) {\n                  events.filter(({ event }) => {\n                    return api.events[\n                      (homeChainConfig as SubstrateBridgeConfig)\n                        .chainbridgePalletName\n                    ].FungibleTransfer.is(event);\n                  });\n                  api.query[\n                    (homeChainConfig as SubstrateBridgeConfig)\n                      .chainbridgePalletName\n                  ]\n                    .chainNonces(destinationChainId)\n                    .then((response) => {\n                      setDepositNonce(`${response.toJSON()}`);\n                      setTransactionStatus(\"In Transit\");\n                    })\n                    .catch((error) => {\n                      console.error(error);\n                    });\n                } else {\n                  console.log(`Current status: ${status.type}`);\n                }\n              }\n            )\n            .catch((error: any) => {\n              console.log(\":( transaction failed\", error);\n              setTransactionStatus(\"Transfer Aborted\");\n            });\n        }\n      }\n    },\n    [api, setDepositNonce, setTransactionStatus, address, homeChainConfig]\n  );\n\n  // Required for adaptor however not needed for substrate\n  const wrapToken = async (value: number): Promise<string> => {\n    return \"Not implemented\";\n  };\n\n  // Required for adaptor however not needed for substrate\n  const unwrapToken = async (value: number): Promise<string> => {\n    return \"Not implemented\";\n  };\n\n  const handleCheckSupplies = useCallback(\n    async (\n      amount: number,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (homeChainConfig) {\n        const destinationChain = chainbridgeConfig.chains.find(\n          (c) => c.chainId === destinationChainId\n        );\n        const token = homeChainConfig.tokens.find(\n          (token) => token.address === tokenAddress\n        );\n\n        if (destinationChain?.type === \"Ethereum\" && token) {\n          const hasSupplies = await hasTokenSupplies(\n            destinationChain,\n            tokens,\n            token,\n            amount,\n            tokenAddress\n          );\n          if (!hasSupplies) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    [homeChainConfig, tokens]\n  );\n\n  return (\n    <HomeBridgeContext.Provider\n      value={{\n        connect: handleConnect,\n        disconnect: async () => {\n          await api?.disconnect();\n        },\n        getNetworkName: () => homeChainConfig?.name || \"undefined\",\n        bridgeFee,\n        deposit,\n        depositAmount,\n        selectedToken,\n        setDepositAmount,\n        setSelectedToken,\n        tokens: tokens,\n        relayerThreshold,\n        wrapTokenConfig: undefined, // Not implemented\n        wrapper: undefined, // Not implemented\n        wrapToken, // Not implemented\n        unwrapToken, // Not implemented\n        isReady: isReady,\n        chainConfig: homeChainConfig,\n        address: address,\n        nativeTokenBalance: 0,\n        accounts: accounts,\n        selectAccount: selectAccount,\n        handleCheckSupplies,\n      }}\n    >\n      {children}\n    </HomeBridgeContext.Provider>\n  );\n};\n\nexport const SubstrateDestinationAdaptorProvider = ({\n  children,\n}: IDestinationBridgeProviderProps) => {\n  const {\n    depositNonce,\n    destinationChainConfig,\n    setDepositVotes,\n    depositVotes,\n    tokensDispatch,\n    setTransactionStatus,\n  } = useNetworkManager();\n\n  const [api, setApi] = useState<ApiPromise | undefined>();\n\n  const [initiaising, setInitialising] = useState(false);\n  useEffect(() => {\n    // Once the chain ID has been set in the network context, the destination configuration will be automatically\n    // set thus triggering this\n    if (!destinationChainConfig || initiaising || api) return;\n    setInitialising(true);\n    createApi(destinationChainConfig.rpcUrl)\n      .then((api) => {\n        setApi(api);\n        setInitialising(false);\n      })\n      .catch(console.error);\n  }, [destinationChainConfig, api, initiaising]);\n\n  const [listenerActive, setListenerActive] = useState<\n    UnsubscribePromise | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (api && !listenerActive && depositNonce) {\n      // Wire up event listeners\n      // Subscribe to system events via storage\n      const unsubscribe = api.query.system.events((events) => {\n        console.log(\"----- Received \" + events.length + \" event(s): -----\");\n        // loop through the Vec<EventRecord>\n        events.forEach((record) => {\n          // extract the phase, event and the event types\n          const { event, phase } = record;\n          const types = event.typeDef;\n          // show what we are busy with\n          console.log(\n            event.section +\n              \":\" +\n              event.method +\n              \"::\" +\n              \"phase=\" +\n              phase.toString()\n          );\n          console.log(event.meta.documentation.toString());\n          // loop through each of the parameters, displaying the type and data\n          event.data.forEach((data, index) => {\n            console.log(types[index].type + \";\" + data.toString());\n          });\n\n          if (\n            event.section ===\n              (destinationChainConfig as SubstrateBridgeConfig)\n                .chainbridgePalletName &&\n            event.method === \"VoteFor\"\n          ) {\n            setDepositVotes(depositVotes + 1);\n            tokensDispatch({\n              type: \"addMessage\",\n              payload: {\n                address: \"Substrate Relayer\",\n                signed: \"Confirmed\",\n              },\n            });\n          }\n\n          if (\n            event.section ===\n              (destinationChainConfig as SubstrateBridgeConfig)\n                .chainbridgePalletName &&\n            event.method === \"ProposalApproved\"\n          ) {\n            setDepositVotes(depositVotes + 1);\n            setTransactionStatus(\"Transfer Completed\");\n          }\n        });\n      });\n      setListenerActive(unsubscribe);\n    } else if (listenerActive && !depositNonce) {\n      const unsubscribeCall = async () => {\n        setListenerActive(undefined);\n      };\n      unsubscribeCall();\n    }\n  }, [\n    api,\n    depositNonce,\n    depositVotes,\n    destinationChainConfig,\n    listenerActive,\n    setDepositVotes,\n    setTransactionStatus,\n    tokensDispatch,\n  ]);\n\n  return (\n    <DestinationBridgeContext.Provider\n      value={{\n        disconnect: async () => {\n          await api?.disconnect();\n        },\n      }}\n    >\n      {children}\n    </DestinationBridgeContext.Provider>\n  );\n};\n","import { Vote } from \"../NetworkManagerContext\";\n\nexport type AddMessageAction = { type: \"addMessage\"; payload: string | Vote };\nexport type ResetAction = { type: \"resetMessages\" };\n\nexport function transitMessageReducer(\n  transitMessage: Array<string | Vote>,\n  action: AddMessageAction | ResetAction\n) {\n  switch (action.type) {\n    case \"addMessage\":\n      return [...transitMessage, action.payload];\n    case \"resetMessages\":\n      return [];\n    default:\n      return transitMessage;\n  }\n}\n","import React, {\n  Dispatch,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport {\n  BridgeConfig,\n  chainbridgeConfig,\n  ChainType,\n} from \"../chainbridgeConfig\";\nimport {\n  EVMDestinationAdaptorProvider,\n  EVMHomeAdaptorProvider,\n} from \"./Adaptors/EVMAdaptors\";\nimport { IDestinationBridgeProviderProps } from \"./Adaptors/interfaces\";\nimport {\n  SubstrateDestinationAdaptorProvider,\n  SubstrateHomeAdaptorProvider,\n} from \"./Adaptors/SubstrateAdaptors\";\nimport { DestinationBridgeContext } from \"./DestinationBridgeContext\";\nimport { HomeBridgeContext } from \"./HomeBridgeContext\";\nimport {\n  AddMessageAction,\n  ResetAction,\n  transitMessageReducer,\n} from \"./Reducers/TransitMessageReducer\";\n\ninterface INetworkManagerProviderProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport type WalletType = ChainType | \"select\" | \"unset\";\n\nexport type Vote = {\n  address: string;\n  signed: \"Confirmed\" | \"Rejected\";\n};\n\nexport type TransactionStatus =\n  | \"Initializing Transfer\"\n  | \"In Transit\"\n  | \"Transfer Completed\"\n  | \"Transfer Aborted\";\n\ninterface NetworkManagerContext {\n  walletType: WalletType;\n  setWalletType: (walletType: WalletType) => void;\n\n  networkId: number;\n  setNetworkId: (id: number) => void;\n\n  chainId?: number;\n\n  homeChainConfig: BridgeConfig | undefined;\n  destinationChainConfig: BridgeConfig | undefined;\n\n  destinationChains: Array<{ chainId: number; name: string }>;\n  homeChains: BridgeConfig[];\n  handleSetHomeChain: (chainId: number | undefined) => void;\n  setDestinationChain: (chainId: number | undefined) => void;\n\n  transactionStatus?: TransactionStatus;\n  setTransactionStatus: (message: TransactionStatus | undefined) => void;\n  inTransitMessages: Array<string | Vote>;\n\n  setDepositVotes: (input: number) => void;\n  depositVotes: number;\n\n  setDepositNonce: (input: string | undefined) => void;\n  depositNonce: string | undefined;\n\n  tokensDispatch: Dispatch<AddMessageAction | ResetAction>;\n\n  setTransferTxHash: (input: string) => void;\n  transferTxHash: string;\n}\n\nconst NetworkManagerContext = React.createContext<\n  NetworkManagerContext | undefined\n>(undefined);\n\nconst NetworkManagerProvider = ({ children }: INetworkManagerProviderProps) => {\n  const [walletType, setWalletType] = useState<WalletType>(\"unset\");\n\n  const [networkId, setNetworkId] = useState(0);\n\n  const [homeChainConfig, setHomeChainConfig] = useState<\n    BridgeConfig | undefined\n  >();\n  const [homeChains, setHomeChains] = useState<BridgeConfig[]>([]);\n  const [destinationChainConfig, setDestinationChain] = useState<\n    BridgeConfig | undefined\n  >();\n  const [destinationChains, setDestinationChains] = useState<BridgeConfig[]>(\n    []\n  );\n\n  const [transferTxHash, setTransferTxHash] = useState<string>(\"\");\n  const [transactionStatus, setTransactionStatus] = useState<\n    TransactionStatus | undefined\n  >(undefined);\n  const [depositNonce, setDepositNonce] = useState<string | undefined>(\n    undefined\n  );\n  const [depositVotes, setDepositVotes] = useState<number>(0);\n  const [inTransitMessages, tokensDispatch] = useReducer(\n    transitMessageReducer,\n    []\n  );\n\n  const handleSetHomeChain = useCallback(\n    (chainId: number | undefined) => {\n      if (!chainId && chainId !== 0) {\n        setHomeChainConfig(undefined);\n        return;\n      }\n      const chain = homeChains.find((c) => c.chainId === chainId);\n\n      if (chain) {\n        setHomeChainConfig(chain);\n        setDestinationChains(\n          chainbridgeConfig.chains.filter(\n            (bridgeConfig: BridgeConfig) =>\n              bridgeConfig.chainId !== chain.chainId\n          )\n        );\n        if (chainbridgeConfig.chains.length === 2) {\n          setDestinationChain(\n            chainbridgeConfig.chains.find(\n              (bridgeConfig: BridgeConfig) =>\n                bridgeConfig.chainId !== chain.chainId\n            )\n          );\n        }\n      }\n    },\n    [homeChains, setHomeChainConfig]\n  );\n\n  useEffect(() => {\n    if (walletType !== \"unset\") {\n      if (walletType === \"select\") {\n        setHomeChains(chainbridgeConfig.chains);\n      } else {\n        setHomeChains(\n          chainbridgeConfig.chains.filter(\n            (bridgeConfig: BridgeConfig) => bridgeConfig.type === walletType\n          )\n        );\n      }\n    } else {\n      setHomeChains([]);\n    }\n  }, [walletType]);\n\n  const handleSetDestination = useCallback(\n    (chainId: number | undefined) => {\n      if (chainId === undefined) {\n        setDestinationChain(undefined);\n      } else if (homeChainConfig && !depositNonce) {\n        const chain = destinationChains.find((c) => c.chainId === chainId);\n        if (!chain) {\n          throw new Error(\"Invalid destination chain selected\");\n        }\n        setDestinationChain(chain);\n      } else {\n        throw new Error(\"Home chain not selected\");\n      }\n    },\n    [depositNonce, destinationChains, homeChainConfig]\n  );\n\n  const DestinationProvider = ({\n    children,\n  }: IDestinationBridgeProviderProps) => {\n    if (destinationChainConfig?.type === \"Ethereum\") {\n      return (\n        <EVMDestinationAdaptorProvider>\n          {children}\n        </EVMDestinationAdaptorProvider>\n      );\n    } else if (destinationChainConfig?.type === \"Substrate\") {\n      return (\n        <SubstrateDestinationAdaptorProvider>\n          {children}\n        </SubstrateDestinationAdaptorProvider>\n      );\n    } else {\n      return (\n        <DestinationBridgeContext.Provider\n          value={{\n            disconnect: async () => {},\n          }}\n        >\n          {children}\n        </DestinationBridgeContext.Provider>\n      );\n    }\n  };\n\n  return (\n    <NetworkManagerContext.Provider\n      value={{\n        chainId: homeChainConfig?.chainId,\n        networkId,\n        setNetworkId,\n        homeChainConfig,\n        setWalletType,\n        walletType,\n        homeChains: homeChains,\n        destinationChains,\n        inTransitMessages,\n        handleSetHomeChain,\n        setDestinationChain: handleSetDestination,\n        destinationChainConfig,\n        transactionStatus,\n        setTransactionStatus,\n        depositNonce,\n        depositVotes,\n        setDepositNonce,\n        setDepositVotes,\n        tokensDispatch,\n        setTransferTxHash,\n        transferTxHash,\n      }}\n    >\n      {walletType === \"Ethereum\" ? (\n        <EVMHomeAdaptorProvider>\n          <DestinationProvider>{children}</DestinationProvider>\n        </EVMHomeAdaptorProvider>\n      ) : walletType === \"Substrate\" ? (\n        <SubstrateHomeAdaptorProvider>\n          <DestinationProvider>{children}</DestinationProvider>\n        </SubstrateHomeAdaptorProvider>\n      ) : (\n        <HomeBridgeContext.Provider\n          value={{\n            connect: async () => undefined,\n            disconnect: async () => {},\n            getNetworkName: (id: any) => \"\",\n            isReady: false,\n            selectedToken: \"\",\n            deposit: async (\n              amount: number,\n              recipient: string,\n              tokenAddress: string,\n              destinationChainId: number\n            ) => undefined,\n            setDepositAmount: () => undefined,\n            tokens: {},\n            setSelectedToken: (input: string) => undefined,\n            address: undefined,\n            bridgeFee: undefined,\n            chainConfig: undefined,\n            depositAmount: undefined,\n            nativeTokenBalance: undefined,\n            relayerThreshold: undefined,\n            wrapTokenConfig: undefined,\n            wrapper: undefined,\n            wrapToken: async (value: number) => \"\",\n            unwrapToken: async (value: number) => \"\",\n          }}\n        >\n          <DestinationProvider>{children}</DestinationProvider>\n        </HomeBridgeContext.Provider>\n      )}\n    </NetworkManagerContext.Provider>\n  );\n};\n\nconst useNetworkManager = () => {\n  const context = useContext(NetworkManagerContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useNetworkManager must be called within a HomeNetworkProvider\"\n    );\n  }\n  return context;\n};\n\nexport { NetworkManagerProvider, useNetworkManager };\n","var map = {\n\t\"./ChainBridgeAPI\": [\n\t\t553,\n\t\t9\n\t],\n\t\"./ChainBridgeAPI.tsx\": [\n\t\t553,\n\t\t9\n\t],\n\t\"./bridgeTypes\": [\n\t\t1312,\n\t\t3,\n\t\t14\n\t],\n\t\"./bridgeTypes.json\": [\n\t\t1312,\n\t\t3,\n\t\t14\n\t],\n\t\"./centrifuge-types\": [\n\t\t1313,\n\t\t9,\n\t\t12\n\t],\n\t\"./centrifuge-types.ts\": [\n\t\t1313,\n\t\t9,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1600;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport { Drawer, IDrawerProps } from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      backgroundColor: `${palette.additional[\"gray\"][9]} !important`,\n      color: palette.common.white.main,\n      border: \"none\",\n      padding: `${constants.generalUnit * 3}px ${constants.generalUnit * 4}px`,\n    },\n    backdrop: {\n      backgroundColor: `${palette.additional[\"gray\"][9]} !important`,\n      opacity: `0.6 !important`,\n    },\n  })\n);\n\ninterface ICustomDrawerProps extends IDrawerProps {}\n\nconst CustomDrawer: React.FC<ICustomDrawerProps> = ({\n  children,\n  className,\n  ...rest\n}: ICustomDrawerProps) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      classNames={{\n        backdrop: classes.backdrop,\n      }}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default CustomDrawer;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      \"& *\": {\n        marginRight: constants.generalUnit,\n        textDecoration: \"none\",\n      },\n    },\n  })\n);\n\ninterface IAboutDrawerProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst AboutDrawer: React.FC<IAboutDrawerProps> = ({\n  open,\n  close,\n}: IAboutDrawerProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer onClose={close} open={open} className={classes.root}>\n      <Typography variant=\"h1\" component=\"h4\">\n        What is ChainBridge?\n      </Typography>\n      <Typography component=\"p\" variant=\"h5\">\n        ChainBridge is a modular multi-directional blockchain bridge to allow\n        data and value transfer between any number of blockchains. This should\n        enable users to specify a destination blockchain from their source\n        chain, and send data to that blockchain for consumption on the\n        destination chain. <br />\n        <br />\n        This could be a token that is locked on ChainA and redeemed on ChainB,\n        or an operation that is executed on a destination chain and initiated on\n        the source chain.\n      </Typography>\n      <section className={classes.buttons}>\n        <Button onClick={() => close()} variant=\"outline\">\n          OK\n        </Button>\n        <a\n          rel=\"noopener noreferrer\"\n          href={process.env.REACT_APP_SUPPORT_URL}\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\">\n            Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n          </Button>\n        </a>\n      </section>\n    </CustomDrawer>\n  );\n};\n\nexport default AboutDrawer;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport { useHomeBridge } from \"../Contexts/HomeBridgeContext\";\nimport { useDestinationBridge } from \"../Contexts/DestinationBridgeContext\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {},\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        marginTop: constants.generalUnit * 2,\n        marginRight: constants.generalUnit,\n        textDecoration: \"none\",\n      },\n    },\n    paragraph: {\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n  })\n);\n\ninterface IChangeNetworkDrawerProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst ChangeNetworkDrawer: React.FC<IChangeNetworkDrawerProps> = ({\n  open,\n  close,\n}) => {\n  const classes = useStyles();\n\n  const {\n    setWalletType,\n    handleSetHomeChain,\n    setDestinationChain,\n  } = useNetworkManager();\n  const { disconnect } = useHomeBridge();\n  const destinationBridge = useDestinationBridge();\n\n  return (\n    <CustomDrawer open={open} className={classes.root}>\n      <Typography variant=\"h3\" component=\"h2\">\n        Changing Networks\n      </Typography>\n      <Typography className={classes.paragraph} component=\"p\" variant=\"h5\">\n        To change networks, please open your browser wallet and change networks\n        there. If your wallet does not support your desired home network, please\n        connect a different wallet. <br />\n        <br />\n        Note: your transfer settings will be reset.\n      </Typography>\n      <section className={classes.buttons}>\n        <Button onClick={close} variant=\"outline\">\n          OK\n        </Button>\n        <Button\n          onClick={async () => {\n            // TODO: trigger unsubscribes & clear all state\n            await Promise.all([destinationBridge.disconnect(), disconnect()]);\n            handleSetHomeChain(undefined);\n            setDestinationChain(undefined);\n            setWalletType(\"select\");\n          }}\n          variant=\"outline\"\n        >\n          Connect different wallet\n        </Button>\n        <a\n          rel=\"noopener noreferrer\"\n          href={process.env.REACT_APP_SUPPORT_URL}\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\">\n            Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n          </Button>\n        </a>\n      </section>\n    </CustomDrawer>\n  );\n};\n\nexport default ChangeNetworkDrawer;\n","const { decodeAddress, encodeAddress } = require(\"@polkadot/keyring\");\nconst { hexToU8a, isHex } = require(\"@polkadot/util\");\n\nexport const shortenAddress = (address: string) => {\n  return `${address.substr(0, 6)}...${address.substr(address.length - 6, 6)}`;\n};\n\nexport const isValidSubstrateAddress = (address: string) => {\n  try {\n    encodeAddress(isHex(address) ? hexToU8a(address) : decodeAddress(address));\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\nimport { shortenAddress } from \"../Utils/Helpers\";\n\nconst useStyles = makeStyles(({ constants, palette, zIndex }: ITheme) =>\n  createStyles({\n    root: {\n      zIndex: zIndex?.blocker,\n      position: \"absolute\",\n      \"& li\": {\n        position: \"relative\",\n        padding: `${constants.generalUnit}px 0 ${constants.generalUnit}px ${\n          constants.generalUnit * 8\n        }px`,\n        \"&:before\": {\n          content: \"''\",\n          display: \"block\",\n          backgroundColor: palette.additional[\"gray\"][2],\n          height: constants.generalUnit,\n          width: constants.generalUnit,\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: constants.generalUnit * 4,\n          transform: \"translate(-50%, -50%)\",\n        },\n      },\n    },\n    subtitle: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    agreement: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    startButton: {\n      backgroundColor: palette.additional[\"preflight\"][1],\n      color: palette.additional[\"preflight\"][2],\n      marginBottom: constants.generalUnit * 2,\n    },\n    backdrop: {\n      position: \"absolute\",\n      zIndex: zIndex?.layer4,\n    },\n  })\n);\n\ninterface IPreflightModalTransferProps {\n  open: boolean;\n  close: () => void;\n  sender: string;\n  receiver: string;\n  value: number;\n  tokenSymbol: string;\n  sourceNetwork: string;\n  targetNetwork: string;\n  start: () => void;\n}\n\nconst PreflightModalTransfer: React.FC<IPreflightModalTransferProps> = ({\n  open,\n  close,\n  receiver,\n  sender,\n  sourceNetwork,\n  targetNetwork,\n  tokenSymbol,\n  value,\n  start,\n}: IPreflightModalTransferProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer\n      className={classes.root}\n      classNames={{\n        backdrop: classes.backdrop,\n      }}\n      size={430}\n      open={open}\n    >\n      <Typography variant=\"h3\" component=\"h2\">\n        Pre-flight check\n      </Typography>\n      <Typography className={classes.subtitle} variant=\"h5\" component=\"p\">\n        Please be advised this is an experimental application:\n      </Typography>\n      <ul>\n        <li>\n          <Typography variant=\"h5\">\n            You will not be able to cancel the transaction once you submit it.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Your transaction could get stuck for an indefinite amount of time\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Funds cannot be returned if they are sent to the wrong address.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            The transaction fee may be higher than expected.\n          </Typography>\n        </li>\n      </ul>\n      <Typography className={classes.agreement} variant=\"h5\" component=\"p\">\n        I agree and want to send{\" \"}\n        <strong>\n          {value} {tokenSymbol}\n        </strong>{\" \"}\n        from&nbsp;\n        <strong>{shortenAddress(sender)}</strong> on{\" \"}\n        <strong>{sourceNetwork}</strong> to&nbsp;\n        <strong>{shortenAddress(receiver)}</strong> on{\" \"}\n        <strong>{targetNetwork}</strong>.\n      </Typography>\n      <Button onClick={start} className={classes.startButton} fullsize>\n        Start Transfer\n      </Button>\n      <Button onClick={close}>Back</Button>\n    </CustomDrawer>\n  );\n};\n\nexport default PreflightModalTransfer;\n","import React, { useCallback, useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport {\n  CheckboxInput,\n  FormikTextInputProps,\n  TextInput,\n} from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\nimport { useField } from \"formik\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {},\n    input: {\n      margin: 0,\n      width: \"100%\",\n    },\n    label: {\n      marginBottom: constants.generalUnit,\n    },\n    checkbox: {\n      marginTop: constants.generalUnit * 3,\n    },\n  })\n);\n\ninterface IAddressInput extends FormikTextInputProps {\n  senderAddress: string;\n  classNames?: {\n    input?: string;\n  };\n  sendToSameAccountHelper?: boolean;\n}\n\nconst AddressInput: React.FC<IAddressInput> = ({\n  classNames,\n  senderAddress,\n  className,\n  inputVariant = \"default\",\n  type = \"text\",\n  placeholder,\n  name,\n  size,\n  label,\n  labelClassName,\n  captionMessage,\n  sendToSameAccountHelper = false,\n  ...rest\n}: IAddressInput) => {\n  const classes = useStyles();\n  const [field, meta, helpers] = useField(name);\n\n  const [stored, setStored] = useState<string | undefined>();\n\n  const toggleReceiver = useCallback(() => {\n    if (stored === undefined) {\n      setStored(field.value);\n      helpers.setValue(senderAddress);\n    } else {\n      helpers.setValue(stored);\n      setStored(undefined);\n    }\n  }, [helpers, field, senderAddress, stored, setStored]);\n\n  return (\n    <section className={clsx(classes.root, className)}>\n      <div>\n        <TextInput\n          {...rest}\n          label={label ? label : field.name}\n          inputVariant={inputVariant}\n          type={type}\n          size={size}\n          className={clsx(classNames?.input, classes.input)}\n          labelClassName={clsx(labelClassName, classes.label)}\n          name={field.name}\n          value={field.value}\n          placeholder={placeholder}\n          captionMessage={\n            meta.error ? `${meta.error}` : captionMessage && captionMessage\n          }\n          state={meta.error ? \"error\" : undefined}\n          onChange={helpers.setValue}\n          disabled={stored !== undefined}\n        />\n      </div>\n      {sendToSameAccountHelper && (\n        <div className={classes.checkbox}>\n          <CheckboxInput\n            label=\"I want to send funds to my address\"\n            value={stored !== undefined}\n            onChange={() => toggleReceiver()}\n          />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default AddressInput;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport { IModalProps, Modal } from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {\n      height: `100% !important`,\n      borderTopLeftRadius: constants.generalUnit / 2,\n      borderTopRightRadius: constants.generalUnit / 2,\n      overflow: \"hidden\",\n      position: \"absolute\",\n    },\n  })\n);\n\ninterface ICustomModalProps extends IModalProps {}\n\nconst CustomModal: React.FC<ICustomModalProps> = ({\n  children,\n  className,\n  ...rest\n}: ICustomModalProps) => {\n  const classes = useStyles();\n\n  return (\n    <Modal className={clsx(classes.root, className)} {...rest}>\n      {children}\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","import React from \"react\";\nimport { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport {\n  Button,\n  Modal,\n  ProgressBar,\n  Typography,\n} from \"@chainsafe/common-components\";\n\nconst useStyles = makeStyles(({ constants, palette, zIndex }: ITheme) => {\n  return createStyles({\n    root: {},\n    slide: {\n      borderRadius: constants.generalUnit / 2,\n      padding: `${constants.generalUnit}px ${constants.generalUnit * 2}px`,\n      \"& > p\": {\n        marginTop: constants.generalUnit * 2,\n        marginBottom: constants.generalUnit * 3,\n        textAlign: \"center\",\n      },\n    },\n    buttons: {\n      marginBottom: constants.generalUnit * 2,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n    },\n  });\n});\n\nconst NetworkSelectModal = () => {\n  const classes = useStyles();\n  const { isReady } = useChainbridge();\n  const { walletType, setWalletType } = useNetworkManager();\n\n  return (\n    <Modal\n      active={walletType !== \"unset\" && walletType !== \"Ethereum\" && !isReady}\n      closePosition=\"right\"\n      className={classes.root}\n      injectedClass={{\n        inner: classes.slide,\n      }}\n    >\n      {walletType === \"select\" && (\n        <>\n          <Typography variant=\"h3\" component=\"p\">\n            Please select a wallet type\n          </Typography>\n          <section className={classes.buttons}>\n            <Button onClick={() => setWalletType(\"Ethereum\")}>\n              Use Ethereum wallet\n            </Button>\n            <Button onClick={() => setWalletType(\"Substrate\")} disabled>\n              Use Substrate wallet\n            </Button>\n          </section>\n        </>\n      )}\n      {walletType === \"Substrate\" && (\n        <>\n          <Typography variant=\"h2\" component=\"p\">\n            Connecting to node\n          </Typography>\n          <ProgressBar size=\"small\" variant=\"primary\" />\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NetworkSelectModal;\n","import React, { useCallback, useContext } from \"react\";\nimport {\n  BridgeConfig,\n  chainbridgeConfig,\n  TokenConfig,\n} from \"../chainbridgeConfig\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\nimport {\n  TransactionStatus,\n  useNetworkManager,\n  Vote,\n} from \"./NetworkManagerContext\";\nimport { useHomeBridge } from \"./HomeBridgeContext\";\nimport NetworkSelectModal from \"../Modules/NetworkSelectModal\";\n\ninterface IChainbridgeContextProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\ntype ChainbridgeContext = {\n  homeConfig: BridgeConfig | undefined;\n  connect: () => Promise<void>;\n  handleSetHomeChain: (chainId: number) => void;\n  setDestinationChain: (chainId: number | undefined) => void;\n  destinationChains: Array<{ chainId: number; name: string }>;\n  destinationChainConfig?: BridgeConfig;\n  deposit(\n    amount: number,\n    recipient: string,\n    tokenAddress: string\n  ): Promise<void>;\n  resetDeposit(): void;\n  depositVotes: number;\n  relayerThreshold?: number;\n  depositNonce?: string;\n  depositAmount?: number;\n  bridgeFee?: number;\n  inTransitMessages: Array<string | Vote>;\n  transferTxHash?: string;\n  selectedToken?: string;\n  transactionStatus?: TransactionStatus;\n  wrapToken: (value: number) => Promise<string>;\n  unwrapToken: (value: number) => Promise<string>;\n  wrapTokenConfig: TokenConfig | undefined;\n  tokens: Tokens;\n  nativeTokenBalance: number | undefined;\n  isReady: boolean | undefined;\n  address: string | undefined;\n  chainId?: number;\n  checkSupplies?: (\n    amount: number,\n    tokenAddress: string,\n    destinationChainId: number\n  ) => Promise<boolean | undefined>;\n};\n\nconst ChainbridgeContext = React.createContext<ChainbridgeContext | undefined>(\n  undefined\n);\n\nconst ChainbridgeProvider = ({ children }: IChainbridgeContextProps) => {\n  const {\n    handleSetHomeChain,\n    destinationChainConfig,\n    setTransactionStatus,\n    setDestinationChain,\n    setDepositNonce,\n    setDepositVotes,\n    transferTxHash,\n    inTransitMessages,\n    tokensDispatch,\n    transactionStatus,\n    depositNonce,\n    depositVotes,\n    homeChainConfig,\n    destinationChains,\n    chainId,\n  } = useNetworkManager();\n\n  const {\n    connect,\n    setDepositAmount,\n    setSelectedToken,\n    chainConfig,\n    deposit,\n    relayerThreshold,\n    nativeTokenBalance,\n    address,\n    selectedToken,\n    bridgeFee,\n    depositAmount,\n    isReady,\n    wrapTokenConfig,\n    tokens,\n    wrapToken,\n    unwrapToken,\n    handleCheckSupplies,\n  } = useHomeBridge();\n\n  const resetDeposit = () => {\n    chainbridgeConfig.chains.length > 2 && setDestinationChain(undefined);\n    setTransactionStatus(undefined);\n    setDepositNonce(undefined);\n    setDepositVotes(0);\n    setDepositAmount(undefined);\n    tokensDispatch({\n      type: \"resetMessages\",\n    });\n    setSelectedToken(\"\");\n  };\n\n  const handleDeposit = useCallback(\n    async (amount: number, recipient: string, tokenAddress: string) => {\n      if (chainConfig && destinationChainConfig) {\n        return await deposit(\n          amount,\n          recipient,\n          tokenAddress,\n          destinationChainConfig.chainId\n        );\n      }\n    },\n    [deposit, destinationChainConfig, chainConfig]\n  );\n\n  const checkSupplies = async (\n    amount: number,\n    tokenAddress: string,\n    destinationChainId: number\n  ) => {\n    console.log(\"handleCheckSupplies\", handleCheckSupplies);\n    console.log(\"chainConfig\", chainConfig);\n    console.log(\"destinationChainConfig\", destinationChainConfig);\n\n    if (handleCheckSupplies && chainConfig && destinationChainConfig) {\n      return await handleCheckSupplies(\n        amount,\n        tokenAddress,\n        destinationChainId\n      );\n    }\n  };\n\n  return (\n    <ChainbridgeContext.Provider\n      value={{\n        homeConfig: homeChainConfig,\n        connect,\n        destinationChains,\n        handleSetHomeChain,\n        setDestinationChain,\n        resetDeposit,\n        deposit: handleDeposit,\n        destinationChainConfig,\n        depositVotes,\n        relayerThreshold,\n        depositNonce,\n        bridgeFee,\n        transactionStatus,\n        inTransitMessages,\n        depositAmount: depositAmount,\n        transferTxHash: transferTxHash,\n        selectedToken: selectedToken,\n        // TODO: Confirm if EVM specific\n        wrapToken,\n        wrapTokenConfig: wrapTokenConfig,\n        unwrapToken,\n        isReady: isReady,\n        nativeTokenBalance: nativeTokenBalance,\n        tokens,\n        address,\n        chainId,\n        checkSupplies,\n      }}\n    >\n      <NetworkSelectModal />\n      {children}\n    </ChainbridgeContext.Provider>\n  );\n};\n\nconst useChainbridge = () => {\n  const context = useContext(ChainbridgeContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useChainbridge must be called within a ChainbridgeProvider\"\n    );\n  }\n  return context;\n};\n\nexport { ChainbridgeProvider, useChainbridge };\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport {\n  Button,\n  ExclamationCircleSvg,\n  ProgressBar,\n  Typography,\n} from \"@chainsafe/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, typography }: ITheme) =>\n    createStyles({\n      root: {\n        width: \"100%\",\n      },\n      inner: {\n        width: \"100% !important\",\n        maxWidth: \"unset !important\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: `${constants.generalUnit * 5}px ${\n          constants.generalUnit * 3.5\n        }px`,\n        bottom: 0,\n        top: \"unset\",\n        transform: \"unset\",\n        left: 0,\n        border: \"none\",\n        borderRadius: 0,\n        transitionDuration: `${animation.transform}ms`,\n      },\n      heading: {\n        marginBottom: constants.generalUnit,\n        whiteSpace: \"nowrap\",\n      },\n      stepIndicator: {\n        ...typography.h4,\n        height: 40,\n        width: 40,\n        marginRight: constants.generalUnit * 2,\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: `1px solid ${palette.additional[\"transactionModal\"][2]}`,\n        color: palette.additional[\"transactionModal\"][3],\n        \"& svg\": {\n          height: 20,\n          width: 20,\n          display: \"block\",\n        },\n      },\n      content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      buttons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit * 5,\n        \"& > *\": {\n          textDecoration: \"none\",\n          marginRight: constants.generalUnit,\n        },\n      },\n      button: {\n        borderColor: `${palette.additional[\"gray\"][8]} !important`,\n        color: `${palette.additional[\"gray\"][8]} !important`,\n        textDecoration: \"none\",\n        \"&:hover\": {\n          borderColor: `${palette.additional[\"gray\"][8]} !important`,\n          backgroundColor: `${palette.additional[\"gray\"][8]} !important`,\n          color: `${palette.common.white.main} !important`,\n          textDecoration: \"none\",\n        },\n      },\n      initCopy: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        \"& > *:first-child\": {\n          marginTop: constants.generalUnit * 3.5,\n          marginBottom: constants.generalUnit * 8,\n        },\n      },\n      sendingCopy: {},\n      vote: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit,\n        \"& > *\": {\n          \"&:first-child\": {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            maxWidth: 240,\n          },\n          \"&:last-child\": {\n            marginLeft: constants.generalUnit * 3.5,\n            fontStyle: \"italic\",\n          },\n        },\n      },\n      warning: {\n        marginTop: constants.generalUnit * 3.5,\n        display: \"block\",\n        fontWeight: 600,\n      },\n      receipt: {\n        marginTop: constants.generalUnit * 3.5,\n        marginBottom: constants.generalUnit * 8,\n      },\n      weighted: {\n        fontWeight: 600,\n      },\n      progress: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        \"& > *\": {\n          borderRadius: \"0 !important\",\n          \"&  >  *\": {\n            borderRadius: \"0 !important\",\n            background: `${palette.additional[\"transactionModal\"][1]} !important`,\n          },\n        },\n      },\n    })\n);\n\ninterface ITransferActiveModalProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst TransferActiveModal: React.FC<ITransferActiveModalProps> = ({\n  open,\n  close,\n}: ITransferActiveModalProps) => {\n  const classes = useStyles();\n  const {\n    transactionStatus,\n    depositVotes,\n    relayerThreshold,\n    inTransitMessages,\n    homeConfig,\n    destinationChainConfig,\n    depositAmount,\n    selectedToken,\n    tokens,\n  } = useChainbridge();\n  const tokenSymbol = selectedToken && tokens[selectedToken]?.symbol;\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <ProgressBar\n        className={classes.progress}\n        size=\"small\"\n        variant=\"primary\"\n        progress={transactionStatus !== \"Transfer Completed\" ? -1 : 100}\n      />\n      <section>\n        <div className={classes.stepIndicator}>\n          {transactionStatus === \"Initializing Transfer\" ? (\n            \"1\"\n          ) : transactionStatus === \"In Transit\" ? (\n            \"2\"\n          ) : transactionStatus === \"Transfer Completed\" ? (\n            \"3\"\n          ) : (\n            <ExclamationCircleSvg />\n          )}\n        </div>\n      </section>\n      <section className={classes.content}>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          {transactionStatus === \"Initializing Transfer\"\n            ? \"Initializing Transfer\"\n            : transactionStatus === \"In Transit\"\n            ? `In Transit (${\n                depositVotes < (relayerThreshold || 0)\n                  ? `${depositVotes}/${relayerThreshold} signatures needed`\n                  : \"Executing proposal\"\n              })`\n            : transactionStatus === \"Transfer Completed\"\n            ? \"Transfer completed\"\n            : \"Transfer aborted\"}\n        </Typography>\n        {transactionStatus === \"Initializing Transfer\" ? (\n          <div className={classes.initCopy}>\n            <Typography>Deposit pending...</Typography>\n            <Typography className={classes.weighted}>\n              This should take a few minutes.\n              <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : transactionStatus === \"In Transit\" ? (\n          <div className={classes.sendingCopy}>\n            {inTransitMessages.map((m, i) => {\n              if (typeof m === \"string\") {\n                return (\n                  <Typography className={classes.vote} component=\"p\" key={i}>\n                    {m}\n                  </Typography>\n                );\n              } else {\n                return (\n                  <Typography className={classes.vote} component=\"p\" key={i}>\n                    <span>Vote casted by {m.address}</span>\n                    <span>{m.signed}</span>\n                  </Typography>\n                );\n              }\n            })}\n            <Typography className={classes.warning}>\n              This should take a few minutes. <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : transactionStatus === \"Transfer Completed\" ? (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              Successfully transferred{\" \"}\n              <strong>\n                {depositAmount} {tokenSymbol}\n                <br /> from {homeConfig?.name} to {destinationChainConfig?.name}\n                .\n              </strong>\n            </Typography>\n            <section className={classes.buttons}>\n              {/* <Button\n                onClick={() =>\n                  destinationChainConfig &&\n                  (destinationChainConfig as EvmBridgeConfig).blockExplorer &&\n                  transferTxHash &&\n                  window.open(\n                    `${\n                      (destinationChainConfig as EvmBridgeConfig).blockExplorer\n                    }/${transferTxHash}`,\n                    \"_blank\"\n                  )\n                }\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                // disabled={\n                //   !destinationChain ||\n                //   !destinationChain.blockExplorer ||\n                //   !transferTxHash\n                // }\n              >\n                View transaction\n              </Button> */}\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={close}\n              >\n                Start new transfer\n              </Button>\n            </section>\n          </>\n        ) : (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              Something went wrong and we could not complete your transfer.\n            </Typography>\n            {/* {homeConfig &&\n              (homeConfig as EvmBridgeConfig).blockExplorer &&\n              transferTxHash && (\n                <Button\n                  onClick={() =>\n                    window.open(\n                      `${\n                        (homeConfig as EvmBridgeConfig).blockExplorer\n                      }/${transferTxHash}`,\n                      \"_blank\"\n                    )\n                  }\n                  size=\"small\"\n                  className={classes.button}\n                  variant=\"outline\"\n                  disabled\n                >\n                  View transaction\n                </Button>\n              )} */}\n            <section className={classes.buttons}>\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={close}\n              >\n                Start new transfer\n              </Button>\n              <a\n                rel=\"noopener noreferrer\"\n                href={process.env.REACT_APP_SUPPORT_URL}\n                target=\"_blank\"\n              >\n                <Button variant=\"outline\">\n                  Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n                </Button>\n              </a>\n            </section>\n          </>\n        )}\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default TransferActiveModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  IFormikSelectInputProps,\n  FormikSelectInput,\n} from \"@chainsafe/common-components\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\ninterface ITokenSelectInput extends IFormikSelectInputProps {\n  tokens: Tokens;\n  sync?: (value: string) => void;\n}\n\nconst TokenSelectInput: React.FC<ITokenSelectInput> = ({\n  className,\n  label,\n  name,\n  tokens,\n  sync,\n  ...rest\n}: ITokenSelectInput) => {\n  const [field, , helpers] = useField(name);\n  const labelParsed = tokens[field.value]\n    ? `${label} ${tokens[field.value]?.balance} ${tokens[field.value]?.symbol}`\n    : \"Please select token\";\n\n  const [synced, setSynced] = useState();\n  useEffect(() => {\n    if (sync && field.value !== synced) {\n      setSynced(field.value);\n      if (field.value !== \"\") {\n        sync(field.value);\n      }\n    }\n    // eslint-disable-next-line\n  }, [field]);\n\n  useEffect(() => {\n    // If there is only one token, auto select\n    if (Object.keys(tokens).length === 1 && field.value === \"\") {\n      helpers.setValue(Object.keys(tokens)[0]);\n    }\n  }, [tokens, helpers, field.value]);\n\n  return (\n    <FormikSelectInput\n      name={name}\n      className={className}\n      label={labelParsed}\n      {...rest}\n    />\n  );\n};\n\nexport default TokenSelectInput;\n","import React from \"react\";\n\nimport { useField, useFormikContext } from \"formik\";\nimport { Button, FormikTextInput } from \"@chainsafe/common-components\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\ninterface ITokenInput {\n  disabled?: boolean;\n  label: string;\n  name: string;\n  tokens: Tokens;\n  tokenSelectorKey: string;\n  classNames?: {\n    input?: string;\n    button?: string;\n  };\n}\n\nconst TokenInput: React.FC<ITokenInput> = ({\n  classNames,\n  disabled,\n  label,\n  tokens,\n  tokenSelectorKey,\n  name,\n}: ITokenInput) => {\n  const [, , helpers] = useField(name);\n\n  const { values } = useFormikContext();\n  return (\n    <>\n      <FormikTextInput\n        className={classNames?.input}\n        disabled={disabled}\n        name={name}\n        label={label}\n      />\n      <Button\n        disabled={\n          disabled || !tokens[(values as Record<string, any>)[tokenSelectorKey]]\n        }\n        className={classNames?.button}\n        onClick={() => {\n          helpers.setValue(\n            tokens[(values as Record<string, any>)[tokenSelectorKey]].balance\n          );\n        }}\n        variant=\"outline\"\n        type=\"button\"\n      >\n        MAX\n      </Button>\n    </>\n  );\n};\n\nexport default TokenInput;\n","import React from \"react\";\n\nimport { Typography } from \"@chainsafe/common-components\";\nimport { useFormikContext } from \"formik\";\n\ninterface IFeesFormikWrapped {\n  className?: string;\n  symbol?: string;\n  fee?: number;\n  feeSymbol?: string;\n  amountFormikName: string;\n}\n\nconst FeesFormikWrapped: React.FC<IFeesFormikWrapped> = ({\n  className,\n  symbol,\n  fee,\n  feeSymbol,\n  amountFormikName,\n}: IFeesFormikWrapped) => {\n  const { values } = useFormikContext();\n\n  return (\n    <section className={className}>\n      {fee !== undefined && feeSymbol !== undefined && (\n        <>\n          <Typography component=\"p\">Bridge Fee</Typography>\n          <Typography component=\"p\">\n            {fee} {feeSymbol}\n          </Typography>\n        </>\n      )}\n      {symbol !== undefined && (\n        <>\n          <Typography component=\"p\">Transfer Amount:</Typography>\n          <Typography component=\"p\">\n            {Number((values as Record<string, any>)[amountFormikName])?.toFixed(\n              3\n            )}{\" \"}\n            {symbol}\n          </Typography>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default FeesFormikWrapped;\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport {\n  Button,\n  ExclamationCircleInverseSvg,\n  Typography,\n  useLocation,\n} from \"@chainsafe/common-components\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport { ROUTE_LINKS } from \"../Components/Routes\";\nimport { useHomeBridge } from \"../Contexts/HomeBridgeContext\";\nimport { chainbridgeConfig } from \"../chainbridgeConfig\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    inner: {\n      width: \"100% !important\",\n      maxWidth: \"unset !important\",\n      borderRadius: \"4px\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n    },\n    heading: {\n      marginBottom: constants.generalUnit,\n    },\n    icon: {\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 0.8,\n      marginRight: constants.generalUnit * 2,\n      fill: palette.additional[\"gray\"][7],\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: constants.generalUnit * 5,\n      \"& > *\": {\n        textDecoration: \"none\",\n        marginRight: constants.generalUnit,\n      },\n    },\n    button: {\n      borderColor: palette.additional[\"gray\"][8],\n      color: palette.additional[\"gray\"][8],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][8],\n        backgroundColor: palette.additional[\"gray\"][8],\n        color: palette.common.white.main,\n      },\n    },\n  })\n);\n\nconst NetworkUnsupportedModal = () => {\n  const classes = useStyles();\n  const { homeChainConfig, networkId } = useNetworkManager();\n  const { getNetworkName, wrapTokenConfig, isReady } = useHomeBridge();\n  const { pathname } = useLocation();\n\n  const [open, setOpen] = useState(false);\n  const [supportedNetworks, setSupportedNetworks] = useState<number[]>([]);\n\n  useEffect(() => {\n    if (pathname === ROUTE_LINKS.Transfer) {\n      setOpen(!homeChainConfig && !!isReady);\n      setSupportedNetworks(\n        chainbridgeConfig.chains\n          .filter((bc) => bc.networkId !== undefined)\n          .map((bc) => Number(bc.networkId))\n      );\n    } else if (pathname === ROUTE_LINKS.Wrap) {\n      setOpen(!wrapTokenConfig && !!isReady);\n      setSupportedNetworks(\n        chainbridgeConfig.chains\n          .filter((bc) => bc.networkId !== undefined)\n          .filter((bc) => bc.tokens.find((t) => t.isNativeWrappedToken))\n          .map((bc) => Number(bc.networkId))\n      );\n    } else {\n      setOpen(false);\n      setSupportedNetworks([]);\n    }\n  }, [pathname, setOpen, homeChainConfig, isReady, wrapTokenConfig]);\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <section>\n        <ExclamationCircleInverseSvg className={classes.icon} />\n      </section>\n      <section>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          Network Unsupported\n        </Typography>\n        <Typography component=\"p\" variant=\"body1\">\n          This app does not currently support transfers on{\" \"}\n          {getNetworkName(networkId)}. Please change networks from within your\n          browser wallet.\n        </Typography>\n        <br />\n        <Typography component=\"p\" variant=\"body1\">\n          This app is configured to work on{\" \"}\n          {supportedNetworks.map(\n            (n, i) =>\n              `${getNetworkName(n)}${\n                i < supportedNetworks.length - 1 ? \", \" : \"\"\n              }`\n          )}{\" \"}\n          networks\n        </Typography>\n        <section className={classes.buttons}>\n          <a\n            rel=\"noopener noreferrer\"\n            href={process.env.REACT_APP_SUPPORT_URL}\n            target=\"_blank\"\n          >\n            <Button variant=\"outline\">\n              Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n            </Button>\n          </a>\n        </section>\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default NetworkUnsupportedModal;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport PreflightModalTransfer from \"../../Modules/PreflightModalTransfer\";\nimport {\n  Button,\n  Typography,\n  QuestionCircleSvg,\n  SelectInput,\n} from \"@chainsafe/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport clsx from \"clsx\";\nimport TransferActiveModal from \"../../Modules/TransferActiveModal\";\nimport { useChainbridge } from \"../../Contexts/ChainbridgeContext\";\nimport TokenSelectInput from \"../Custom/TokenSelectInput\";\nimport TokenInput from \"../Custom/TokenInput\";\nimport { object, string } from \"yup\";\nimport { utils } from \"ethers\";\nimport FeesFormikWrapped from \"./FormikContextElements/Fees\";\nimport { useNetworkManager } from \"../../Contexts/NetworkManagerContext\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport { isValidSubstrateAddress } from \"../../Utils/Helpers\";\nimport { useHomeBridge } from \"../../Contexts/HomeBridgeContext\";\nimport ETHIcon from \"../../media/tokens/eth.svg\";\nimport WETHIcon from \"../../media/tokens/weth.svg\";\nimport DAIIcon from \"../../media/tokens/dai.svg\";\nimport celoUSD from \"../../media/tokens/cusd.svg\";\n\nconst PredefinedIcons: any = {\n  ETHIcon: ETHIcon,\n  WETHIcon: WETHIcon,\n  DAIIcon: DAIIcon,\n  celoUSD: celoUSD,\n};\n\nconst showImageUrl = (url?: string) =>\n  url && PredefinedIcons[url] ? PredefinedIcons[url] : url;\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      padding: constants.generalUnit * 6,\n      position: \"relative\",\n    },\n    walletArea: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    connectButton: {\n      margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`,\n    },\n    connecting: {\n      textAlign: \"center\",\n      marginBottom: constants.generalUnit * 2,\n    },\n    connected: {\n      width: \"100%\",\n      \"& > *:first-child\": {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      },\n    },\n    changeButton: {\n      cursor: \"pointer\",\n    },\n    networkName: {\n      padding: `${constants.generalUnit * 2}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      borderRadius: 2,\n      color: palette.additional[\"gray\"][9],\n      marginTop: constants.generalUnit,\n      marginBottom: constants.generalUnit * 3,\n    },\n    formArea: {\n      \"&.disabled\": {\n        opacity: 0.4,\n      },\n    },\n    currencySection: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n    tokenInputArea: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\",\n      justifyContent: \"space-around\",\n    },\n    tokenInputSection: {\n      width: \"60%\",\n    },\n    tokenInput: {\n      margin: 0,\n      \"& > div\": {\n        height: 32,\n        \"& input\": {\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0,\n          borderRight: 0,\n        },\n      },\n      \"& span:last-child.error\": {\n        position: \"absolute\",\n        width: \"calc(100% + 62px)\",\n      },\n    },\n    maxButton: {\n      height: 32,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n      left: -1,\n      color: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][3],\n      borderColor: palette.additional[\"gray\"][6],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][6],\n        backgroundColor: palette.additional[\"gray\"][7],\n        color: palette.common.white.main,\n      },\n      \"&:focus\": {\n        borderColor: palette.additional[\"gray\"][6],\n      },\n    },\n    currencySelector: {\n      width: \"40%\",\n      paddingRight: constants.generalUnit,\n      \"& *\": {\n        cursor: \"pointer\",\n      },\n    },\n    token: {},\n    address: {\n      margin: 0,\n      marginBottom: constants.generalUnit * 3,\n    },\n    addressInput: {},\n    generalInput: {\n      \"& > span\": {\n        marginBottom: constants.generalUnit,\n      },\n    },\n    faqButton: {\n      cursor: \"pointer\",\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 5,\n      fill: `${palette.additional[\"transferUi\"][1]} !important`,\n    },\n    tokenItem: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      \"& img, & svg\": {\n        display: \"block\",\n        height: 14,\n        width: 14,\n        marginRight: 10,\n      },\n      \"& span\": {\n        minWidth: `calc(100% - 20px)`,\n        textAlign: \"left\",\n      },\n    },\n    fees: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      marginBottom: constants.generalUnit,\n      \"& > *\": {\n        display: \"block\",\n        width: \"50%\",\n        color: palette.additional[\"gray\"][8],\n        marginBottom: constants.generalUnit / 2,\n        \"&:nth-child(even)\": {\n          textAlign: \"right\",\n        },\n      },\n    },\n    accountSelector: {\n      marginBottom: 24,\n    },\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n  token: string;\n  tokenSymbol: string;\n  receiver: string;\n};\n\nconst TransferPage = () => {\n  const classes = useStyles();\n  const { walletType, setWalletType } = useNetworkManager();\n\n  const {\n    deposit,\n    setDestinationChain,\n    transactionStatus,\n    resetDeposit,\n    bridgeFee,\n    tokens,\n    isReady,\n    homeConfig,\n    destinationChainConfig,\n    destinationChains,\n    address,\n    checkSupplies,\n  } = useChainbridge();\n\n  const { accounts, selectAccount } = useHomeBridge();\n  const [aboutOpen, setAboutOpen] = useState<boolean>(false);\n  const [walletConnecting, setWalletConnecting] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState<boolean>(false);\n  const [preflightModalOpen, setPreflightModalOpen] = useState<boolean>(false);\n\n  const [preflightDetails, setPreflightDetails] = useState<PreflightDetails>({\n    receiver: \"\",\n    token: \"\",\n    tokenAmount: 0,\n    tokenSymbol: \"\",\n  });\n\n  useEffect(() => {\n    if (walletType !== \"select\" && walletConnecting === true) {\n      setWalletConnecting(false);\n    } else if (walletType === \"select\") {\n      setWalletConnecting(true);\n    }\n  }, [walletType, walletConnecting]);\n\n  const DECIMALS =\n    preflightDetails && tokens[preflightDetails.token]\n      ? tokens[preflightDetails.token].decimals\n      : 18;\n\n  const REGEX =\n    DECIMALS > 0\n      ? new RegExp(`^[0-9]{1,18}(.[0-9]{1,${DECIMALS}})?$`)\n      : new RegExp(`^[0-9]{1,18}?$`);\n\n  const transferSchema = object().shape({\n    tokenAmount: string()\n      .test(\"Token selected\", \"Please select a token\", (value) => {\n        if (\n          !!value &&\n          preflightDetails &&\n          tokens[preflightDetails.token] &&\n          tokens[preflightDetails.token].balance !== undefined\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n      .test(\"InputValid\", \"Input invalid\", (value) => {\n        try {\n          return REGEX.test(`${value}`);\n        } catch (error) {\n          console.error(error);\n          return false;\n        }\n      })\n      .test(\"Max\", \"Insufficent funds\", (value) => {\n        if (\n          value &&\n          preflightDetails &&\n          tokens[preflightDetails.token] &&\n          tokens[preflightDetails.token].balance\n        ) {\n          if (homeConfig?.type === \"Ethereum\") {\n            return parseFloat(value) <= tokens[preflightDetails.token].balance;\n          } else {\n            return (\n              parseFloat(value + (bridgeFee || 0)) <=\n              tokens[preflightDetails.token].balance\n            );\n          }\n        }\n        return false;\n      })\n      .test(\n        \"Bridge Supplies\",\n        \"Not enough tokens on the destination chain. Please contact support.\",\n        async (value) => {\n          if (checkSupplies && destinationChainConfig && value) {\n            const supplies = await checkSupplies(\n              parseFloat(value),\n              preflightDetails.token,\n              destinationChainConfig.chainId\n            );\n            return Boolean(supplies);\n          }\n          return false;\n        }\n      )\n      .test(\"Min\", \"Less than minimum\", (value) => {\n        if (value) {\n          return parseFloat(value) > 0;\n        }\n        return false;\n      })\n      .required(\"Please set a value\"),\n    token: string().required(\"Please select a token\"),\n    receiver: string()\n      .test(\"Valid address\", \"Please add a valid address\", (value) => {\n        if (destinationChainConfig?.type === \"Substrate\") {\n          return isValidSubstrateAddress(value as string);\n        }\n        return utils.isAddress(value as string);\n      })\n      .required(\"Please add a receiving address\"),\n  });\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.walletArea}>\n        {!isReady ? (\n          <Button\n            className={classes.connectButton}\n            fullsize\n            onClick={() => {\n              setWalletType(\"select\");\n            }}\n          >\n            Connect\n          </Button>\n        ) : walletConnecting ? (\n          <section className={classes.connecting}>\n            <Typography component=\"p\" variant=\"h5\">\n              This app requires access to your wallet, <br />\n              please login and authorize access to continue.\n            </Typography>\n          </section>\n        ) : (\n          <section className={classes.connected}>\n            <div>\n              <Typography variant=\"body1\">Home network</Typography>\n              <Typography\n                className={classes.changeButton}\n                variant=\"body1\"\n                onClick={() => setChangeNetworkOpen(true)}\n              >\n                Change\n              </Typography>\n            </div>\n            <Typography\n              component=\"h2\"\n              variant=\"h2\"\n              className={classes.networkName}\n            >\n              {homeConfig?.name}\n            </Typography>\n          </section>\n        )}\n      </div>\n      {isReady &&\n        walletType === \"Substrate\" &&\n        accounts &&\n        accounts.length > 0 && (\n          <div>\n            <section className={classes.accountSelector}>\n              <SelectInput\n                label=\"Select account\"\n                className={classes.generalInput}\n                options={accounts.map((acc, i) => ({\n                  label: acc.address,\n                  value: i,\n                }))}\n                onChange={(value) => selectAccount && selectAccount(value)}\n                value={accounts.findIndex((v) => v.address === address)}\n                placeholder=\"Select an account\"\n              />\n            </section>\n          </div>\n        )}\n      <Formik\n        initialValues={{\n          tokenAmount: 0,\n          token: \"\",\n          receiver: \"\",\n        }}\n        validateOnChange={false}\n        validationSchema={transferSchema}\n        onSubmit={(values) => {\n          setPreflightDetails({\n            ...values,\n            tokenSymbol: tokens[values.token].symbol || \"\",\n          });\n          setPreflightModalOpen(true);\n        }}\n      >\n        {(props) => (\n          <Form\n            className={clsx(classes.formArea, {\n              disabled: !homeConfig || !address || props.isValidating,\n            })}\n          >\n            <section>\n              <SelectInput\n                label=\"Destination Network\"\n                className={classes.generalInput}\n                disabled={!homeConfig}\n                options={destinationChains.map((dc) => ({\n                  label: dc.name,\n                  value: dc.chainId,\n                }))}\n                onChange={(value) => setDestinationChain(value)}\n                value={destinationChainConfig?.chainId}\n              />\n            </section>\n            <section className={classes.currencySection}>\n              {/* <section>\n              <div\n                className={clsx(classes.tokenInputArea, classes.generalInput)}\n              >\n                <TokenInput\n                  classNames={{\n                    input: clsx(classes.tokenInput, classes.generalInput),\n                    button: classes.maxButton,\n                  }}\n                  tokenSelectorKey=\"token\"\n                  tokens={tokens}\n                  disabled={\n                    !destinationChainConfig ||\n                    !preflightDetails.token ||\n                    preflightDetails.token === \"\"\n                  }\n                  name=\"tokenAmount\"\n                  label=\"I want to send\"\n                />\n              </div>\n            </section> */}\n              <section className={classes.currencySelector}>\n                <TokenSelectInput\n                  tokens={tokens}\n                  name=\"token\"\n                  disabled={!destinationChainConfig}\n                  label={`Balance: `}\n                  className={classes.generalInput}\n                  placeholder=\"\"\n                  sync={(tokenAddress) => {\n                    setPreflightDetails({\n                      ...preflightDetails,\n                      token: tokenAddress,\n                      receiver: \"\",\n                      tokenAmount: 0,\n                      tokenSymbol: \"\",\n                    });\n                  }}\n                  options={\n                    Object.keys(tokens).map((t) => ({\n                      value: t,\n                      label: (\n                        <div className={classes.tokenItem}>\n                          {tokens[t]?.imageUri && (\n                            <img\n                              src={showImageUrl(tokens[t]?.imageUri)}\n                              alt={tokens[t]?.symbol}\n                            />\n                          )}\n                          <span>{tokens[t]?.symbol || t}</span>\n                        </div>\n                      ),\n                    })) || []\n                  }\n                />\n              </section>\n              <section className={classes.tokenInputSection}>\n                <div\n                  className={clsx(classes.tokenInputArea, classes.generalInput)}\n                >\n                  <TokenInput\n                    classNames={{\n                      input: clsx(classes.tokenInput, classes.generalInput),\n                      button: classes.maxButton,\n                    }}\n                    tokenSelectorKey=\"token\"\n                    tokens={tokens}\n                    disabled={\n                      !destinationChainConfig ||\n                      !preflightDetails.token ||\n                      preflightDetails.token === \"\"\n                    }\n                    name=\"tokenAmount\"\n                    label=\"I want to send\"\n                  />\n                </div>\n              </section>\n            </section>\n            <section>\n              <AddressInput\n                disabled={!destinationChainConfig}\n                name=\"receiver\"\n                label=\"Destination Address\"\n                placeholder=\"Please enter the receiving address\"\n                className={classes.address}\n                classNames={{\n                  input: classes.addressInput,\n                }}\n                senderAddress={`${address}`}\n                sendToSameAccountHelper={\n                  destinationChainConfig?.type === homeConfig?.type\n                }\n              />\n            </section>\n            <FeesFormikWrapped\n              amountFormikName=\"tokenAmount\"\n              className={classes.fees}\n              fee={bridgeFee}\n              feeSymbol={homeConfig?.nativeTokenSymbol}\n              symbol={\n                preflightDetails && tokens[preflightDetails.token]\n                  ? tokens[preflightDetails.token].symbol\n                  : undefined\n              }\n            />\n            <section>\n              <Button type=\"submit\" fullsize variant=\"primary\">\n                Start transfer\n              </Button>\n            </section>\n            <section>\n              <QuestionCircleSvg\n                onClick={() => setAboutOpen(true)}\n                className={classes.faqButton}\n              />\n            </section>\n          </Form>\n        )}\n      </Formik>\n      <AboutDrawer open={aboutOpen} close={() => setAboutOpen(false)} />\n      <ChangeNetworkDrawer\n        open={changeNetworkOpen}\n        close={() => setChangeNetworkOpen(false)}\n      />\n      <PreflightModalTransfer\n        open={preflightModalOpen}\n        close={() => setPreflightModalOpen(false)}\n        receiver={preflightDetails?.receiver || \"\"}\n        sender={address || \"\"}\n        start={() => {\n          setPreflightModalOpen(false);\n          preflightDetails &&\n            deposit(\n              preflightDetails.tokenAmount,\n              preflightDetails.receiver,\n              preflightDetails.token\n            );\n        }}\n        sourceNetwork={homeConfig?.name || \"\"}\n        targetNetwork={destinationChainConfig?.name || \"\"}\n        tokenSymbol={preflightDetails?.tokenSymbol || \"\"}\n        value={preflightDetails?.tokenAmount || 0}\n      />\n      <TransferActiveModal open={!!transactionStatus} close={resetDeposit} />\n      {/* This is here due to requiring router */}\n      <NetworkUnsupportedModal />\n    </article>\n  );\n};\nexport default TransferPage;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#343434\",\n  points: \"127.9611 0 125.1661 9.5 125.1661 285.168 127.9611 287.958 255.9231 212.32\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 0 0 212.32 127.962 287.959 127.962 154.158\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#3C3C3B\",\n  points: \"127.9611 312.1866 126.3861 314.1066 126.3861 412.3056 127.9611 416.9066 255.9991 236.5866\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#8C8C8C\",\n  points: \"127.962 416.9052 127.962 312.1852 0 236.5852\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#141414\",\n  points: \"127.9611 287.9577 255.9211 212.3207 127.9611 154.1587\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#393939\",\n  points: \"0.0009 212.3208 127.9609 287.9578 127.9609 154.1588\"\n}));\n\nvar SvgEth = function SvgEth(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 256 417\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgEth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/eth.9b4c5748.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\n\nconst useStyles = makeStyles(({ constants, palette, zIndex }: ITheme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      zIndex: zIndex?.blocker,\n      \"& li\": {\n        position: \"relative\",\n        padding: `${constants.generalUnit}px 0 ${constants.generalUnit}px ${\n          constants.generalUnit * 8\n        }px`,\n        \"&:before\": {\n          content: \"''\",\n          display: \"block\",\n          backgroundColor: palette.additional[\"gray\"][2],\n          height: constants.generalUnit,\n          width: constants.generalUnit,\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: constants.generalUnit * 4,\n          transform: \"translate(-50%, -50%)\",\n        },\n      },\n    },\n    subtitle: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    agreement: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    startButton: {\n      backgroundColor: palette.additional[\"preflight\"][1],\n      color: palette.additional[\"preflight\"][2],\n      marginBottom: constants.generalUnit * 2,\n    },\n    backdrop: {\n      position: \"absolute\",\n      zIndex: zIndex?.layer4,\n    },\n  })\n);\n\ninterface IPreflightModalWrapProps {\n  open: boolean;\n  close: () => void;\n  sender: string;\n  value: number;\n  tokenSymbol: string;\n  sourceNetwork: string;\n  start: () => void;\n  wrappedTitle: string;\n  action: \"wrap\" | \"unwrap\";\n}\n\nconst PreflightModalWrap: React.FC<IPreflightModalWrapProps> = ({\n  open,\n  close,\n  sender,\n  sourceNetwork,\n  tokenSymbol,\n  value,\n  start,\n  wrappedTitle,\n  action,\n}: IPreflightModalWrapProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer\n      classNames={{\n        backdrop: classes.backdrop,\n      }}\n      size={430}\n      open={open}\n      className={classes.root}\n    >\n      <Typography variant=\"h3\" component=\"h2\">\n        Pre-flight check\n      </Typography>\n      <Typography className={classes.subtitle} variant=\"h5\" component=\"p\">\n        Please be advised this is an experimental application:\n      </Typography>\n      <ul>\n        <li>\n          <Typography variant=\"h5\">\n            You will not be able to cancel the transaction once you submit it.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Your transaction could get stuck for an indefinite amount of time\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Funds cannot be returned if they are sent to the wrong address.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            The transaction fee may be higher than expected.\n          </Typography>\n        </li>\n      </ul>\n      <Typography className={classes.agreement} variant=\"h5\" component=\"p\">\n        I agree and want to convert{\" \"}\n        <strong>\n          {value} {tokenSymbol}\n        </strong>{\" \"}\n        on <strong>{sourceNetwork}</strong> to&nbsp;\n        <strong>{wrappedTitle}</strong>\n      </Typography>\n      <Button onClick={start} className={classes.startButton} fullsize>\n        Convert to {action === \"wrap\" ? \"Wrapped\" : \"Native\"} Token\n      </Button>\n      <Button onClick={close}>Back</Button>\n    </CustomDrawer>\n  );\n};\n\nexport default PreflightModalWrap;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport { Button, ProgressBar, Typography } from \"@chainsafe/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\nimport { EvmBridgeConfig, TokenConfig } from \"../chainbridgeConfig\";\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, typography }: ITheme) =>\n    createStyles({\n      root: {\n        width: \"100%\",\n      },\n      inner: {\n        width: \"100% !important\",\n        maxWidth: \"unset !important\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: `${constants.generalUnit * 5}px ${\n          constants.generalUnit * 3.5\n        }px`,\n        bottom: 0,\n        top: \"unset\",\n        transform: \"unset\",\n        left: 0,\n        border: \"none\",\n        borderRadius: 0,\n        transitionDuration: `${animation.transform}ms`,\n      },\n      heading: {\n        whiteSpace: \"nowrap\",\n        marginTop: constants.generalUnit / 2,\n      },\n      stepIndicator: {\n        ...typography.h4,\n        height: 40,\n        width: 40,\n        marginRight: constants.generalUnit * 2,\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: `1px solid ${palette.additional[\"transactionModal\"][2]}`,\n        color: palette.additional[\"transactionModal\"][3],\n        \"& svg\": {\n          height: 20,\n          width: 20,\n          display: \"block\",\n        },\n      },\n      content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      buttons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit * 5,\n        \"& > *\": {\n          textDecoration: \"none\",\n          marginRight: constants.generalUnit,\n        },\n      },\n      button: {\n        borderColor: `${palette.additional[\"gray\"][8]} !important`,\n        color: `${palette.additional[\"gray\"][8]} !important`,\n        textDecoration: \"none\",\n        \"&:hover\": {\n          borderColor: `${palette.additional[\"gray\"][8]} !important`,\n          backgroundColor: `${palette.additional[\"gray\"][8]} !important`,\n          color: `${palette.common.white.main} !important`,\n          textDecoration: \"none\",\n        },\n      },\n      initCopy: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        \"& > *:first-child\": {\n          marginTop: constants.generalUnit * 3.5,\n          marginBottom: constants.generalUnit * 8,\n        },\n      },\n      sendingCopy: {},\n      vote: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit,\n        \"& > *\": {\n          \"&:first-child\": {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            maxWidth: 240,\n          },\n          \"&:last-child\": {\n            marginLeft: constants.generalUnit * 3.5,\n            fontStyle: \"italic\",\n          },\n        },\n      },\n      warning: {\n        marginTop: constants.generalUnit * 3.5,\n        display: \"block\",\n        fontWeight: 600,\n      },\n      receipt: {\n        marginTop: constants.generalUnit * 3.5,\n        marginBottom: constants.generalUnit * 8,\n      },\n      weighted: {\n        fontWeight: 600,\n      },\n      progress: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        \"& > *\": {\n          borderRadius: \"0 !important\",\n          \"&  >  *\": {\n            borderRadius: \"0 !important\",\n            background: `${palette.additional[\"transactionModal\"][1]} !important`,\n          },\n        },\n      },\n    })\n);\n\ninterface IWrapActiveModalProps {\n  txState?: \"inProgress\" | \"done\";\n  value: number;\n  tokenInfo: TokenConfig;\n  txHash?: string;\n  close: () => void;\n  action: \"wrap\" | \"unwrap\";\n}\n\nconst WrapActiveModal: React.FC<IWrapActiveModalProps> = ({\n  txState,\n  value,\n  tokenInfo,\n  txHash,\n  close,\n  action,\n}: IWrapActiveModalProps) => {\n  const classes = useStyles();\n  const { homeConfig } = useChainbridge();\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={!!txState}\n    >\n      <ProgressBar\n        className={classes.progress}\n        size=\"small\"\n        variant=\"primary\"\n        progress={txState !== \"done\" ? -1 : 100}\n      />\n      <section>\n        <div className={classes.stepIndicator}>\n          {txState === \"inProgress\" ? 1 : 2}\n        </div>\n      </section>\n      <section className={classes.content}>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          {txState === \"inProgress\"\n            ? action === \"wrap\"\n              ? `Wrapping ${value} ${homeConfig?.nativeTokenSymbol}`\n              : `Unwrapping ${value} ${tokenInfo.symbol}`\n            : action === \"wrap\"\n            ? \"Token wrapped\"\n            : \"Token unwrapped\"}\n        </Typography>\n        {txState !== \"inProgress\" && (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              {action === \"wrap\"\n                ? `Successfully wrapped ${homeConfig?.nativeTokenSymbol} to ${tokenInfo.symbol}`\n                : `Successfully unwrapped ${tokenInfo.symbol} to ${homeConfig?.nativeTokenSymbol}`}\n              {homeConfig &&\n                (homeConfig as EvmBridgeConfig).blockExplorer &&\n                txHash && (\n                  <>\n                    <br />\n                    <a\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\"\n                      href={`${\n                        (homeConfig as EvmBridgeConfig).blockExplorer\n                      }/${txHash}`}\n                    >\n                      View Transaction\n                    </a>\n                  </>\n                )}\n            </Typography>\n            <section className={classes.buttons}>\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={() => close()}\n              >\n                Start a transfer\n              </Button>\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={() => {\n                  close();\n                }}\n              >\n                Close Window\n              </Button>\n            </section>\n          </>\n        )}\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default WrapActiveModal;\n","import * as historyApi from \"history\";\nconst history = historyApi.createBrowserHistory();\nexport default history;\n\nexport function forwardTo(location: string) {\n  history.push(location);\n}\n\nexport function goBack() {\n  history.back();\n}\n","import React from \"react\";\n\nimport { useField } from \"formik\";\nimport { Button, FormikTextInput } from \"@chainsafe/common-components\";\n\ninterface ITokenInput {\n  disabled?: boolean;\n  label: string;\n  name: string;\n  classNames?: {\n    input?: string;\n    button?: string;\n  };\n  max?: number;\n}\n\nconst SimpleTokenInput: React.FC<ITokenInput> = ({\n  classNames,\n  disabled,\n  label,\n  name,\n  max,\n}: ITokenInput) => {\n  const [, , helpers] = useField(name);\n\n  return (\n    <>\n      <FormikTextInput\n        className={classNames?.input}\n        disabled={disabled}\n        name={name}\n        label={label}\n      />\n      <Button\n        disabled={disabled || !max}\n        className={classNames?.button}\n        onClick={() => {\n          helpers.setValue(max);\n        }}\n        variant=\"outline\"\n        type=\"button\"\n      >\n        MAX\n      </Button>\n    </>\n  );\n};\n\nexport default SimpleTokenInput;\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nexport enum ProposalStatus {\n  Inactive,\n  Active,\n  Passed,\n  Executed,\n  Cancelled,\n}\n\nexport type DepositRecord = {\n  fromAddress?: string;\n  fromChainId?: number;\n  fromNetworkName?: string;\n  toAddress?: string;\n  toChainId?: number;\n  toNetworkName?: string;\n  tokenAddress?: string;\n  amount?: BigNumber;\n  timestamp?: number;\n  depositTransactionHash?: string;\n  depositBlockNumber?: number;\n  proposalEvents: Array<{\n    proposalStatus: ProposalStatus;\n    dataHash?: string;\n    proposalEventTransactionHash?: string;\n    proposalEventBlockNumber: number;\n    timestamp: number;\n  }>;\n  votes: Array<{\n    voteStatus: boolean;\n    voteTransactionHash?: string;\n    voteBlockNumber: number;\n    timestamp: number;\n    dataHash: string;\n  }>;\n};\n\nexport type AddTransferPayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromAddress: string;\n    fromChainId: number;\n    fromNetworkName: string;\n    toAddress: string;\n    toChainId: number;\n    toNetworkName: string;\n    tokenAddress?: string;\n    amount?: BigNumber;\n    resourceId: string;\n    timestamp: number;\n    depositTransactionHash: string;\n    depositBlockNumber: number;\n  };\n};\n\nexport type AddProposalPayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromChainId: number;\n    fromNetworkName: string;\n    toChainId: number;\n    toNetworkName: string;\n    resourceId: string;\n  };\n  proposalEventDetails: {\n    proposalStatus: ProposalStatus;\n    dataHash: string;\n    proposalEventTransactionHash: string;\n    proposalEventBlockNumber: number;\n    timestamp: number;\n  };\n};\n\nexport type AddVotePayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromChainId: number;\n    fromNetworkName: string;\n    toChainId: number;\n    toNetworkName: string;\n    resourceId: string;\n  };\n  voteDetails: {\n    voteStatus: boolean;\n    voteTransactionHash: string;\n    voteBlockNumber: number;\n    timestamp: number;\n    dataHash: string;\n  };\n};\n\nexport type Transfers = {\n  [depositNonce: number]: DepositRecord;\n};\n\nexport function transfersReducer(\n  transfers: Transfers,\n  action:\n    | {\n        type: \"addTransfer\";\n        payload: AddTransferPayload;\n      }\n    | {\n        type: \"addProposalEvent\";\n        payload: AddProposalPayload;\n      }\n    | {\n        type: \"addVote\";\n        payload: AddVotePayload;\n      }\n): Transfers {\n  switch (action.type) {\n    case \"addTransfer\": {\n      const currentProposals =\n        transfers[action.payload.depositNonce]?.proposalEvents || [];\n      const currentVotes = transfers[action.payload.depositNonce]?.votes || [];\n\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          proposalEvents: [\n            {\n              proposalStatus: ProposalStatus.Inactive,\n              proposalEventBlockNumber:\n                action.payload.transferDetails.depositBlockNumber,\n              proposalEventTransactionHash:\n                action.payload.transferDetails.depositTransactionHash,\n              timestamp: action.payload.transferDetails.timestamp,\n            },\n            ...currentProposals,\n          ],\n          votes: [...currentVotes],\n        },\n      };\n    }\n    case \"addProposalEvent\": {\n      const currentProposals =\n        transfers[action.payload.depositNonce]?.proposalEvents || [];\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          proposalEvents: [\n            ...currentProposals,\n            action.payload.proposalEventDetails,\n          ],\n        },\n      };\n    }\n    case \"addVote\": {\n      const currentVotes = transfers[action.payload.depositNonce]?.votes || [];\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          votes: [...currentVotes, action.payload.voteDetails],\n        },\n      };\n    }\n    default:\n      return transfers;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport {\n  Button,\n  Typography,\n  QuestionCircleSvg,\n  SelectInput,\n} from \"@chainsafe/common-components\";\nimport { Form, Formik } from \"formik\";\nimport clsx from \"clsx\";\nimport { useChainbridge } from \"../../Contexts/ChainbridgeContext\";\nimport { object, string } from \"yup\";\nimport { ReactComponent as ETHIcon } from \"../../media/tokens/eth.svg\";\nimport { TokenConfig } from \"../../chainbridgeConfig\";\nimport PreflightModalWrap from \"../../Modules/PreflightModalWrap\";\nimport WrapActiveModal from \"../../Modules/WrapActiveModal\";\nimport { forwardTo } from \"../../Utils/History\";\nimport { ROUTE_LINKS } from \"../Routes\";\nimport SimpleTokenInput from \"../Custom/SimpleTokenInput\";\nimport { useNetworkManager } from \"../../Contexts/NetworkManagerContext\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      minHeight: constants.generalUnit * 69,\n      padding: constants.generalUnit * 6,\n      overflow: \"hidden\",\n      position: \"relative\",\n    },\n    walletArea: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    blurb: {\n      color: palette.common.black.main,\n    },\n    connectButton: {\n      margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`,\n    },\n    connecting: {\n      textAlign: \"center\",\n      marginBottom: constants.generalUnit * 2,\n    },\n    connected: {\n      width: \"100%\",\n      \"& > *:first-child\": {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      },\n    },\n    changeButton: {\n      cursor: \"pointer\",\n    },\n    networkName: {\n      padding: `${constants.generalUnit * 2}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      borderRadius: 2,\n      color: palette.additional[\"gray\"][9],\n      marginTop: constants.generalUnit,\n      marginBottom: constants.generalUnit * 3,\n    },\n    formArea: {\n      \"&.disabled\": {\n        opacity: 0.4,\n      },\n    },\n    currencySection: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n    tokenInputArea: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\",\n      justifyContent: \"space-around\",\n      paddingRight: constants.generalUnit,\n    },\n    tokenInput: {\n      margin: 0,\n      \"& > div\": {\n        height: 32,\n        \"& input\": {\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0,\n          borderRight: 0,\n        },\n      },\n      \"& span:last-child.error\": {\n        position: \"absolute\",\n      },\n    },\n    maxButton: {\n      height: 32,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n      left: -1,\n      color: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][3],\n      borderColor: palette.additional[\"gray\"][6],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][6],\n        backgroundColor: palette.additional[\"gray\"][7],\n        color: palette.common.white.main,\n      },\n      \"&:focus\": {\n        borderColor: palette.additional[\"gray\"][6],\n      },\n    },\n    tokenIndicator: {\n      width: 120,\n      textAlign: \"right\",\n      \"& p\": {\n        marginBottom: constants.generalUnit,\n      },\n      \"& *\": {\n        cursor: \"pointer\",\n      },\n    },\n    generalInput: {\n      \"& > span\": {\n        marginBottom: constants.generalUnit,\n      },\n    },\n    faqButton: {\n      cursor: \"pointer\",\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 5,\n      fill: `${palette.additional[\"transferUi\"][1]} !important`,\n    },\n    token: {\n      backgroundColor: palette.additional[\"gray\"][1],\n      borderRadius: 2,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      padding: `${constants.generalUnit * 1}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      height: constants.generalUnit * 4,\n      \"& img, & svg\": {\n        display: \"block\",\n        height: 14,\n        width: 14,\n        marginLeft: 10,\n      },\n      \"& span\": {\n        minWidth: `calc(100% - 30px)`,\n        textAlign: \"right\",\n        color: palette.additional[\"gray\"][9],\n      },\n    },\n    tokenItem: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      \"& img, & svg\": {\n        display: \"block\",\n        height: 14,\n        width: 14,\n        marginRight: 10,\n      },\n      \"& span\": {\n        minWidth: `calc(100% - 30px)`,\n        textAlign: \"right\",\n      },\n    },\n    submitButtonArea: {},\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n};\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const { walletType, setWalletType, homeChainConfig } = useNetworkManager();\n  const {\n    wrapTokenConfig,\n    wrapToken,\n    unwrapToken,\n    homeConfig,\n    isReady,\n    tokens,\n    nativeTokenBalance,\n    address,\n  } = useChainbridge();\n\n  const [aboutOpen, setAboutOpen] = useState<boolean>(false);\n  const [walletConnecting, setWalletConnecting] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState<boolean>(false);\n  const [preflightModalOpen, setPreflightModalOpen] = useState<boolean>(false);\n  const [preflightDetails, setPreflightDetails] = useState<PreflightDetails>({\n    tokenAmount: 0,\n  });\n  const [action, setAction] = useState<\"wrap\" | \"unwrap\">(\"wrap\");\n\n  const [txDetails, setTxDetails] = useState<\n    | {\n        txState?: \"inProgress\" | \"done\";\n        value: number;\n        tokenInfo: TokenConfig;\n        txHash?: string;\n        action: \"wrap\" | \"unwrap\";\n      }\n    | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (walletType !== \"select\" && walletConnecting === true) {\n      setWalletConnecting(false);\n    } else if (walletType === \"select\") {\n      setWalletConnecting(true);\n    }\n  }, [walletType, walletConnecting]);\n\n  const handleWrapToken = async () => {\n    if (!wrapTokenConfig || !wrapToken || !homeConfig) return;\n\n    try {\n      setTxDetails({\n        tokenInfo: wrapTokenConfig,\n        value: preflightDetails.tokenAmount,\n        txState: \"inProgress\",\n        action: action,\n      });\n      const txHash = await wrapToken(preflightDetails.tokenAmount);\n\n      if (txHash === \"\") {\n        setTxDetails(undefined);\n        throw Error(\"Wrap Transaction failed\");\n      }\n\n      setTxDetails({\n        tokenInfo: wrapTokenConfig,\n        value: preflightDetails.tokenAmount,\n        txHash: txHash,\n        txState: \"done\",\n        action: action,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUnwrapToken = async () => {\n    if (!wrapTokenConfig || !unwrapToken || !homeConfig) return;\n\n    try {\n      setTxDetails({\n        tokenInfo: wrapTokenConfig,\n        value: preflightDetails.tokenAmount,\n        txState: \"inProgress\",\n        action: action,\n      });\n\n      const txHash = await unwrapToken(preflightDetails.tokenAmount);\n\n      if (txHash === \"\") {\n        setTxDetails(undefined);\n        throw Error(\"Unwrap Transaction failed\");\n      }\n\n      setTxDetails({\n        tokenInfo: wrapTokenConfig,\n        value: preflightDetails.tokenAmount,\n        txHash: txHash,\n        txState: \"done\",\n        action: action,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const REGEX =\n    homeChainConfig?.decimals && homeChainConfig.decimals > 0\n      ? new RegExp(`^[0-9]{1,18}(.[0-9]{1,${homeChainConfig.decimals}})?$`)\n      : new RegExp(`^[0-9]{1,18}?$`);\n\n  const wrapSchema = object().shape({\n    tokenAmount: string()\n      .matches(REGEX, \"Input invalid\")\n      .test(\"Min\", \"Less than minimum\", (value) => {\n        if (value) {\n          return parseFloat(value) > 0;\n        }\n        return false;\n      })\n      .test(\"Max\", \"Insufficent funds\", (value) => {\n        return action === \"wrap\"\n          ? nativeTokenBalance &&\n            value &&\n            parseFloat(value) <= nativeTokenBalance\n            ? true\n            : false\n          : tokens[wrapTokenConfig?.address || \"0x\"].balance &&\n            value &&\n            parseFloat(value) <=\n              tokens[wrapTokenConfig?.address || \"0x\"]?.balance\n          ? true\n          : false;\n      })\n      .required(\"Please set a value\"),\n  });\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.walletArea}>\n        {!isReady ? (\n          <>\n            <Typography className={classes.blurb} component=\"p\" variant=\"h5\">\n              To convert a token that needs to be wrapped, please connect to the\n              network that the token exists natively for. For example, to\n              convert ETH into wrapped ETH (WETH), your wallet must be connected\n              to an Ethereum network.\n            </Typography>\n            <Button\n              className={classes.connectButton}\n              fullsize\n              onClick={() => {\n                setWalletType(\"select\");\n              }}\n            >\n              Connect Metamask\n            </Button>\n          </>\n        ) : walletConnecting ? (\n          <section className={classes.connecting}>\n            <Typography component=\"p\" variant=\"h5\">\n              This app requires access to your wallet, <br />\n              please login and authorize access to continue.\n            </Typography>\n          </section>\n        ) : (\n          <section className={classes.connected}>\n            <div>\n              <Typography variant=\"body1\">Home network</Typography>\n              <Typography\n                className={classes.changeButton}\n                variant=\"body1\"\n                onClick={() => setChangeNetworkOpen(true)}\n              >\n                Change\n              </Typography>\n            </div>\n            <Typography\n              component=\"h2\"\n              variant=\"h2\"\n              className={classes.networkName}\n            >\n              {homeConfig?.name}\n            </Typography>\n          </section>\n        )}\n      </div>\n      <Formik\n        initialValues={{\n          tokenAmount: 0,\n        }}\n        validationSchema={wrapSchema}\n        validateOnChange={false}\n        onSubmit={(values) => {\n          setPreflightDetails({\n            ...values,\n          });\n          setPreflightModalOpen(true);\n        }}\n      >\n        <Form\n          className={clsx(classes.formArea, {\n            disabled: !homeConfig,\n          })}\n        >\n          <section className={classes.currencySection}>\n            <section>\n              <div\n                className={clsx(classes.tokenInputArea, classes.generalInput)}\n              >\n                <SimpleTokenInput\n                  classNames={{\n                    input: clsx(classes.tokenInput, classes.generalInput),\n                    button: classes.maxButton,\n                  }}\n                  name=\"tokenAmount\"\n                  label=\"I want to convert\"\n                  max={\n                    action === \"wrap\"\n                      ? nativeTokenBalance\n                      : tokens[wrapTokenConfig?.address || \"0x\"]?.balance\n                  }\n                />\n              </div>\n            </section>\n            <section className={classes.tokenIndicator}>\n              <Typography component=\"p\">\n                Balance:{\" \"}\n                {action === \"wrap\"\n                  ? nativeTokenBalance\n                    ? nativeTokenBalance.toFixed(2)\n                    : 0.0\n                  : tokens[wrapTokenConfig?.address || \"0x\"].balance}\n              </Typography>\n              <SelectInput\n                options={[\n                  {\n                    label: (\n                      <div className={classes.tokenItem}>\n                        <ETHIcon />\n                        <span>ETH</span>\n                      </div>\n                    ),\n                    value: \"wrap\",\n                  },\n                  {\n                    label: (\n                      <div className={classes.tokenItem}>\n                        <img\n                          src={wrapTokenConfig?.imageUri}\n                          alt={wrapTokenConfig?.symbol}\n                        />\n                        <span>{wrapTokenConfig?.symbol || \"wETH\"}</span>\n                      </div>\n                    ),\n                    value: \"unwrap\",\n                  },\n                ]}\n                onChange={(val) => setAction(val)}\n                value={action}\n              />\n            </section>\n          </section>\n          <section className={classes.submitButtonArea}>\n            <Button type=\"submit\" fullsize variant=\"primary\">\n              {action === \"wrap\" ? \"Wrap Token\" : \"Unwrap token\"}\n            </Button>\n          </section>\n          <section>\n            <QuestionCircleSvg\n              onClick={() => setAboutOpen(true)}\n              className={classes.faqButton}\n            />\n          </section>\n        </Form>\n      </Formik>\n      <AboutDrawer open={aboutOpen} close={() => setAboutOpen(false)} />\n      <ChangeNetworkDrawer\n        open={changeNetworkOpen}\n        close={() => setChangeNetworkOpen(false)}\n      />\n      <PreflightModalWrap\n        open={preflightModalOpen}\n        close={() => setPreflightModalOpen(false)}\n        sender={address || \"\"}\n        start={() => {\n          if (action === \"wrap\") {\n            handleWrapToken();\n            setPreflightModalOpen(false);\n          } else {\n            handleUnwrapToken();\n            setPreflightModalOpen(false);\n          }\n        }}\n        sourceNetwork={homeConfig?.name || \"\"}\n        tokenSymbol={\n          action === \"wrap\"\n            ? homeConfig?.nativeTokenSymbol || \"ETH\"\n            : wrapTokenConfig?.symbol || \"wETH\"\n        }\n        value={preflightDetails?.tokenAmount || 0}\n        wrappedTitle={\n          action === \"wrap\"\n            ? `${wrapTokenConfig?.name} (${wrapTokenConfig?.symbol})`\n            : homeConfig?.nativeTokenSymbol || \"ETH\"\n        }\n        action={action}\n      />\n      {txDetails && (\n        <WrapActiveModal\n          {...txDetails}\n          close={() => {\n            setTxDetails(undefined);\n            forwardTo(ROUTE_LINKS.Transfer);\n          }}\n        />\n      )}\n      {/* This is here due to requiring router */}\n      <NetworkUnsupportedModal />\n    </article>\n  );\n};\nexport default MainPage;\n","import React from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      padding: constants.generalUnit * 6,\n      position: \"relative\",\n    },\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n  token: string;\n  tokenSymbol: string;\n  receiver: string;\n};\n\nconst ExplorerPage = () => {\n  const classes = useStyles();\n\n  return <article className={classes.root}>Explorer</article>;\n};\nexport default ExplorerPage;\n","import React, { useContext, useEffect, useReducer } from \"react\";\nimport {\n  Bridge,\n  BridgeFactory,\n  Erc20HandlerFactory,\n} from \"@chainsafe/chainbridge-contracts\";\nimport { BigNumber, ethers, Event, providers } from \"ethers\";\nimport { chainbridgeConfig, EvmBridgeConfig } from \"../chainbridgeConfig\";\nimport { Transfers, transfersReducer } from \"./Reducers/TransfersReducer\";\n\ninterface IExplorerContextProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\ntype ExplorerContext = {\n  transfers: Transfers;\n};\n\nconst ExplorerContext = React.createContext<ExplorerContext | undefined>(\n  undefined\n);\n\nconst ExplorerProvider = ({ children }: IExplorerContextProps) => {\n  const [transfers, transfersDispatch] = useReducer(transfersReducer, {});\n\n  const fetchTransfersAndListen = async () => {\n    const bridges = await Promise.all(\n      chainbridgeConfig.chains\n        .filter((c) => c.type === \"Substrate\")\n        .map(async (bridge) => {\n          console.log(`Checking events for ${bridge.name}`);\n\n          const provider = new providers.JsonRpcProvider(\n            bridge.rpcUrl,\n            bridge.networkId\n          );\n          const bridgeContract = BridgeFactory.connect(\n            (bridge as EvmBridgeConfig).bridgeAddress,\n            provider\n          );\n          const erc20HandlerContract = Erc20HandlerFactory.connect(\n            (bridge as EvmBridgeConfig).erc20HandlerAddress,\n            provider\n          );\n          const depositFilter = bridgeContract.filters.Deposit(\n            null,\n            null,\n            null\n          );\n          const depositLogs = await provider.getLogs({\n            ...depositFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          depositLogs.forEach(async (dl) => {\n            const parsedLog = bridgeContract.interface.parseLog(dl);\n            const depositRecord = await erc20HandlerContract.getDepositRecord(\n              parsedLog.args.depositNonce,\n              parsedLog.args.destinationChainID\n            );\n\n            transfersDispatch({\n              type: \"addTransfer\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  fromAddress: depositRecord._depositer,\n                  depositBlockNumber: dl.blockNumber,\n                  depositTransactionHash: dl.transactionHash,\n                  fromChainId: bridge.chainId,\n                  fromNetworkName: bridge.name,\n                  timestamp: (await provider.getBlock(dl.blockNumber))\n                    .timestamp,\n                  toChainId: parsedLog.args.destinationChainID,\n                  toNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.destinationChainID\n                    )?.name || \"\",\n                  toAddress: depositRecord._destinationRecipientAddress,\n                  tokenAddress: depositRecord._tokenAddress,\n                  amount: depositRecord._amount,\n                  resourceId: parsedLog.args.resourceID,\n                },\n              },\n            });\n          });\n          console.log(`Added ${bridge.name} ${depositLogs.length} deposits`);\n          bridgeContract.on(\n            depositFilter,\n            async (\n              destChainId: number,\n              resourceId: string,\n              depositNonce: ethers.BigNumber,\n              tx: Event\n            ) => {\n              const depositRecord = await erc20HandlerContract.getDepositRecord(\n                depositNonce,\n                destChainId\n              );\n\n              transfersDispatch({\n                type: \"addTransfer\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    fromAddress: depositRecord._depositer,\n                    depositBlockNumber: tx.blockNumber,\n                    depositTransactionHash: tx.transactionHash,\n                    fromChainId: bridge.chainId,\n                    fromNetworkName: bridge.name,\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    toChainId: destChainId,\n                    toNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === destChainId\n                      )?.name || \"\",\n                    toAddress: depositRecord._destinationRecipientAddress,\n                    tokenAddress: depositRecord._tokenAddress,\n                    amount: depositRecord._amount,\n                    resourceId: resourceId,\n                  },\n                },\n              });\n            }\n          );\n          const proposalEventFilter = bridgeContract.filters.ProposalEvent(\n            null,\n            null,\n            null,\n            null,\n            null\n          );\n\n          const proposalEventLogs = await provider.getLogs({\n            ...proposalEventFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          proposalEventLogs.forEach(async (pel) => {\n            const parsedLog = bridgeContract.interface.parseLog(pel);\n            transfersDispatch({\n              type: \"addProposalEvent\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  resourceId: parsedLog.args.resourceID,\n                  fromChainId: parsedLog.args.originChainID,\n                  fromNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.originChainID\n                    )?.name || \"\",\n                  toChainId: bridge.chainId,\n                  toNetworkName: bridge.name,\n                },\n                proposalEventDetails: {\n                  proposalEventBlockNumber: pel.blockNumber,\n                  proposalEventTransactionHash: pel.transactionHash,\n                  dataHash: parsedLog.args.dataHash,\n                  timestamp: (await provider.getBlock(pel.blockNumber))\n                    .timestamp,\n                  proposalStatus: parsedLog.args.status,\n                },\n              },\n            });\n          });\n          console.log(\n            `Added ${bridge.name} ${proposalEventLogs.length} proposal events`\n          );\n          bridgeContract.on(\n            proposalEventFilter,\n            async (\n              originChainId: number,\n              depositNonce: BigNumber,\n              status: number,\n              resourceId: string,\n              dataHash: string,\n              tx: Event\n            ) => {\n              transfersDispatch({\n                type: \"addProposalEvent\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    resourceId: resourceId,\n                    fromChainId: originChainId,\n                    fromNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === originChainId\n                      )?.name || \"\",\n                    toChainId: bridge.chainId,\n                    toNetworkName: bridge.name,\n                  },\n                  proposalEventDetails: {\n                    proposalEventBlockNumber: tx.blockNumber,\n                    proposalEventTransactionHash: tx.transactionHash,\n                    dataHash: dataHash,\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    proposalStatus: status,\n                  },\n                },\n              });\n            }\n          );\n          const proposalVoteFilter = bridgeContract.filters.ProposalVote(\n            null,\n            null,\n            null,\n            null\n          );\n\n          const proposalVoteLogs = await provider.getLogs({\n            ...proposalVoteFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          proposalVoteLogs.forEach(async (pvl) => {\n            const parsedLog = bridgeContract.interface.parseLog(pvl);\n\n            transfersDispatch({\n              type: \"addVote\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  resourceId: parsedLog.args.resourceID,\n                  fromChainId: parsedLog.args.originChainID,\n                  fromNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.originChainID\n                    )?.name || \"\",\n                  toChainId: bridge.chainId,\n                  toNetworkName: bridge.name,\n                },\n                voteDetails: {\n                  voteBlockNumber: pvl.blockNumber,\n                  voteTransactionHash: pvl.transactionHash,\n                  dataHash: parsedLog.args.dataHash,\n                  timestamp: (await provider.getBlock(pvl.blockNumber))\n                    .timestamp,\n                  voteStatus: parsedLog.args.status,\n                },\n              },\n            });\n          });\n          console.log(\n            `Added ${bridge.name} ${proposalVoteLogs.length} proposal votes`\n          );\n          bridgeContract.on(\n            proposalVoteFilter,\n            async (\n              originChainId: number,\n              depositNonce: BigNumber,\n              status: number, // TODO: Confirm wether this is actually being used\n              resourceId: string,\n              tx: Event\n            ) => {\n              transfersDispatch({\n                type: \"addVote\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    resourceId: resourceId,\n                    fromChainId: originChainId,\n                    fromNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === originChainId\n                      )?.name || \"\",\n                    toChainId: bridge.chainId,\n                    toNetworkName: bridge.name,\n                  },\n                  voteDetails: {\n                    voteBlockNumber: tx.blockNumber,\n                    voteTransactionHash: tx.transactionHash,\n                    dataHash: \"\", // TODO: Confirm whether this is available\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    voteStatus: status === 1 ? true : false, // TODO: Confirm whether this is the correct status\n                  },\n                },\n              });\n            }\n          );\n          return bridgeContract;\n        })\n    );\n    return bridges;\n  };\n\n  useEffect(() => {\n    let bridgeContracts: Bridge[] = [];\n\n    const handler = async () => {\n      bridgeContracts = await fetchTransfersAndListen();\n    };\n\n    handler();\n\n    return () => {\n      if (bridgeContracts.length > 0) {\n        bridgeContracts.forEach((bc) => {\n          // @ts-ignore\n          bc.removeAllListeners();\n        });\n      }\n    };\n  }, []);\n\n  return (\n    <ExplorerContext.Provider\n      value={{\n        transfers,\n      }}\n    >\n      {children}\n    </ExplorerContext.Provider>\n  );\n};\n\nconst useExplorer = () => {\n  const context = useContext(ExplorerContext);\n  if (context === undefined) {\n    throw new Error(\"useExplorer must be called within a ExplorerProvider\");\n  }\n  return context;\n};\n\nexport { ExplorerProvider, useExplorer };\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"@chainsafe/common-components\";\nimport TransferPage from \"./Pages/TransferPage\";\nimport WrapperPage from \"./Pages/WrapperPage\";\nimport ExplorerPage from \"./Pages/ExplorerPage\";\nimport { ExplorerProvider } from \"../Contexts/ExplorerContext\";\n\nexport const ROUTE_LINKS = {\n  Transfer: \"/transfer\",\n  Wrap: \"/wrap\",\n  Explore: \"/explore\",\n};\n\nconst FilesRoutes = () => {\n  return (\n    <Switch>\n      <Route exact path={ROUTE_LINKS.Transfer} component={TransferPage} />\n      <Route exact path={ROUTE_LINKS.Wrap} component={WrapperPage} />\n      <Route exact path={ROUTE_LINKS.Explore}>\n        <ExplorerProvider>\n          <ExplorerPage />\n        </ExplorerProvider>\n      </Route>\n      <Route exact path=\"/\">\n        <Redirect to={ROUTE_LINKS.Transfer} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default FilesRoutes;\n","import { createTheme } from \"@chainsafe/common-theme\";\n\nexport const lightTheme = createTheme({\n  globalStyling: {\n    body: {\n      backgroundColor: \"#F5F5F5\",\n    },\n  },\n  themeConfig: {\n    constants: {\n      navItemHeight: 42,\n    },\n    palette: {\n      additional: {\n        general: {\n          1: \"#85A5FF\", // Accents //geekblue4\n        },\n        transferUi: {\n          1: \"#595959\", // FAQ button // gray8\n        },\n        header: {\n          1: \"#F5F5F5\", // Background\n          2: \"#595959\", // Text color //gray8\n          3: \"#BFBFBF\", // border // gray6\n        },\n        preflight: {\n          1: \"#85A5FF\", // Button bg color\n          2: \"#262626\", // Button color\n        },\n        transactionModal: {\n          1: \"#597EF7\", // border //geekblue5\n          2: \"#85A5FF\", // indicator border //geekblue4\n          3: \"#2F54EB\", // indicator text //geekblue6\n        },\n      },\n    },\n    overrides: {\n      CheckboxInput: {\n        root: {\n          alignItems: \"center\",\n        },\n      },\n      Button: {\n        variants: {\n          primary: {\n            root: {\n              backgroundColor: \"#262626\",\n              color: \"#ffffff\",\n              border: `1px solid #262626`,\n              \"& svg\": {\n                fill: \"#ffffff\",\n              },\n            },\n            active: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            hover: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            focus: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n          },\n          outline: {\n            root: {\n              backgroundColor: \"transparent\",\n              color: \"#ffffff\",\n              border: `1px solid #ffffff`,\n              \"& svg\": {\n                fill: \"#ffffff\",\n              },\n            },\n            active: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            hover: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            focus: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n});\n","import { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Typography } from \"@chainsafe/common-components\";\nimport { shortenAddress } from \"../Utils/Helpers\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\n\nconst useStyles = makeStyles(\n  ({ constants, palette, zIndex, breakpoints }: ITheme) => {\n    return createStyles({\n      root: {\n        display: \"flex\",\n        position: \"fixed\",\n        justifyContent: \"space-between\",\n        padding: `${constants.generalUnit * 2}px ${\n          constants.generalUnit * 4\n        }px`,\n        width: \"100%\",\n        top: 0,\n        left: 0,\n        backgroundColor: palette.additional[\"header\"][1],\n        borderBottom: `1px solid ${palette.additional[\"header\"][3]}`,\n        color: palette.additional[\"header\"][2],\n        alignItems: \"center\",\n        zIndex: zIndex?.layer2,\n        [breakpoints.down(\"sm\")]: {\n          flexDirection: \"column\",\n        },\n      },\n      left: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n      },\n      logo: {\n        height: constants.generalUnit * 5,\n        width: constants.generalUnit * 5,\n        \"& svg, & img\": {\n          maxHeight: \"100%\",\n          maxWidth: \"100%\",\n        },\n      },\n      state: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n      },\n      indicator: {\n        display: \"block\",\n        height: 10,\n        width: 10,\n        borderRadius: \"50%\",\n        backgroundColor: palette.additional[\"green\"][6],\n        marginRight: constants.generalUnit,\n      },\n      address: {\n        marginRight: constants.generalUnit,\n      },\n      network: {},\n      accountInfo: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      mainInfo: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n    });\n  }\n);\n\ninterface IAppHeader {}\n\nconst AppHeader: React.FC<IAppHeader> = () => {\n  const classes = useStyles();\n  const { homeConfig, isReady, address } = useChainbridge();\n  return (\n    <header className={clsx(classes.root)}>\n      <div className={classes.left}>\n        {/* ADD LOGO HERE */}\n        {/* <div className={classes.logo}>\n        </div> */}\n        <Typography variant=\"h4\">ChainBridge Token Swap</Typography>\n      </div>\n      <section className={classes.state}>\n        {!isReady ? (\n          <Typography variant=\"h5\">No wallet connected</Typography>\n        ) : (\n          <>\n            <div className={classes.mainInfo}>\n              <div className={classes.accountInfo}>\n                <span className={classes.indicator} />\n                <Typography variant=\"h5\" className={classes.address}>\n                  {address && shortenAddress(address)}\n                </Typography>\n              </div>\n              <Typography variant=\"h5\" className={classes.address}>\n                <div>\n                  <span>connected to </span>\n                  <span>\n                    <strong>{homeConfig?.name}</strong>\n                  </span>\n                </div>\n              </Typography>\n            </div>\n          </>\n        )}\n      </section>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.35 11.5141C12.3531 11.5094 12.3578 11.5047 12.3609 11.5C13.3844 10.2828 14 8.71406 14 7C14 5.28594 13.3844 3.71719 12.3625 2.5C12.3594 2.49531 12.3547 2.49219 12.3516 2.4875C12.3344 2.46719 12.3187 2.44844 12.3016 2.42969C12.2953 2.42188 12.2891 2.41563 12.2828 2.40781L12.2188 2.33437L12.2172 2.33281C12.1938 2.30625 12.1687 2.27969 12.1453 2.25312L12.1438 2.25156C12.0938 2.19844 12.0437 2.14531 11.9922 2.09375L11.9906 2.09219L11.9156 2.01719L11.9109 2.0125C11.8875 1.98906 11.8641 1.96719 11.8406 1.94531C11.8328 1.9375 11.825 1.92969 11.8156 1.92188C11.8 1.90625 11.7844 1.89219 11.7688 1.87812C11.7641 1.87344 11.7578 1.86875 11.7531 1.8625C10.5063 0.70625 8.83594 0 7 0C5.16406 0 3.49375 0.70625 2.24531 1.8625C2.24062 1.86719 2.23438 1.87187 2.22969 1.87812C2.21406 1.89219 2.19844 1.90781 2.18281 1.92344C2.175 1.93125 2.16719 1.93906 2.15781 1.94688C2.13438 1.96875 2.11094 1.99219 2.0875 2.01406L2.08281 2.01875L2.00781 2.09375L2.00625 2.09531C1.95469 2.14688 1.90469 2.2 1.85469 2.25312L1.85313 2.25469C1.82813 2.28125 1.80469 2.30781 1.78125 2.33437L1.77969 2.33594C1.75781 2.35938 1.73594 2.38437 1.71563 2.40937C1.70938 2.41719 1.70313 2.42344 1.69688 2.43125C1.67969 2.45 1.66406 2.47031 1.64687 2.48906C1.64375 2.49375 1.63906 2.49688 1.63594 2.50156C0.615625 3.71719 0 5.28594 0 7C0 8.71406 0.615625 10.2828 1.6375 11.5C1.64062 11.5047 1.64531 11.5094 1.64844 11.5141L1.69688 11.5719C1.70313 11.5797 1.70938 11.5859 1.71563 11.5938L1.77969 11.6672C1.77969 11.6687 1.78125 11.6688 1.78125 11.6703C1.80469 11.6969 1.82813 11.7234 1.85313 11.7484L1.85469 11.75C1.90469 11.8031 1.95469 11.8562 2.00469 11.9078L2.00625 11.9094C2.03125 11.9344 2.05469 11.9594 2.07969 11.9828L2.08437 11.9875C2.13594 12.0391 2.18906 12.0891 2.24219 12.1375C3.49375 13.2937 5.16406 14 7 14C8.83594 14 10.5062 13.2937 11.7547 12.1375C11.8079 12.0887 11.86 12.0387 11.9109 11.9875L11.9156 11.9828C11.9406 11.9578 11.9656 11.9344 11.9891 11.9094L11.9906 11.9078C12.0422 11.8562 12.0922 11.8031 12.1406 11.75L12.1422 11.7484C12.1656 11.7219 12.1906 11.6969 12.2141 11.6703C12.2141 11.6688 12.2156 11.6687 12.2156 11.6672C12.2375 11.6438 12.2594 11.6187 12.2797 11.5938C12.2859 11.5859 12.2922 11.5797 12.2984 11.5719C12.3161 11.553 12.3333 11.5338 12.35 11.5141ZM12.4141 9.28594C12.1984 9.79531 11.9141 10.2672 11.5672 10.6953C11.1765 10.3577 10.7494 10.0647 10.2937 9.82187C10.475 9.08906 10.5875 8.28438 10.6172 7.4375H12.8594C12.8125 8.07656 12.6625 8.69687 12.4141 9.28594ZM12.8594 6.5625H10.6172C10.5875 5.71562 10.475 4.91094 10.2937 4.17812C10.7516 3.93437 11.1781 3.64062 11.5672 3.30469C12.3212 4.23277 12.7722 5.3699 12.8594 6.5625ZM9.28594 1.58594C9.90625 1.84844 10.4703 2.21094 10.9672 2.66719C10.6785 2.91296 10.3679 3.13159 10.0391 3.32031C9.79375 2.61719 9.47969 2.00625 9.11406 1.51719C9.17188 1.53906 9.22969 1.5625 9.28594 1.58594ZM7.87031 12.5328C7.72656 12.6453 7.58281 12.7312 7.4375 12.7891V9.89062C8.05749 9.93388 8.66717 10.0719 9.24531 10.3C9.11563 10.6844 8.96562 11.0391 8.79219 11.3594C8.52031 11.8656 8.20156 12.2703 7.87031 12.5328ZM8.79219 2.64062C8.96406 2.9625 9.11563 3.31719 9.24531 3.7C8.66717 3.92806 8.05749 4.06612 7.4375 4.10938V1.2125C7.58125 1.27031 7.72656 1.35469 7.87031 1.46875C8.20156 1.72969 8.52031 2.13438 8.79219 2.64062ZM7.4375 9.01406V7.4375H9.74219C9.71719 8.12813 9.63125 8.79844 9.4875 9.43437L9.48281 9.45312C8.82708 9.20447 8.13751 9.05644 7.4375 9.01406ZM7.4375 6.5625V4.98594C8.15312 4.94219 8.84063 4.79063 9.48281 4.54688L9.4875 4.56563C9.63125 5.20156 9.71719 5.87031 9.74219 6.5625H7.4375ZM6.5625 7.4375V9.01406C5.84688 9.05781 5.15938 9.20938 4.51719 9.45312L4.5125 9.43437C4.36875 8.79844 4.28281 8.12969 4.25781 7.4375H6.5625ZM4.25781 6.5625C4.28281 5.87187 4.36875 5.20156 4.5125 4.56563L4.51719 4.54688C5.15938 4.79063 5.84531 4.94219 6.5625 4.98594V6.5625H4.25781ZM6.5625 9.89062V12.7875C6.41875 12.7297 6.27344 12.6453 6.12969 12.5312C5.79844 12.2703 5.47813 11.8641 5.20625 11.3578C5.03438 11.0359 4.88281 10.6812 4.75313 10.2984C5.33438 10.0703 5.93906 9.93437 6.5625 9.89062ZM6.5625 4.10938C5.94251 4.06612 5.33283 3.92806 4.75469 3.7C4.88437 3.31562 5.03437 2.96094 5.20781 2.64062C5.47969 2.13438 5.79844 1.72812 6.13125 1.46719C6.275 1.35469 6.41875 1.26875 6.56406 1.21094V4.10938H6.5625ZM4.71406 1.58594C4.77188 1.5625 4.82812 1.53906 4.88594 1.51719C4.52031 2.00625 4.20625 2.61719 3.96094 3.32031C3.63281 3.13281 3.32188 2.91406 3.03281 2.66719C3.52969 2.21094 4.09375 1.84844 4.71406 1.58594ZM1.58594 4.71406C1.80156 4.20469 2.08594 3.73281 2.43281 3.30469C2.82187 3.64062 3.24844 3.93437 3.70625 4.17812C3.525 4.91094 3.4125 5.71562 3.38281 6.5625H1.14062C1.1875 5.92344 1.3375 5.30313 1.58594 4.71406ZM1.14062 7.4375H3.38281C3.4125 8.28438 3.525 9.08906 3.70625 9.82187C3.25059 10.0647 2.82347 10.3577 2.43281 10.6953C1.6788 9.76723 1.22776 8.6301 1.14062 7.4375ZM4.71406 12.4141C4.09375 12.1516 3.52969 11.7891 3.03281 11.3328C3.32188 11.0859 3.63281 10.8687 3.96094 10.6797C4.20625 11.3828 4.52031 11.9938 4.88594 12.4828C4.82812 12.4609 4.77031 12.4375 4.71406 12.4141ZM9.28594 12.4141C9.22812 12.4375 9.17188 12.4609 9.11406 12.4828C9.47969 11.9938 9.79375 11.3828 10.0391 10.6797C10.3672 10.8672 10.6781 11.0859 10.9672 11.3328C10.4731 11.7872 9.90432 12.1529 9.28594 12.4141Z\"\n});\n\nvar SvgGlobal = function SvgGlobal(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 14 14\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGlobal, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/global.e2e61665.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink, Typography } from \"@chainsafe/common-components\";\nimport { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport React from \"react\";\nimport { ReactNode } from \"react\";\nimport AppHeader from \"./AppHeader\";\nimport { ReactComponent as GlobalSvg } from \"../media/Icons/global.svg\";\nimport { ROUTE_LINKS } from \"../Components/Routes\";\ninterface IAppWrapper {\n  children: ReactNode | ReactNode[];\n}\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, breakpoints }: ITheme) => {\n    return createStyles({\n      root: {\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        paddingTop: 30,\n        marginTop: 10,\n        [breakpoints.between(\"sm\", \"xl\")]: {\n          paddingTop: 20,\n          marginTop: 55,\n        },\n      },\n      inner: {\n        paddingTop: (constants.navItemHeight as number) * 2,\n        paddingBottom: (constants.navItemHeight as number) * 2,\n      },\n      cta: {\n        display: \"block\",\n        maxWidth: 200,\n        maxHeight: 200,\n        position: \"fixed\",\n        bottom: constants.generalUnit * 3,\n        right: constants.generalUnit * 3,\n      },\n      content: {\n        // position: \"absolute\",\n        // top: \"50%\",\n        // left: \"50%\",\n        // transform: \"translate(-50%, -50%)\",\n        margin: `30px auto`,\n        maxWidth: 460,\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        borderRadius: 4,\n      },\n      pageArea: {\n        height: \"100%\",\n        width: \"100%\",\n        overflow: \"hidden\",\n        border: `1px solid ${palette.additional[\"gray\"][7]}`,\n        borderRadius: 4,\n      },\n      navTabs: {\n        // position: \"absolute\",\n        // top: 0,\n        // left: 0,\n        width: \"100%\",\n        // transform: \"translate(0,-100%)\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: `0 ${constants.generalUnit}px`,\n        transform: \"translateY(1px)\",\n        \"& > a\": {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          padding: `${constants.generalUnit}px ${\n            constants.generalUnit * 1.5\n          }px`,\n          border: `1px solid ${palette.additional[\"gray\"][7]}`,\n          textDecoration: \"none\",\n          marginRight: constants.generalUnit,\n          transitionDuration: `${animation.transform}ms`,\n          color: palette.additional[\"gray\"][8],\n          maxHeight: constants.navItemHeight,\n          \"& svg\": {\n            transitionDuration: `${animation.transform}ms`,\n            fill: palette.additional[\"gray\"][8],\n          },\n          \"&.active\": {\n            color: palette.additional[\"gray\"][9],\n            textDecoration: \"underline\",\n            \"& svg\": {\n              fill: palette.additional[\"geekblue\"][5],\n            },\n          },\n          \"& > *:first-child\": {\n            marginRight: constants.generalUnit,\n          },\n        },\n        \"& svg\": {\n          height: 14,\n          width: 14,\n        },\n      },\n    });\n  }\n);\n\nconst AppWrapper: React.FC<IAppWrapper> = ({ children }: IAppWrapper) => {\n  const classes = useStyles();\n\n  return (\n    <section className={classes.root}>\n      <section className={classes.inner}>\n        <AppHeader />\n        <section className={classes.content}>\n          <section className={classes.navTabs}>\n            <NavLink activeClassName=\"active\" to={ROUTE_LINKS.Transfer}>\n              <GlobalSvg />\n              <Typography variant=\"h5\">Transfer</Typography>\n            </NavLink>\n            {/* <NavLink activeClassName=\"active\" to={ROUTE_LINKS.Wrap}>\n              <GiftSvg />\n              <Typography variant=\"h5\">Wrap token</Typography>\n            </NavLink> */}\n          </section>\n          <div className={classes.pageArea}>{children}</div>\n        </section>\n\n        {/* Put CTA here */}\n        {/* <a className={classes.cta} rel=\"noopener noreferrer\" target=\"_blank\" href=\"#\">\n        </a> */}\n      </section>\n    </section>\n  );\n};\n\nexport default AppWrapper;\n","import React from \"react\";\nimport { init, ErrorBoundary, showReportDialog } from \"@sentry/react\";\nimport { ThemeSwitcher } from \"@chainsafe/common-theme\";\nimport {\n  CssBaseline,\n  Router,\n  ToasterProvider,\n} from \"@chainsafe/common-components\";\n\nimport Routes from \"./Components/Routes\";\nimport { lightTheme } from \"./Themes/LightTheme\";\nimport { ChainbridgeProvider } from \"./Contexts/ChainbridgeContext\";\nimport AppWrapper from \"./Layouts/AppWrapper\";\nimport { NetworkManagerProvider } from \"./Contexts/NetworkManagerContext\";\nimport { chainbridgeConfig } from \"./chainbridgeConfig\";\nimport { Web3Provider } from \"@chainsafe/web3-context\";\nimport { utils } from \"ethers\";\nimport \"@chainsafe/common-theme/dist/font-faces.css\";\n\nif (\n  process.env.NODE_ENV === \"production\" &&\n  process.env.REACT_APP_SENTRY_DSN_URL &&\n  process.env.REACT_APP_SENTRY_RELEASE\n) {\n  init({\n    dsn: process.env.REACT_APP_SENTRY_DSN_URL,\n    release: process.env.REACT_APP_SENTRY_RELEASE,\n  });\n}\n\nconst App: React.FC<{}> = () => {\n  const tokens = chainbridgeConfig.chains\n    .filter((c) => c.type === \"Ethereum\")\n    .reduce((tca, bc: any) => {\n      if (bc.networkId) {\n        return {\n          ...tca,\n          [bc.networkId]: bc.tokens,\n        };\n      } else {\n        return tca;\n      }\n    }, {});\n\n  return (\n    <ErrorBoundary\n      fallback={({ error, componentStack, eventId, resetError }) => (\n        <div>\n          <p>\n            An error occurred and has been logged. If you would like to provide\n            additional info to help us debug and resolve the issue, click the\n            \"Provide Additional Details\" button\n          </p>\n          <p>{error?.message.toString()}</p>\n          <p>{componentStack}</p>\n          <p>{eventId}</p>\n          <button onClick={() => showReportDialog({ eventId: eventId || \"\" })}>\n            Provide Additional Details\n          </button>\n          <button onClick={resetError}>Reset error</button>\n        </div>\n      )}\n      onReset={() => window.location.reload()}\n    >\n      <ThemeSwitcher themes={{ light: lightTheme }}>\n        <CssBaseline />\n        <ToasterProvider autoDismiss>\n          <Web3Provider\n            tokensToWatch={tokens}\n            networkIds={[5]}\n            onboardConfig={{\n              dappId: process.env.REACT_APP_BLOCKNATIVE_DAPP_ID,\n              walletSelect: {\n                wallets: [{ walletName: \"metamask\", preferred: true }],\n              },\n              subscriptions: {\n                network: (network) =>\n                  network && console.log(\"chainId: \", network),\n                balance: (amount) =>\n                  amount && console.log(\"balance: \", utils.formatEther(amount)),\n              },\n            }}\n            checkNetwork={false}\n            gasPricePollingInterval={120}\n            gasPriceSetting=\"fast\"\n          >\n            <NetworkManagerProvider>\n              <ChainbridgeProvider>\n                <Router>\n                  <AppWrapper>\n                    <Routes />\n                  </AppWrapper>\n                </Router>\n              </ChainbridgeProvider>\n            </NetworkManagerProvider>\n          </Web3Provider>\n        </ToasterProvider>\n      </ThemeSwitcher>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext } from \"react\";\nimport { HomeChainAdaptorContext } from \"./Adaptors/interfaces\";\n\nconst HomeBridgeContext = React.createContext<\n  HomeChainAdaptorContext | undefined\n>(undefined);\n\nconst useHomeBridge = () => {\n  const context = useContext(HomeBridgeContext);\n  if (context === undefined) {\n    throw new Error(\"useHomeBridge must be called within a HomeBridgeProvider\");\n  }\n  return context;\n};\n\nexport { HomeBridgeContext, useHomeBridge };\n","import { CeloProvider } from \"@celo-tools/celo-ethers-wrapper\";\nimport { ethers, utils, BigNumber } from \"ethers\";\nimport { Erc20HandlerFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\nimport { Erc20DetailedFactory } from \"../../../Contracts/Erc20DetailedFactory\";\n\nimport { EvmBridgeConfig, TokenConfig } from \"../../../chainbridgeConfig\";\n\nconst isCelo = (networkId?: number) =>\n  [42220, 44787, 62320].includes(networkId ?? 0);\n\nconst getRpcProviderFromHttpUrl = (url: string) => {\n  const urlInstance = new URL(url);\n  if (urlInstance.username && urlInstance.password) {\n    var urlInfo = {\n      url: urlInstance.hostname,\n      user: urlInstance.username,\n      password: urlInstance.password,\n    };\n    return new ethers.providers.JsonRpcProvider(urlInfo);\n  }\n  return new ethers.providers.JsonRpcProvider(url);\n};\n\nexport function getProvider(destinationChainConfig?: any) {\n  let provider: any;\n  if (isCelo(destinationChainConfig?.networkId)) {\n    provider = new CeloProvider(destinationChainConfig?.rpcUrl);\n  } else if (\n    destinationChainConfig?.rpcUrl.startsWith(\"wss\") ||\n    destinationChainConfig?.rpcUrl.startsWith(\"ws\")\n  ) {\n    if (destinationChainConfig.rpcUrl.includes(\"infura\")) {\n      const parts = destinationChainConfig.rpcUrl.split(\"/\");\n\n      provider = new ethers.providers.InfuraWebSocketProvider(\n        destinationChainConfig.networkId,\n        parts[parts.length - 1]\n      );\n    }\n    if (destinationChainConfig.rpcUrl.includes(\"alchemyapi\")) {\n      const parts = destinationChainConfig.rpcUrl.split(\"/\");\n\n      provider = new ethers.providers.AlchemyWebSocketProvider(\n        destinationChainConfig.networkId,\n        parts[parts.length - 1]\n      );\n    }\n  } else {\n    provider = getRpcProviderFromHttpUrl(destinationChainConfig?.rpcUrl);\n  }\n  return provider;\n}\n\nexport async function hasTokenSupplies(\n  destinationChain: EvmBridgeConfig,\n  tokens: Tokens,\n  token: TokenConfig,\n  amount: number,\n  tokenAddress: string\n) {\n  const destinationToken = destinationChain?.tokens.find(\n    (_token: TokenConfig) => _token.resourceId === token.resourceId\n  );\n  if (\n    destinationToken &&\n    destinationChain !== undefined &&\n    destinationChain.type === \"Ethereum\"\n  ) {\n    let provider = getProvider(destinationChain);\n    const erc20destinationToken = Erc20DetailedFactory.connect(\n      destinationToken.address,\n      provider\n    );\n    const destinationErc20Handler = (destinationChain as EvmBridgeConfig)\n      .erc20HandlerAddress;\n\n    const destinationErc20DHandlerInstance = Erc20HandlerFactory.connect(\n      destinationErc20Handler,\n      provider\n    );\n    const isMintable = await destinationErc20DHandlerInstance._burnList(\n      destinationToken.address\n    );\n    if (isMintable) {\n      console.log(\"token mintable on destination chain\");\n      return true;\n    }\n    const balanceTokens = await erc20destinationToken.balanceOf(\n      destinationErc20Handler\n    );\n    if (Number(utils.formatUnits(balanceTokens)) < amount) {\n      console.log(\"Not enough token balance on destination chain!\");\n      return false;\n    }\n    return true;\n  }\n}\n\nexport async function detectEIP1559MaxFeePerGas(\n  provider: ethers.providers.Web3Provider\n): Promise<boolean> {\n  try {\n    const feeData = await provider.getFeeData();\n    if (typeof feeData.maxFeePerGas !== \"undefined\") {\n      return true;\n    }\n  } catch (error) {\n    console.warn(error);\n    console.warn(\n      \"Can't access fee data for EIP-1559, fallback to legacy transaction\"\n    );\n  }\n  return false;\n}\n\nexport async function getPriceCompatibility(\n  provider: ethers.providers.Web3Provider | undefined,\n  homeChainConfig: any,\n  gasPrice: number\n) {\n  let gasPriceCompatibility = undefined;\n  if (provider) {\n    const hasMaxPrice = await detectEIP1559MaxFeePerGas(provider);\n    if (!hasMaxPrice) {\n      gasPriceCompatibility = BigNumber.from(\n        utils.parseUnits(\n          (\n            (homeChainConfig as EvmBridgeConfig).defaultGasPrice || gasPrice\n          ).toString(),\n          9\n        )\n      ).toString();\n    }\n  }\n  return gasPriceCompatibility;\n}\n","import React, { useContext } from \"react\";\nimport { DestinationChainContext } from \"./Adaptors/interfaces\";\n\nconst DestinationBridgeContext = React.createContext<\n  DestinationChainContext | undefined\n>(undefined);\n\nconst useDestinationBridge = () => {\n  const context = useContext(DestinationBridgeContext);\n  if (context === undefined) {\n    throw new Error(\"useHomeBridge must be called within a HomeBridgeProvider\");\n  }\n  return context;\n};\n\nexport { DestinationBridgeContext, useDestinationBridge };\n","import { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  chainbridgeConfig,\n  SubstrateBridgeConfig,\n} from \"../../../chainbridgeConfig\";\n\nexport const createApi = async (rpcUrl: string) => {\n  const provider = new WsProvider(rpcUrl);\n  const subChainConfig = chainbridgeConfig.chains.find(\n    (c) => c.rpcUrl === rpcUrl\n  ) as SubstrateBridgeConfig;\n  const types = (await import(`./${subChainConfig.typesFileName}`)) as any;\n  return ApiPromise.create({ provider, types });\n};\n\nexport const submitDeposit = (\n  api: ApiPromise,\n  amount: number,\n  recipient: string,\n  destinationChainId: number\n) => {\n  const subChainConfig = chainbridgeConfig.chains.find(\n    (c) => c.chainId !== destinationChainId\n  ) as SubstrateBridgeConfig;\n\n  return api.tx[subChainConfig.transferPalletName][\n    subChainConfig.transferFunctionName\n  ](\n    new BigNumber(amount)\n      .multipliedBy(\n        new BigNumber(10).pow(new BigNumber(subChainConfig.decimals))\n      )\n      .toString(10),\n    recipient,\n    destinationChainId\n  );\n};\n","export type TokenConfig = {\n  address: string;\n  name?: string;\n  symbol?: string;\n  imageUri?: string;\n  resourceId: string;\n  isNativeWrappedToken?: boolean;\n};\n\nexport type ChainType = \"Ethereum\" | \"Substrate\";\n\nexport type BridgeConfig = {\n  networkId?: number;\n  chainId: number;\n  name: string;\n  rpcUrl: string;\n  type: ChainType;\n  tokens: TokenConfig[];\n  nativeTokenSymbol: string;\n  decimals: number;\n};\n\nexport type EvmBridgeConfig = BridgeConfig & {\n  bridgeAddress: string;\n  erc20HandlerAddress: string;\n  type: \"Ethereum\";\n  //This should be the full path to display a tx hash, without the trailing slash, ie. https://etherscan.io/tx\n  blockExplorer?: string;\n  defaultGasPrice?: number;\n  deployedBlockNumber?: number;\n};\n\nexport type SubstrateBridgeConfig = BridgeConfig & {\n  type: \"Substrate\";\n  chainbridgePalletName: string;\n  bridgeFeeFunctionName?: string; // If this value is provided, the chain value will be used will be used\n  bridgeFeeValue?: number; // If the above value is not provided, this value will be used for the fee. No scaling should be applied.\n  transferPalletName: string;\n  transferFunctionName: string;\n  typesFileName: string;\n};\n\nexport type ChainbridgeConfig = {\n  chains: Array<EvmBridgeConfig | SubstrateBridgeConfig>;\n};\n\nexport const chainbridgeConfig: ChainbridgeConfig = {\n  // Local GETH <> Local Substrate\n  chains: [\n    {\n      chainId: +((process.env\n        .REACT_APP_ETHEREUM_CHAIN_ID as unknown) as number),\n      networkId: +((process.env\n        .REACT_APP_ETHEREUM_NETWORK_ID as unknown) as number),\n      name: process.env.REACT_APP_ETHEREUM_NETWORK_NAME as string,\n      decimals: 18,\n      bridgeAddress: process.env.REACT_APP_ETHEREUM_BRIDGE_ADDRESS as string,\n      erc20HandlerAddress: process.env\n        .REACT_APP_ETHEREUM_ERC20_HANDLER_ADDRESS as string,\n      rpcUrl: process.env.REACT_APP_ETHEREUM_RPC_URL as string,\n      type: \"Ethereum\",\n      nativeTokenSymbol: \"ETH\",\n      tokens: [\n        {\n          address: process.env.REACT_APP_ETHEREUM_ERC20_TOKEN_ADDRESS as string,\n          name: process.env.REACT_APP_ETHEREUM_ERC20_NAME as string,\n          symbol: process.env.REACT_APP_ETHEREUM_ERC20_SYMBOL as string,\n          // imageUri: ATAIcon,\n          resourceId: process.env.REACT_APP_ETHEREUM_RESOURCE_ID as string,\n        },\n      ],\n    },\n    {\n      chainId: +((process.env\n        .REACT_APP_ATA_BRIDGECHAIN_ID as unknown) as number),\n      networkId: +((process.env.REACT_APP_ATA_NETWORK_ID as unknown) as number),\n      name: process.env.REACT_APP_ATA_NETWORK_NAME as string,\n      decimals: 18,\n      rpcUrl: process.env.REACT_APP_ATA_RPC_URL as string,\n      type: \"Substrate\",\n      nativeTokenSymbol: \"ATA\",\n      chainbridgePalletName: \"chainBridge\",\n      bridgeFeeValue: 0,\n      transferPalletName: \"bridgeTransfer\",\n      transferFunctionName: \"transfer_native\",\n      typesFileName: \"bridgeTypes.json\",\n      tokens: [\n        {\n          address: process.env.REACT_APP_ETHEREUM_ERC20_TOKEN_ADDRESS as string,\n          name: process.env.REACT_APP_ETHEREUM_ERC20_NAME as string,\n          symbol: process.env.REACT_APP_ETHEREUM_ERC20_SYMBOL as string,\n          // imageUri: ATAIcon,\n          resourceId: process.env.REACT_APP_ETHEREUM_RESOURCE_ID as string,\n        },\n      ],\n    },\n  ],\n};\n","/* Generated by ts-generator ver. 0.0.8 */\n/* tslint:disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport { Erc20Detailed } from \"./Erc20Detailed\";\n\nexport class Erc20DetailedFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Erc20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as Erc20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"decimals\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n"],"sourceRoot":""}