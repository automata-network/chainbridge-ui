{"version":3,"sources":["Contexts/Adaptors/SubstrateApis/centrifuge-types.ts"],"names":["sharedTypes","AnchorData","anchoredBlock","docRoot","id","PreCommitData","expirationBlock","identity","signingRoot","Fee","key","price","MultiAccountData","deposit","depositor","signatories","threshold","ChainId","DepositNonce","ResourceId","RegistryId","TokenId","AssetId","registryId","tokenId","AssetInfo","metadata","MintInfo","anchorId","proofs","staticHashes","Proof","leafHash","sortedHashes","ProofMint","hashes","property","salt","value","RegistryInfo","fields","ownerCanBurn","AccountInfo","Address","LookupSource","Multiplier","RefCount"],"mappings":"mKAOMA,EAAc,CAElBC,WAAY,CACVC,cAAe,MACfC,QAAS,OACTC,GAAI,QAENC,cAAe,CACbC,gBAAiB,MACjBC,SAAU,OACVC,YAAa,QAIfC,IAAK,CACHC,IAAK,OACLC,MAAO,WAITC,iBAAkB,CAChBC,QAAS,UACTC,UAAW,YACXC,YAAa,iBACbC,UAAW,OAIbC,QAAS,KACTC,aAAc,MACdC,WAAY,WACZ,uBAAwB,KAGxBC,WAAY,OACZC,QAAS,OACTC,QAAS,CACPC,WAAY,aACZC,QAAS,WAEXC,UAAW,CACTC,SAAU,SAEZC,SAAU,CACRC,SAAU,OACVC,OAAQ,iBACRC,aAAc,aAEhBC,MAAO,CACLC,SAAU,OACVC,aAAc,QAEhBC,UAAW,CACTC,OAAQ,YACRC,SAAU,QACVC,KAAM,WACNC,MAAO,SAETC,aAAc,CACZC,OAAQ,aACRC,aAAc,SAOR,2BACDzC,GADA,IAEH0C,YAAa,0BACbC,QAAS,eACTC,aAAc,sBACdC,WAAY,UACZC,SAAU,kBAKN,eACD9C,GAKMA","file":"static/js/12.e0a83f53.chunk.js","sourcesContent":["// Copyright 2017-2021 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable */\n\nimport type { OverrideVersionedType } from \"@polkadot/types/types\";\n\nconst sharedTypes = {\n  // Anchor\n  AnchorData: {\n    anchoredBlock: \"u64\",\n    docRoot: \"H256\",\n    id: \"H256\",\n  },\n  PreCommitData: {\n    expirationBlock: \"u64\",\n    identity: \"H256\",\n    signingRoot: \"H256\",\n  },\n\n  // Fees\n  Fee: {\n    key: \"Hash\",\n    price: \"Balance\",\n  },\n\n  // MultiAccount\n  MultiAccountData: {\n    deposit: \"Balance\",\n    depositor: \"AccountId\",\n    signatories: \"Vec<AccountId>\",\n    threshold: \"u16\",\n  },\n\n  // Bridge\n  ChainId: \"u8\",\n  DepositNonce: \"u64\",\n  ResourceId: \"[u8; 32]\",\n  \"chainbridge::ChainId\": \"u8\",\n\n  // NFT\n  RegistryId: \"H160\",\n  TokenId: \"U256\",\n  AssetId: {\n    registryId: \"RegistryId\",\n    tokenId: \"TokenId\",\n  },\n  AssetInfo: {\n    metadata: \"Bytes\",\n  },\n  MintInfo: {\n    anchorId: \"Hash\",\n    proofs: \"Vec<ProofMint>\",\n    staticHashes: \"[Hash; 3]\",\n  },\n  Proof: {\n    leafHash: \"H256\",\n    sortedHashes: \"H256\",\n  },\n  ProofMint: {\n    hashes: \"Vec<Hash>\",\n    property: \"Bytes\",\n    salt: \"[u8; 32]\",\n    value: \"Bytes\",\n  },\n  RegistryInfo: {\n    fields: \"Vec<Bytes>\",\n    ownerCanBurn: \"bool\",\n  },\n};\n\nconst versioned: OverrideVersionedType[] = [\n  {\n    minmax: [240, 999],\n    types: {\n      ...sharedTypes,\n      AccountInfo: \"AccountInfoWithRefCount\",\n      Address: \"LookupSource\",\n      LookupSource: \"IndicesLookupSource\",\n      Multiplier: \"Fixed64\",\n      RefCount: \"RefCountTo259\",\n    },\n  },\n  {\n    minmax: [1000, undefined],\n    types: {\n      ...sharedTypes,\n    },\n  },\n];\n\nexport default sharedTypes;\n"],"sourceRoot":""}