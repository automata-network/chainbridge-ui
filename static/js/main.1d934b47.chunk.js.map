{"version":3,"sources":["Contexts/Adaptors/EVMAdaptors/helpers.ts","Contexts/DestinationBridgeContext.tsx","Contexts/Adaptors/SubstrateApis/ChainBridgeAPI.tsx","Contracts/Erc20DetailedFactory.ts","Contracts/WethFactory.ts","Contexts/Adaptors/EVMAdaptors/EVMHomeAdaptorProvider.tsx","chainbridgeConfig.ts","media/tokens/eth.svg","media/tokens/weth.svg","media/tokens/dai.svg","media/tokens/cusd.svg","Contexts/Adaptors/SubstrateApis lazy /^/.//.*$/ groupOptions: {} namespace object","Contexts/Reducers/TransfersReducer.tsx","Components/Custom/CustomDrawer.tsx","Modules/AboutDrawer.tsx","Modules/ChangeNetworkDrawer.tsx","Utils/Helpers.tsx","Modules/PreflightModalTransfer.tsx","Components/Custom/AddressInput.tsx","Components/Custom/CustomModal.tsx","Modules/NetworkSelectModal.tsx","Contexts/ChainbridgeContext.tsx","Modules/TransferActiveModal.tsx","Components/Custom/TokenSelectInput.tsx","Components/Custom/TokenInput.tsx","Components/Pages/FormikContextElements/Fees.tsx","Modules/NetworkUnsupportedModal.tsx","Components/Pages/TransferPage.tsx","Components/Pages/ExplorerPage.tsx","Contexts/ExplorerContext.tsx","Components/Routes.tsx","Themes/LightTheme.ts","Layouts/AppHeader.tsx","media/Icons/global.svg","Layouts/AppWrapper.tsx","App.tsx","serviceWorker.ts","index.tsx","Contexts/HomeBridgeContext.tsx","Contexts/Adaptors/EVMAdaptors/EVMDestinationAdaptorProvider.tsx","Contexts/Adaptors/SubstrateAdaptors.tsx","Contexts/Reducers/TransitMessageReducer.tsx","Contexts/NetworkManagerContext.tsx"],"names":["getProvider","destinationChainConfig","provider","networkId","includes","CeloProvider","rpcUrl","startsWith","parts","split","ethers","providers","InfuraWebSocketProvider","length","AlchemyWebSocketProvider","url","urlInstance","URL","username","password","urlInfo","hostname","user","JsonRpcProvider","getRpcProviderFromHttpUrl","hasTokenSupplies","destinationChain","tokens","token","amount","tokenAddress","a","destinationToken","find","_token","resourceId","undefined","type","erc20destinationToken","Erc20DetailedFactory","connect","address","destinationErc20Handler","erc20HandlerAddress","destinationErc20DHandlerInstance","Erc20HandlerFactory","_burnList","console","log","balanceOf","balanceTokens","Number","utils","formatUnits","detectEIP1559MaxFeePerGas","getFeeData","maxFeePerGas","warn","getPriceCompatibility","homeChainConfig","gasPrice","gasPriceCompatibility","BigNumber","from","parseUnits","defaultGasPrice","toString","DestinationBridgeContext","React","createContext","useDestinationBridge","context","useContext","Error","createApi","WsProvider","subChainConfig","chainbridgeConfig","chains","c","typesFileName","types","ApiPromise","create","submitDeposit","api","recipient","destinationChainId","chainId","tx","transferPalletName","transferFunctionName","multipliedBy","pow","decimals","signerOrProvider","Contract","_abi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","WethFactory","resetAllowanceLogicFor","EVMHomeAdaptorProvider","children","useWeb3","isReady","network","wallet","checkIsReady","ethBalance","onboard","resetOnboard","useNetworkManager","setTransactionStatus","setDepositNonce","handleSetHomeChain","homeChains","setNetworkId","useState","homeBridge","setHomeBridge","relayerThreshold","setRelayerThreshold","bridgeFee","setBridgeFee","depositAmount","setDepositAmount","selectedToken","setSelectedToken","wrapper","setWrapper","wrapTokenConfig","setWrapperConfig","useEffect","chain","initialising","setInitialising","walletSelected","setWalletSelected","then","success","signer","getSigner","bridge","BridgeFactory","bridgeAddress","wrapperToken","isNativeWrappedToken","connectedWeth","catch","error","finally","walletSelect","getRelayerThreshold","_relayerThreshold","threshold","toNumber","getBridgeFee","_fee","formatEther","handleConnect","useCallback","handleCheckSupplies","deposit","Buffer","decodeAddress","erc20","erc20Decimals","data","hexZeroPad","toHexString","substr","hexlify","allowance","currentAllowance","approve","wait","once","filters","Deposit","destChainId","depositNonce","value","Promise","resolve","wrapToken","hash","unwrapToken","withdraw","Provider","disconnect","getNetworkName","id","chainConfig","nativeTokenBalance","process","blockExplorer","nativeTokenSymbol","symbol","chainbridgePalletName","bridgeFeeValue","existential","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","e","code","ids","all","slice","t","keys","Object","ProposalStatus","useStyles","makeStyles","constants","palette","createStyles","root","backgroundColor","additional","color","common","white","main","border","padding","generalUnit","backdrop","opacity","CustomDrawer","className","rest","classes","classNames","clsx","display","flexDirection","justifyContent","buttons","alignItems","marginRight","textDecoration","AboutDrawer","open","close","onClose","variant","component","onClick","rel","href","target","flexWrap","marginTop","paragraph","margin","ChangeNetworkDrawer","setWalletType","setDestinationChain","useHomeBridge","destinationBridge","require","encodeAddress","hexToU8a","isHex","shortenAddress","zIndex","blocker","position","content","height","width","borderRadius","top","left","transform","subtitle","agreement","startButton","marginBottom","layer4","PreflightModalTransfer","receiver","sender","sourceNetwork","targetNetwork","tokenSymbol","start","size","fullsize","input","label","checkbox","AddressInput","senderAddress","inputVariant","placeholder","labelClassName","captionMessage","sendToSameAccountHelper","useField","field","meta","helpers","stored","setStored","toggleReceiver","setValue","state","onChange","disabled","borderTopLeftRadius","borderTopRightRadius","overflow","CustomModal","slide","textAlign","NetworkSelectModal","useChainbridge","walletType","active","closePosition","injectedClass","inner","ChainbridgeContext","ChainbridgeProvider","setDepositVotes","transferTxHash","inTransitMessages","tokensDispatch","transactionStatus","depositVotes","destinationChains","handleDeposit","checkSupplies","homeConfig","resetDeposit","animation","typography","maxWidth","bottom","transitionDuration","heading","whiteSpace","stepIndicator","h4","button","borderColor","initCopy","sendingCopy","vote","textOverflow","marginLeft","fontStyle","warning","fontWeight","receipt","weighted","progress","background","TransferActiveModal","m","i","key","signed","window","TokenSelectInput","sync","labelParsed","balance","synced","setSynced","TokenInput","tokenSelectorKey","values","useFormikContext","FeesFormikWrapped","fee","feeSymbol","amountFormikName","toFixed","icon","fill","NetworkUnsupportedModal","pathname","useLocation","setOpen","supportedNetworks","setSupportedNetworks","ROUTE_LINKS","Transfer","filter","bc","n","PredefinedIcons","ETHIcon","WETHIcon","DAIIcon","celoUSD","walletArea","connectButton","connecting","connected","changeButton","cursor","networkName","formArea","currencySection","tokenInputArea","tokenInputSection","tokenInput","borderBottomRightRadius","borderRight","maxButton","borderBottomLeftRadius","currencySelector","paddingRight","addressInput","generalInput","faqButton","tokenItem","minWidth","fees","accountSelector","TransferPage","accounts","selectAccount","aboutOpen","setAboutOpen","walletConnecting","setWalletConnecting","changeNetworkOpen","setChangeNetworkOpen","preflightModalOpen","setPreflightModalOpen","tokenAmount","preflightDetails","setPreflightDetails","DECIMALS","REGEX","RegExp","transferSchema","object","shape","string","test","parseFloat","supplies","Boolean","required","isValidSubstrateAddress","isAddress","options","acc","findIndex","v","initialValues","validateOnChange","validationSchema","onSubmit","props","isValidating","dc","imageUri","src","alt","Fees","ExplorerPage","transfersReducer","transfers","action","currentProposals","payload","proposalEvents","currentVotes","votes","transferDetails","proposalStatus","Inactive","proposalEventBlockNumber","depositBlockNumber","proposalEventTransactionHash","depositTransactionHash","timestamp","proposalEventDetails","voteDetails","ExplorerContext","ExplorerProvider","useReducer","transfersDispatch","fetchTransfersAndListen","bridgeContract","erc20HandlerContract","depositFilter","getLogs","fromBlock","deployedBlockNumber","depositLogs","forEach","dl","parsedLog","interface","parseLog","getDepositRecord","args","destinationChainID","depositRecord","_depositer","blockNumber","transactionHash","getBlock","_destinationRecipientAddress","_tokenAddress","_amount","resourceID","fromAddress","fromChainId","fromNetworkName","toChainId","toNetworkName","toAddress","on","proposalEventFilter","ProposalEvent","proposalEventLogs","pel","originChainID","dataHash","status","originChainId","proposalVoteFilter","ProposalVote","proposalVoteLogs","pvl","voteBlockNumber","voteTransactionHash","voteStatus","bridges","bridgeContracts","handler","removeAllListeners","Explore","FilesRoutes","exact","path","to","lightTheme","createTheme","globalStyling","body","themeConfig","navItemHeight","general","1","transferUi","header","2","3","preflight","transactionModal","overrides","CheckboxInput","Button","variants","primary","hover","focus","outline","breakpoints","borderBottom","layer2","down","logo","maxHeight","indicator","accountInfo","mainInfo","AppHeader","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","minHeight","paddingTop","between","paddingBottom","cta","right","pageArea","navTabs","AppWrapper","activeClassName","App","reduce","tca","fallback","componentStack","eventId","resetError","message","showReportDialog","onReset","location","reload","themes","light","autoDismiss","tokensToWatch","networkIds","onboardConfig","dappId","wallets","walletName","preferred","subscriptions","checkNetwork","gasPricePollingInterval","gasPriceSetting","Routes","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","HomeBridgeContext","EVMDestinationAdaptorProvider","setTransferTxHash","setDestinationBridge","getTransactionReceipt","txReceipt","String","SubstrateHomeAdaptorProvider","registry","TypeRegistry","setApi","setIsReady","setAccounts","setAddress","setTokens","initiaising","query","toHuman","config","bridgeFeeFunctionName","BN","shiftedBy","confirmChainID","currentId","consts","bridgeChainId","item","isConnected","unsubscribe","system","account","result","toJSON","free","parseInt","balanceBN","unsub","web3Enable","web3Accounts","injectedAccounts","index","allAccounts","targetAccount","transferExtrinsic","web3FromSource","injector","signAndSend","events","isInBlock","isFinalized","event","FungibleTransfer","is","chainNonces","response","SubstrateDestinationAdaptorProvider","listenerActive","setListenerActive","record","phase","typeDef","section","method","unsubscribeCall","transitMessageReducer","transitMessage","NetworkManagerContext","NetworkManagerProvider","setHomeChainConfig","setHomeChains","setDestinationChains","bridgeConfig","handleSetDestination","DestinationProvider"],"mappings":"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K,8FC3BShD,EAAb,qGAEIE,EACAsD,GAEA,OAAO,IAAIC,IAASvD,EAASwD,EAAMF,OALvC,KASME,EAAO,CACX,CACEC,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,UACN/D,KAAM,WAER,CACE+D,KAAM,SACN/D,KAAM,YAGV+D,KAAM,UACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,SAGViE,SAAS,EACTC,gBAAiB,aACjBlE,KAAM,YAER,CACE6D,UAAU,EACVC,OAAQ,GACRC,KAAM,cACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,YAGViE,SAAS,EACTC,gBAAiB,OACjBlE,KAAM,YAER,CACE6D,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,SACN/D,KAAM,WAER,CACE+D,KAAM,YACN/D,KAAM,WAER,CACE+D,KAAM,SACN/D,KAAM,YAGV+D,KAAM,eACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,SAGViE,SAAS,EACTC,gBAAiB,aACjBlE,KAAM,YAER,CACE6D,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,UACN/D,KAAM,YAGV+D,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,YAGViE,SAAS,EACTC,gBAAiB,OACjBlE,KAAM,YAER,CACE6D,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,YACN/D,KAAM,WAER,CACE+D,KAAM,SACN/D,KAAM,YAGV+D,KAAM,WACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,SAGViE,SAAS,EACTC,gBAAiB,aACjBlE,KAAM,YAER,CACE6D,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,QACN/D,KAAM,WAER,CACE+D,KAAM,UACN/D,KAAM,YAGV+D,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACN/D,KAAM,YAGViE,SAAS,EACTC,gBAAiB,OACjBlE,KAAM,YAER,CACE8D,OAAQ,CACN,CACEC,KAAM,OACN/D,KAAM,UAER,CACE+D,KAAM,SACN/D,KAAM,UAER,CACE+D,KAAM,WACN/D,KAAM,UAGViE,SAAS,EACTC,gBAAiB,aACj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","file":"static/js/main.1d934b47.chunk.js","sourcesContent":["import { CeloProvider } from \"@celo-tools/celo-ethers-wrapper\";\nimport { ethers, utils, BigNumber } from \"ethers\";\nimport { Erc20HandlerFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\nimport { Erc20DetailedFactory } from \"../../../Contracts/Erc20DetailedFactory\";\n\nimport { EvmBridgeConfig, TokenConfig } from \"../../../chainbridgeConfig\";\n\nconst isCelo = (networkId?: number) =>\n  [42220, 44787, 62320].includes(networkId ?? 0);\n\nconst getRpcProviderFromHttpUrl = (url: string) => {\n  const urlInstance = new URL(url);\n  if (urlInstance.username && urlInstance.password) {\n    var urlInfo = {\n      url: urlInstance.hostname,\n      user: urlInstance.username,\n      password: urlInstance.password,\n    };\n    return new ethers.providers.JsonRpcProvider(urlInfo);\n  }\n  return new ethers.providers.JsonRpcProvider(url);\n};\n\nexport function getProvider(destinationChainConfig?: any) {\n  let provider: any;\n  if (isCelo(destinationChainConfig?.networkId)) {\n    provider = new CeloProvider(destinationChainConfig?.rpcUrl);\n  } else if (destinationChainConfig?.rpcUrl.startsWith(\"wss\")) {\n    if (destinationChainConfig.rpcUrl.includes(\"infura\")) {\n      const parts = destinationChainConfig.rpcUrl.split(\"/\");\n\n      provider = new ethers.providers.InfuraWebSocketProvider(\n        destinationChainConfig.networkId,\n        parts[parts.length - 1]\n      );\n    }\n    if (destinationChainConfig.rpcUrl.includes(\"alchemyapi\")) {\n      const parts = destinationChainConfig.rpcUrl.split(\"/\");\n\n      provider = new ethers.providers.AlchemyWebSocketProvider(\n        destinationChainConfig.networkId,\n        parts[parts.length - 1]\n      );\n    }\n  } else {\n    provider = getRpcProviderFromHttpUrl(destinationChainConfig?.rpcUrl);\n  }\n  return provider;\n}\n\nexport async function hasTokenSupplies(\n  destinationChain: EvmBridgeConfig,\n  tokens: Tokens,\n  token: TokenConfig,\n  amount: number,\n  tokenAddress: string\n) {\n  const destinationToken = destinationChain?.tokens.find(\n    (_token: TokenConfig) => _token.resourceId === token.resourceId\n  );\n  if (\n    destinationToken &&\n    destinationChain !== undefined &&\n    destinationChain.type === \"Ethereum\"\n  ) {\n    let provider = getProvider(destinationChain);\n    const erc20destinationToken = Erc20DetailedFactory.connect(\n      destinationToken.address,\n      provider\n    );\n    const destinationErc20Handler = (destinationChain as EvmBridgeConfig)\n      .erc20HandlerAddress;\n\n    const destinationErc20DHandlerInstance = Erc20HandlerFactory.connect(\n      destinationErc20Handler,\n      provider\n    );\n    const isMintable = await destinationErc20DHandlerInstance._burnList(\n      destinationToken.address\n    );\n    if (isMintable) {\n      console.log(\"token mintable on destination chain\");\n      return true;\n    }\n    const balanceTokens = await erc20destinationToken.balanceOf(\n      destinationErc20Handler\n    );\n    if (Number(utils.formatUnits(balanceTokens)) < amount) {\n      console.log(\"Not enough token balance on destination chain!\");\n      return false;\n    }\n    return true;\n  }\n}\n\nexport async function detectEIP1559MaxFeePerGas(\n  provider: ethers.providers.Web3Provider\n): Promise<boolean> {\n  try {\n    const feeData = await provider.getFeeData();\n    if (typeof feeData.maxFeePerGas !== \"undefined\") {\n      return true;\n    }\n  } catch (error) {\n    console.warn(error);\n    console.warn(\n      \"Can't access fee data for EIP-1559, fallback to legacy transaction\"\n    );\n  }\n  return false;\n}\n\nexport async function getPriceCompatibility(\n  provider: ethers.providers.Web3Provider | undefined,\n  homeChainConfig: any,\n  gasPrice: number\n) {\n  let gasPriceCompatibility = undefined;\n  if (provider) {\n    const hasMaxPrice = await detectEIP1559MaxFeePerGas(provider);\n    if (!hasMaxPrice) {\n      gasPriceCompatibility = BigNumber.from(\n        utils.parseUnits(\n          (\n            (homeChainConfig as EvmBridgeConfig).defaultGasPrice || gasPrice\n          ).toString(),\n          9\n        )\n      ).toString();\n    }\n  }\n  return gasPriceCompatibility;\n}\n","import React, { useContext } from \"react\";\nimport { DestinationChainContext } from \"./Adaptors/interfaces\";\n\nconst DestinationBridgeContext = React.createContext<\n  DestinationChainContext | undefined\n>(undefined);\n\nconst useDestinationBridge = () => {\n  const context = useContext(DestinationBridgeContext);\n  if (context === undefined) {\n    throw new Error(\"useHomeBridge must be called within a HomeBridgeProvider\");\n  }\n  return context;\n};\n\nexport { DestinationBridgeContext, useDestinationBridge };\n","import { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  chainbridgeConfig,\n  SubstrateBridgeConfig,\n} from \"../../../chainbridgeConfig\";\n\nexport const createApi = async (rpcUrl: string) => {\n  const provider = new WsProvider(rpcUrl);\n  const subChainConfig = chainbridgeConfig.chains.find(\n    (c) => c.rpcUrl === rpcUrl\n  ) as SubstrateBridgeConfig;\n  const types = (await import(`./${subChainConfig.typesFileName}`)) as any;\n  return ApiPromise.create({ provider, types });\n};\n\nexport const submitDeposit = (\n  api: ApiPromise,\n  amount: number,\n  recipient: string,\n  destinationChainId: number\n) => {\n  const subChainConfig = chainbridgeConfig.chains.find(\n    (c) => c.chainId !== destinationChainId\n  ) as SubstrateBridgeConfig;\n\n  return api.tx[subChainConfig.transferPalletName][\n    subChainConfig.transferFunctionName\n  ](\n    new BigNumber(amount)\n      .multipliedBy(\n        new BigNumber(10).pow(new BigNumber(subChainConfig.decimals))\n      )\n      .toString(10),\n    recipient,\n    destinationChainId\n  );\n};\n","/* Generated by ts-generator ver. 0.0.8 */\n/* tslint:disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport { Erc20Detailed } from \"./Erc20Detailed\";\n\nexport class Erc20DetailedFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Erc20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as Erc20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        name: \"decimals\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Weth } from \"./Weth\";\n\nexport class WethFactory {\n  static connect(address: string, signerOrProvider: Signer | Provider): Weth {\n    return new Contract(address, _abi, signerOrProvider) as Weth;\n  }\n}\n\nconst _abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Deposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Withdrawal\",\n    type: \"event\",\n  },\n];\n","import React from \"react\";\nimport { Bridge, BridgeFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { useWeb3 } from \"@chainsafe/web3-context\";\nimport { BigNumber, utils } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  chainbridgeConfig,\n  EvmBridgeConfig,\n  TokenConfig,\n} from \"../../../chainbridgeConfig\";\nimport { Erc20DetailedFactory } from \"../../../Contracts/Erc20DetailedFactory\";\nimport { Weth } from \"../../../Contracts/Weth\";\nimport { WethFactory } from \"../../../Contracts/WethFactory\";\nimport { useNetworkManager } from \"../../NetworkManagerContext\";\nimport { IHomeBridgeProviderProps } from \"../interfaces\";\nimport { HomeBridgeContext } from \"../../HomeBridgeContext\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\n\nimport { hasTokenSupplies, getPriceCompatibility } from \"./helpers\";\n\nconst resetAllowanceLogicFor = [\n  \"0xdac17f958d2ee523a2206206994597c13d831ec7\", //USDT\n  \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\", //cUSD CELO\n  // \"0xe09523d86d9b788BCcb580d061605F31FCe69F51\", //сTST CELO cUSD on Rinkeby\n  //Add other offending tokens here\n];\n\nexport const EVMHomeAdaptorProvider = ({\n  children,\n}: IHomeBridgeProviderProps) => {\n  const {\n    isReady,\n    network,\n    provider,\n    gasPrice,\n    address,\n    tokens,\n    wallet,\n    checkIsReady,\n    ethBalance,\n    onboard,\n    resetOnboard,\n  } = useWeb3();\n\n  const getNetworkName = (id: any) => {\n    switch (Number(id)) {\n      case 5:\n        return \"Localhost\";\n      case 1:\n        return \"Mainnet\";\n      case 3:\n        return \"Ropsten\";\n      case 4:\n        return \"Rinkeby\";\n      // case 5:\n      //   return \"Goerli\";\n      case 6:\n        return \"Kotti\";\n      case 42:\n        return \"Kovan\";\n      case 61:\n        return \"Ethereum Classic - Mainnet\";\n      case 42220:\n        return \"CELO - Mainnet\";\n      case 44787:\n        return \"CELO - Alfajores Testnet\";\n      case 62320:\n        return \"CELO - Baklava Testnet\";\n      default:\n        return \"Other\";\n    }\n  };\n\n  const {\n    homeChainConfig,\n    setTransactionStatus,\n    setDepositNonce,\n    handleSetHomeChain,\n    homeChains,\n    setNetworkId,\n  } = useNetworkManager();\n\n  const [homeBridge, setHomeBridge] = useState<Bridge | undefined>(undefined);\n  const [relayerThreshold, setRelayerThreshold] = useState<number | undefined>(\n    undefined\n  );\n  const [bridgeFee, setBridgeFee] = useState<number | undefined>();\n\n  const [depositAmount, setDepositAmount] = useState<number | undefined>();\n  const [selectedToken, setSelectedToken] = useState<string>(\"\");\n\n  // Contracts\n  const [wrapper, setWrapper] = useState<Weth | undefined>(undefined);\n  const [wrapTokenConfig, setWrapperConfig] = useState<TokenConfig | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    if (network) {\n      const chain = homeChains.find((chain) => chain.networkId === network);\n      setNetworkId(network);\n      if (chain) {\n        handleSetHomeChain(chain.chainId);\n      }\n    }\n  }, [handleSetHomeChain, homeChains, network, setNetworkId]);\n\n  const [initialising, setInitialising] = useState(false);\n  const [walletSelected, setWalletSelected] = useState(false);\n  useEffect(() => {\n    if (initialising || homeBridge || !onboard) return;\n    console.log(\"starting init\");\n    setInitialising(true);\n    if (!walletSelected) {\n      onboard\n        .walletSelect(\"metamask\")\n        .then((success) => {\n          setWalletSelected(success);\n          if (success) {\n            checkIsReady()\n              .then((success) => {\n                if (success) {\n                  if (homeChainConfig && network && isReady && provider) {\n                    const signer = provider.getSigner();\n                    if (!signer) {\n                      console.log(\"No signer\");\n                      setInitialising(false);\n                      return;\n                    }\n\n                    const bridge = BridgeFactory.connect(\n                      (homeChainConfig as EvmBridgeConfig).bridgeAddress,\n                      signer\n                    );\n                    setHomeBridge(bridge);\n\n                    const wrapperToken = homeChainConfig.tokens.find(\n                      (token) => token.isNativeWrappedToken\n                    );\n\n                    if (!wrapperToken) {\n                      setWrapperConfig(undefined);\n                      setWrapper(undefined);\n                    } else {\n                      setWrapperConfig(wrapperToken);\n                      const connectedWeth = WethFactory.connect(\n                        wrapperToken.address,\n                        signer\n                      );\n                      setWrapper(connectedWeth);\n                    }\n                  }\n                }\n              })\n              .catch((error) => {\n                console.error(error);\n              })\n              .finally(() => {\n                setInitialising(false);\n              });\n          }\n        })\n        .catch((error) => {\n          setInitialising(false);\n          console.error(error);\n        });\n    } else {\n      checkIsReady()\n        .then((success) => {\n          if (success) {\n            if (homeChainConfig && network && isReady && provider) {\n              const signer = provider.getSigner();\n              if (!signer) {\n                console.log(\"No signer\");\n                setInitialising(false);\n                return;\n              }\n\n              const bridge = BridgeFactory.connect(\n                (homeChainConfig as EvmBridgeConfig).bridgeAddress,\n                signer\n              );\n              setHomeBridge(bridge);\n\n              const wrapperToken = homeChainConfig.tokens.find(\n                (token) => token.isNativeWrappedToken\n              );\n\n              if (!wrapperToken) {\n                setWrapperConfig(undefined);\n                setWrapper(undefined);\n              } else {\n                setWrapperConfig(wrapperToken);\n                const connectedWeth = WethFactory.connect(\n                  wrapperToken.address,\n                  signer\n                );\n                setWrapper(connectedWeth);\n              }\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          setInitialising(false);\n        });\n    }\n  }, [\n    initialising,\n    homeChainConfig,\n    isReady,\n    provider,\n    checkIsReady,\n    network,\n    homeBridge,\n    onboard,\n    walletSelected,\n  ]);\n\n  useEffect(() => {\n    const getRelayerThreshold = async () => {\n      if (homeBridge) {\n        const threshold = BigNumber.from(\n          await homeBridge._relayerThreshold()\n        ).toNumber();\n        setRelayerThreshold(threshold);\n      }\n    };\n    const getBridgeFee = async () => {\n      if (homeBridge) {\n        const bridgeFee = Number(utils.formatEther(await homeBridge._fee()));\n        setBridgeFee(bridgeFee);\n      }\n    };\n    getRelayerThreshold();\n    getBridgeFee();\n  }, [homeBridge]);\n\n  const handleConnect = useCallback(async () => {\n    if (wallet && wallet.connect && network) {\n      await onboard?.walletSelect(\"metamask\");\n      await wallet.connect();\n    }\n  }, [wallet, network, onboard]);\n\n  const handleCheckSupplies = useCallback(\n    async (\n      amount: number,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (homeChainConfig) {\n        const destinationChain = chainbridgeConfig.chains.find(\n          (c) => c.chainId === destinationChainId\n        );\n        const token = homeChainConfig.tokens.find(\n          (token) => token.address === tokenAddress\n        );\n\n        if (destinationChain?.type === \"Ethereum\" && token) {\n          const hasSupplies = await hasTokenSupplies(\n            destinationChain,\n            tokens,\n            token,\n            amount,\n            tokenAddress\n          );\n          if (!hasSupplies) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    [homeChainConfig, tokens]\n  );\n\n  const deposit = useCallback(\n    async (\n      amount: number,\n      recipient: string,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (!homeChainConfig || !homeBridge) {\n        console.error(\"Home bridge contract is not instantiated\");\n        return;\n      }\n      const signer = provider?.getSigner();\n      if (!address || !signer) {\n        console.log(\"No signer\");\n        return;\n      }\n\n      const destinationChain = chainbridgeConfig.chains.find(\n        (c) => c.chainId === destinationChainId\n      );\n      if (destinationChain?.type === \"Substrate\") {\n        recipient = `0x${Buffer.from(decodeAddress(recipient)).toString(\n          \"hex\"\n        )}`;\n      }\n      const token = homeChainConfig.tokens.find(\n        (token) => token.address === tokenAddress\n      );\n\n      if (!token) {\n        console.log(\"Invalid token selected\");\n        return;\n      }\n      setTransactionStatus(\"Initializing Transfer\");\n      setDepositAmount(amount);\n      setSelectedToken(tokenAddress);\n      const erc20 = Erc20DetailedFactory.connect(tokenAddress, signer);\n      const erc20Decimals = tokens[tokenAddress].decimals;\n\n      const data =\n        \"0x\" +\n        utils\n          .hexZeroPad(\n            // TODO Wire up dynamic token decimals\n            BigNumber.from(\n              utils.parseUnits(amount.toString(), erc20Decimals)\n            ).toHexString(),\n            32\n          )\n          .substr(2) + // Deposit Amount (32 bytes)\n        utils\n          .hexZeroPad(utils.hexlify((recipient.length - 2) / 2), 32)\n          .substr(2) + // len(recipientAddress) (32 bytes)\n        recipient.substr(2); // recipientAddress (?? bytes)\n\n      try {\n        const gasPriceCompatibility = await getPriceCompatibility(\n          provider,\n          homeChainConfig,\n          gasPrice\n        );\n\n        const currentAllowance = await erc20.allowance(\n          address,\n          (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress\n        );\n\n        if (\n          Number(utils.formatUnits(currentAllowance, erc20Decimals)) < amount\n        ) {\n          if (\n            Number(utils.formatUnits(currentAllowance, erc20Decimals)) > 0 &&\n            resetAllowanceLogicFor.includes(tokenAddress)\n          ) {\n            //We need to reset the user's allowance to 0 before we give them a new allowance\n            //TODO Should we alert the user this is happening here?\n            await (\n              await erc20.approve(\n                (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress,\n                BigNumber.from(utils.parseUnits(\"0\", erc20Decimals)),\n                {\n                  gasPrice: gasPriceCompatibility,\n                }\n              )\n            ).wait(1);\n          }\n          await (\n            await erc20.approve(\n              (homeChainConfig as EvmBridgeConfig).erc20HandlerAddress,\n              BigNumber.from(\n                utils.parseUnits(amount.toString(), erc20Decimals)\n              ),\n              {\n                gasPrice: gasPriceCompatibility,\n              }\n            )\n          ).wait(1);\n        }\n        homeBridge.once(\n          homeBridge.filters.Deposit(\n            destinationChainId,\n            token.resourceId,\n            null\n          ),\n          (destChainId, resourceId, depositNonce) => {\n            setDepositNonce(`${depositNonce.toString()}`);\n            setTransactionStatus(\"In Transit\");\n          }\n        );\n\n        await (\n          await homeBridge.deposit(destinationChainId, token.resourceId, data, {\n            gasPrice: gasPriceCompatibility,\n            value: utils.parseUnits((bridgeFee || 0).toString(), 18),\n          })\n        ).wait();\n\n        return Promise.resolve();\n      } catch (error) {\n        console.error(error);\n        setTransactionStatus(\"Transfer Aborted\");\n        setSelectedToken(tokenAddress);\n      }\n    },\n    [\n      homeBridge,\n      address,\n      bridgeFee,\n      homeChainConfig,\n      gasPrice,\n      provider,\n      setDepositNonce,\n      setTransactionStatus,\n      tokens,\n    ]\n  );\n\n  const wrapToken = async (value: number): Promise<string> => {\n    if (!wrapTokenConfig || !wrapper?.deposit || !homeChainConfig)\n      return \"not ready\";\n\n    try {\n      const gasPriceCompatibility = await getPriceCompatibility(\n        provider,\n        homeChainConfig,\n        gasPrice\n      );\n\n      const tx = await wrapper.deposit({\n        value: parseUnits(`${value}`, homeChainConfig.decimals),\n        gasPrice: gasPriceCompatibility,\n      });\n\n      await tx?.wait();\n      if (tx?.hash) {\n        return tx?.hash;\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      console.error(error);\n      return \"\";\n    }\n  };\n\n  const unwrapToken = async (value: number): Promise<string> => {\n    if (!wrapTokenConfig || !wrapper?.withdraw || !homeChainConfig)\n      return \"not ready\";\n\n    try {\n      const gasPriceCompatibility = await getPriceCompatibility(\n        provider,\n        homeChainConfig,\n        gasPrice\n      );\n\n      const tx = await wrapper.deposit({\n        value: parseUnits(`${value}`, homeChainConfig.decimals),\n        gasPrice: gasPriceCompatibility,\n      });\n\n      await tx?.wait();\n      if (tx?.hash) {\n        return tx?.hash;\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      console.error(error);\n      return \"\";\n    }\n  };\n\n  return (\n    <HomeBridgeContext.Provider\n      value={{\n        connect: handleConnect,\n        disconnect: async () => {\n          await resetOnboard();\n        },\n        getNetworkName,\n        bridgeFee,\n        deposit,\n        depositAmount,\n        selectedToken,\n        setDepositAmount,\n        setSelectedToken,\n        tokens,\n        relayerThreshold,\n        wrapTokenConfig,\n        wrapper,\n        wrapToken,\n        unwrapToken,\n        isReady,\n        chainConfig: homeChainConfig,\n        address,\n        nativeTokenBalance: ethBalance,\n        handleCheckSupplies,\n      }}\n    >\n      {children}\n    </HomeBridgeContext.Provider>\n  );\n};\n","export type TokenConfig = {\n  address: string;\n  name?: string;\n  symbol?: string;\n  imageUri?: string;\n  resourceId: string;\n  isNativeWrappedToken?: boolean;\n};\n\nexport type ChainType = \"Ethereum\" | \"Substrate\";\n\nexport type BridgeConfig = {\n  networkId?: number;\n  chainId: number;\n  name: string;\n  rpcUrl: string;\n  type: ChainType;\n  tokens: TokenConfig[];\n  nativeTokenSymbol: string;\n  decimals: number;\n  existential?: number;\n};\n\nexport type EvmBridgeConfig = BridgeConfig & {\n  bridgeAddress: string;\n  erc20HandlerAddress: string;\n  type: \"Ethereum\";\n  //This should be the full path to display a tx hash, without the trailing slash, ie. https://etherscan.io/tx\n  blockExplorer?: string;\n  defaultGasPrice?: number;\n  deployedBlockNumber?: number;\n};\n\nexport type SubstrateBridgeConfig = BridgeConfig & {\n  type: \"Substrate\";\n  chainbridgePalletName: string;\n  bridgeFeeFunctionName?: string; // If this value is provided, the chain value will be used will be used\n  bridgeFeeValue?: number; // If the above value is not provided, this value will be used for the fee. No scaling should be applied.\n  transferPalletName: string;\n  transferFunctionName: string;\n  typesFileName: string;\n};\n\nexport type ChainbridgeConfig = {\n  chains: Array<EvmBridgeConfig | SubstrateBridgeConfig>;\n};\n\nexport const chainbridgeConfig: ChainbridgeConfig = {\n  // Local GETH <> Local Substrate\n  chains: [\n    {\n      chainId: +((process.env\n        .REACT_APP_ETHEREUM_CHAIN_ID as unknown) as number),\n      networkId: +((process.env\n        .REACT_APP_ETHEREUM_NETWORK_ID as unknown) as number),\n      name: process.env.REACT_APP_ETHEREUM_NETWORK_NAME as string,\n      decimals: 18,\n      bridgeAddress: process.env.REACT_APP_ETHEREUM_BRIDGE_ADDRESS as string,\n      erc20HandlerAddress: process.env\n        .REACT_APP_ETHEREUM_ERC20_HANDLER_ADDRESS as string,\n      rpcUrl: process.env.REACT_APP_ETHEREUM_RPC_URL as string,\n      blockExplorer: process.env.REACT_APP_ETHEREUM_EXPLORER_URL as string,\n      type: \"Ethereum\",\n      nativeTokenSymbol: \"ETH\",\n      tokens: [\n        {\n          address: process.env.REACT_APP_ETHEREUM_ERC20_TOKEN_ADDRESS as string,\n          name: process.env.REACT_APP_ETHEREUM_ERC20_NAME as string,\n          symbol: process.env.REACT_APP_ETHEREUM_ERC20_SYMBOL as string,\n          // imageUri: ATAIcon,\n          resourceId: process.env.REACT_APP_ETHEREUM_RESOURCE_ID as string,\n        },\n      ],\n    },\n    {\n      chainId: +((process.env\n        .REACT_APP_ATA_BRIDGECHAIN_ID as unknown) as number),\n      networkId: +((process.env.REACT_APP_ATA_NETWORK_ID as unknown) as number),\n      name: process.env.REACT_APP_ATA_NETWORK_NAME as string,\n      decimals: 18,\n      rpcUrl: process.env.REACT_APP_ATA_RPC_URL as string,\n      type: \"Substrate\",\n      nativeTokenSymbol: \"ATA\",\n      chainbridgePalletName: \"chainBridge\",\n      bridgeFeeValue: 0,\n      transferPalletName: \"bridgeTransfer\",\n      transferFunctionName: \"transferNative\",\n      typesFileName: \"bridgeTypes.json\",\n      existential: 0.01,\n      tokens: [\n        {\n          address: \"substrate-native\",\n          name: \"ATA\",\n          symbol: \"ATA\",\n          resourceId: \"substratsubme-native\",\n        },\n      ],\n    },\n  ],\n};\n","module.exports = __webpack_public_path__ + \"static/media/eth.9b4c5748.svg\";","module.exports = __webpack_public_path__ + \"static/media/weth.802c6eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/dai.15edf859.svg\";","module.exports = __webpack_public_path__ + \"static/media/cusd.45c5902a.svg\";","var map = {\n\t\"./ChainBridgeAPI\": [\n\t\t196,\n\t\t9\n\t],\n\t\"./ChainBridgeAPI.tsx\": [\n\t\t196,\n\t\t9\n\t],\n\t\"./bridgeTypes\": [\n\t\t497,\n\t\t3,\n\t\t14\n\t],\n\t\"./bridgeTypes.json\": [\n\t\t497,\n\t\t3,\n\t\t14\n\t],\n\t\"./centrifuge-types\": [\n\t\t498,\n\t\t9,\n\t\t12\n\t],\n\t\"./centrifuge-types.ts\": [\n\t\t498,\n\t\t9,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 555;\nmodule.exports = webpackAsyncContext;","import { BigNumber } from \"@ethersproject/bignumber\";\n\nexport enum ProposalStatus {\n  Inactive,\n  Active,\n  Passed,\n  Executed,\n  Cancelled,\n}\n\nexport type DepositRecord = {\n  fromAddress?: string;\n  fromChainId?: number;\n  fromNetworkName?: string;\n  toAddress?: string;\n  toChainId?: number;\n  toNetworkName?: string;\n  tokenAddress?: string;\n  amount?: BigNumber;\n  timestamp?: number;\n  depositTransactionHash?: string;\n  depositBlockNumber?: number;\n  proposalEvents: Array<{\n    proposalStatus: ProposalStatus;\n    dataHash?: string;\n    proposalEventTransactionHash?: string;\n    proposalEventBlockNumber: number;\n    timestamp: number;\n  }>;\n  votes: Array<{\n    voteStatus: boolean;\n    voteTransactionHash?: string;\n    voteBlockNumber: number;\n    timestamp: number;\n    dataHash: string;\n  }>;\n};\n\nexport type AddTransferPayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromAddress: string;\n    fromChainId: number;\n    fromNetworkName: string;\n    toAddress: string;\n    toChainId: number;\n    toNetworkName: string;\n    tokenAddress?: string;\n    amount?: BigNumber;\n    resourceId: string;\n    timestamp: number;\n    depositTransactionHash: string;\n    depositBlockNumber: number;\n  };\n};\n\nexport type AddProposalPayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromChainId: number;\n    fromNetworkName: string;\n    toChainId: number;\n    toNetworkName: string;\n    resourceId: string;\n  };\n  proposalEventDetails: {\n    proposalStatus: ProposalStatus;\n    dataHash: string;\n    proposalEventTransactionHash: string;\n    proposalEventBlockNumber: number;\n    timestamp: number;\n  };\n};\n\nexport type AddVotePayload = {\n  depositNonce: number;\n  transferDetails: {\n    fromChainId: number;\n    fromNetworkName: string;\n    toChainId: number;\n    toNetworkName: string;\n    resourceId: string;\n  };\n  voteDetails: {\n    voteStatus: boolean;\n    voteTransactionHash: string;\n    voteBlockNumber: number;\n    timestamp: number;\n    dataHash: string;\n  };\n};\n\nexport type Transfers = {\n  [depositNonce: number]: DepositRecord;\n};\n\nexport function transfersReducer(\n  transfers: Transfers,\n  action:\n    | {\n        type: \"addTransfer\";\n        payload: AddTransferPayload;\n      }\n    | {\n        type: \"addProposalEvent\";\n        payload: AddProposalPayload;\n      }\n    | {\n        type: \"addVote\";\n        payload: AddVotePayload;\n      }\n): Transfers {\n  switch (action.type) {\n    case \"addTransfer\": {\n      const currentProposals =\n        transfers[action.payload.depositNonce]?.proposalEvents || [];\n      const currentVotes = transfers[action.payload.depositNonce]?.votes || [];\n\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          proposalEvents: [\n            {\n              proposalStatus: ProposalStatus.Inactive,\n              proposalEventBlockNumber:\n                action.payload.transferDetails.depositBlockNumber,\n              proposalEventTransactionHash:\n                action.payload.transferDetails.depositTransactionHash,\n              timestamp: action.payload.transferDetails.timestamp,\n            },\n            ...currentProposals,\n          ],\n          votes: [...currentVotes],\n        },\n      };\n    }\n    case \"addProposalEvent\": {\n      const currentProposals =\n        transfers[action.payload.depositNonce]?.proposalEvents || [];\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          proposalEvents: [\n            ...currentProposals,\n            action.payload.proposalEventDetails,\n          ],\n        },\n      };\n    }\n    case \"addVote\": {\n      const currentVotes = transfers[action.payload.depositNonce]?.votes || [];\n      return {\n        ...transfers,\n        [action.payload.depositNonce]: {\n          ...transfers[action.payload.depositNonce],\n          ...action.payload.transferDetails,\n          votes: [...currentVotes, action.payload.voteDetails],\n        },\n      };\n    }\n    default:\n      return transfers;\n  }\n}\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport { Drawer, IDrawerProps } from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      backgroundColor: `${palette.additional[\"gray\"][9]} !important`,\n      color: palette.common.white.main,\n      border: \"none\",\n      padding: `${constants.generalUnit * 3}px ${constants.generalUnit * 4}px`,\n    },\n    backdrop: {\n      backgroundColor: `${palette.additional[\"gray\"][9]} !important`,\n      opacity: `0.6 !important`,\n    },\n  })\n);\n\ninterface ICustomDrawerProps extends IDrawerProps {}\n\nconst CustomDrawer: React.FC<ICustomDrawerProps> = ({\n  children,\n  className,\n  ...rest\n}: ICustomDrawerProps) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      classNames={{\n        backdrop: classes.backdrop,\n      }}\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default CustomDrawer;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      \"& *\": {\n        marginRight: constants.generalUnit,\n        textDecoration: \"none\",\n      },\n    },\n  })\n);\n\ninterface IAboutDrawerProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst AboutDrawer: React.FC<IAboutDrawerProps> = ({\n  open,\n  close,\n}: IAboutDrawerProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer onClose={close} open={open} className={classes.root}>\n      <Typography variant=\"h1\" component=\"h4\">\n        What is ChainBridge?\n      </Typography>\n      <Typography component=\"p\" variant=\"h5\">\n        ChainBridge is a modular multi-directional blockchain bridge to allow\n        data and value transfer between any number of blockchains. This should\n        enable users to specify a destination blockchain from their source\n        chain, and send data to that blockchain for consumption on the\n        destination chain. <br />\n        <br />\n        This could be a token that is locked on ChainA and redeemed on ChainB,\n        or an operation that is executed on a destination chain and initiated on\n        the source chain.\n      </Typography>\n      <section className={classes.buttons}>\n        <Button onClick={() => close()} variant=\"outline\">\n          OK\n        </Button>\n        <a\n          rel=\"noopener noreferrer\"\n          href={process.env.REACT_APP_SUPPORT_URL}\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\">\n            Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n          </Button>\n        </a>\n      </section>\n    </CustomDrawer>\n  );\n};\n\nexport default AboutDrawer;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport { useHomeBridge } from \"../Contexts/HomeBridgeContext\";\nimport { useDestinationBridge } from \"../Contexts/DestinationBridgeContext\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {},\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        marginTop: constants.generalUnit * 2,\n        marginRight: constants.generalUnit,\n        textDecoration: \"none\",\n      },\n    },\n    paragraph: {\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n  })\n);\n\ninterface IChangeNetworkDrawerProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst ChangeNetworkDrawer: React.FC<IChangeNetworkDrawerProps> = ({\n  open,\n  close,\n}) => {\n  const classes = useStyles();\n\n  const {\n    setWalletType,\n    handleSetHomeChain,\n    setDestinationChain,\n  } = useNetworkManager();\n  const { disconnect } = useHomeBridge();\n  const destinationBridge = useDestinationBridge();\n\n  return (\n    <CustomDrawer open={open} className={classes.root}>\n      <Typography variant=\"h3\" component=\"h2\">\n        Changing Networks\n      </Typography>\n      <Typography className={classes.paragraph} component=\"p\" variant=\"h5\">\n        To change networks, please open your browser wallet and change networks\n        there. If your wallet does not support your desired home network, please\n        connect a different wallet. <br />\n        <br />\n        Note: your transfer settings will be reset.\n      </Typography>\n      <section className={classes.buttons}>\n        <Button onClick={close} variant=\"outline\">\n          OK\n        </Button>\n        <Button\n          onClick={async () => {\n            // TODO: trigger unsubscribes & clear all state\n            await Promise.all([destinationBridge.disconnect(), disconnect()]);\n            handleSetHomeChain(undefined);\n            setDestinationChain(undefined);\n            setWalletType(\"select\");\n          }}\n          variant=\"outline\"\n        >\n          Connect different wallet\n        </Button>\n        <a\n          rel=\"noopener noreferrer\"\n          href={process.env.REACT_APP_SUPPORT_URL}\n          target=\"_blank\"\n        >\n          <Button variant=\"outline\">\n            Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n          </Button>\n        </a>\n      </section>\n    </CustomDrawer>\n  );\n};\n\nexport default ChangeNetworkDrawer;\n","const { decodeAddress, encodeAddress } = require(\"@polkadot/keyring\");\nconst { hexToU8a, isHex } = require(\"@polkadot/util\");\n\nexport const shortenAddress = (address: string) => {\n  return `${address.substr(0, 6)}...${address.substr(address.length - 6, 6)}`;\n};\n\nexport const isValidSubstrateAddress = (address: string) => {\n  try {\n    encodeAddress(isHex(address) ? hexToU8a(address) : decodeAddress(address));\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@chainsafe/common-components\";\nimport { shortenAddress } from \"../Utils/Helpers\";\n\nconst useStyles = makeStyles(({ constants, palette, zIndex }: ITheme) =>\n  createStyles({\n    root: {\n      zIndex: zIndex?.blocker,\n      position: \"absolute\",\n      \"& li\": {\n        position: \"relative\",\n        padding: `${constants.generalUnit}px 0 ${constants.generalUnit}px ${\n          constants.generalUnit * 8\n        }px`,\n        \"&:before\": {\n          content: \"''\",\n          display: \"block\",\n          backgroundColor: palette.additional[\"gray\"][2],\n          height: constants.generalUnit,\n          width: constants.generalUnit,\n          borderRadius: \"50%\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: constants.generalUnit * 4,\n          transform: \"translate(-50%, -50%)\",\n        },\n      },\n    },\n    subtitle: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    agreement: {\n      margin: `${constants.generalUnit * 2}px 0`,\n    },\n    startButton: {\n      backgroundColor: palette.additional[\"preflight\"][1],\n      color: palette.additional[\"preflight\"][2],\n      marginBottom: constants.generalUnit * 2,\n    },\n    backdrop: {\n      position: \"absolute\",\n      zIndex: zIndex?.layer4,\n    },\n  })\n);\n\ninterface IPreflightModalTransferProps {\n  open: boolean;\n  close: () => void;\n  sender: string;\n  receiver: string;\n  value: number;\n  tokenSymbol: string;\n  sourceNetwork: string;\n  targetNetwork: string;\n  start: () => void;\n}\n\nconst PreflightModalTransfer: React.FC<IPreflightModalTransferProps> = ({\n  open,\n  close,\n  receiver,\n  sender,\n  sourceNetwork,\n  targetNetwork,\n  tokenSymbol,\n  value,\n  start,\n}: IPreflightModalTransferProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer\n      className={classes.root}\n      classNames={{\n        backdrop: classes.backdrop,\n      }}\n      size={430}\n      open={open}\n    >\n      <Typography variant=\"h3\" component=\"h2\">\n        Pre-flight check\n      </Typography>\n      <Typography className={classes.subtitle} variant=\"h5\" component=\"p\">\n        Please be advised this is an experimental application:\n      </Typography>\n      <ul>\n        <li>\n          <Typography variant=\"h5\">\n            You will not be able to cancel the transaction once you submit it.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Your transaction could get stuck for an indefinite amount of time\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Funds cannot be returned if they are sent to the wrong address.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            The transaction fee may be higher than expected.\n          </Typography>\n        </li>\n      </ul>\n      <Typography className={classes.agreement} variant=\"h5\" component=\"p\">\n        I agree and want to send{\" \"}\n        <strong>\n          {value} {tokenSymbol}\n        </strong>{\" \"}\n        from&nbsp;\n        <strong>{shortenAddress(sender)}</strong> on{\" \"}\n        <strong>{sourceNetwork}</strong> to&nbsp;\n        <strong>{shortenAddress(receiver)}</strong> on{\" \"}\n        <strong>{targetNetwork}</strong>.\n      </Typography>\n      <Button onClick={start} className={classes.startButton} fullsize>\n        Start Transfer\n      </Button>\n      <Button onClick={close}>Back</Button>\n    </CustomDrawer>\n  );\n};\n\nexport default PreflightModalTransfer;\n","import React, { useCallback, useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport {\n  CheckboxInput,\n  FormikTextInputProps,\n  TextInput,\n} from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\nimport { useField } from \"formik\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {},\n    input: {\n      margin: 0,\n      width: \"100%\",\n    },\n    label: {\n      marginBottom: constants.generalUnit,\n    },\n    checkbox: {\n      marginTop: constants.generalUnit * 3,\n    },\n  })\n);\n\ninterface IAddressInput extends FormikTextInputProps {\n  senderAddress: string;\n  classNames?: {\n    input?: string;\n  };\n  sendToSameAccountHelper?: boolean;\n}\n\nconst AddressInput: React.FC<IAddressInput> = ({\n  classNames,\n  senderAddress,\n  className,\n  inputVariant = \"default\",\n  type = \"text\",\n  placeholder,\n  name,\n  size,\n  label,\n  labelClassName,\n  captionMessage,\n  sendToSameAccountHelper = false,\n  ...rest\n}: IAddressInput) => {\n  const classes = useStyles();\n  const [field, meta, helpers] = useField(name);\n\n  const [stored, setStored] = useState<string | undefined>();\n\n  const toggleReceiver = useCallback(() => {\n    if (stored === undefined) {\n      setStored(field.value);\n      helpers.setValue(senderAddress);\n    } else {\n      helpers.setValue(stored);\n      setStored(undefined);\n    }\n  }, [helpers, field, senderAddress, stored, setStored]);\n\n  return (\n    <section className={clsx(classes.root, className)}>\n      <div>\n        <TextInput\n          {...rest}\n          label={label ? label : field.name}\n          inputVariant={inputVariant}\n          type={type}\n          size={size}\n          className={clsx(classNames?.input, classes.input)}\n          labelClassName={clsx(labelClassName, classes.label)}\n          name={field.name}\n          value={field.value}\n          placeholder={placeholder}\n          captionMessage={\n            meta.error ? `${meta.error}` : captionMessage && captionMessage\n          }\n          state={meta.error ? \"error\" : undefined}\n          onChange={helpers.setValue}\n          disabled={stored !== undefined}\n        />\n      </div>\n      {sendToSameAccountHelper && (\n        <div className={classes.checkbox}>\n          <CheckboxInput\n            label=\"I want to send funds to my address\"\n            value={stored !== undefined}\n            onChange={() => toggleReceiver()}\n          />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default AddressInput;\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport { IModalProps, Modal } from \"@chainsafe/common-components\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(({ constants }: ITheme) =>\n  createStyles({\n    root: {\n      height: `100% !important`,\n      borderTopLeftRadius: constants.generalUnit / 2,\n      borderTopRightRadius: constants.generalUnit / 2,\n      overflow: \"hidden\",\n      position: \"absolute\",\n    },\n  })\n);\n\ninterface ICustomModalProps extends IModalProps {}\n\nconst CustomModal: React.FC<ICustomModalProps> = ({\n  children,\n  className,\n  ...rest\n}: ICustomModalProps) => {\n  const classes = useStyles();\n\n  return (\n    <Modal className={clsx(classes.root, className)} {...rest}>\n      {children}\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","import React from \"react\";\nimport { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport {\n  Button,\n  Modal,\n  ProgressBar,\n  Typography,\n} from \"@chainsafe/common-components\";\n\nconst useStyles = makeStyles(({ constants, palette, zIndex }: ITheme) => {\n  return createStyles({\n    root: {},\n    slide: {\n      borderRadius: constants.generalUnit / 2,\n      padding: `${constants.generalUnit}px ${constants.generalUnit * 2}px`,\n      \"& > p\": {\n        marginTop: constants.generalUnit * 2,\n        marginBottom: constants.generalUnit * 3,\n        textAlign: \"center\",\n      },\n    },\n    buttons: {\n      marginBottom: constants.generalUnit * 2,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n    },\n  });\n});\n\nconst NetworkSelectModal = () => {\n  const classes = useStyles();\n  const { isReady } = useChainbridge();\n  const { walletType, setWalletType } = useNetworkManager();\n\n  return (\n    <Modal\n      active={walletType !== \"unset\" && walletType !== \"Ethereum\" && !isReady}\n      closePosition=\"right\"\n      className={classes.root}\n      injectedClass={{\n        inner: classes.slide,\n      }}\n    >\n      {walletType === \"select\" && (\n        <>\n          <Typography variant=\"h3\" component=\"p\">\n            Please select a wallet type\n          </Typography>\n          <section className={classes.buttons}>\n            <Button onClick={() => setWalletType(\"Ethereum\")}>\n              Use Ethereum wallet\n            </Button>\n            <Button onClick={() => setWalletType(\"Substrate\")}>\n              Use Substrate wallet\n            </Button>\n          </section>\n        </>\n      )}\n      {walletType === \"Substrate\" && (\n        <>\n          <Typography variant=\"h2\" component=\"p\">\n            Connecting to node\n          </Typography>\n          <ProgressBar size=\"small\" variant=\"primary\" />\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NetworkSelectModal;\n","import React, { useCallback, useContext } from \"react\";\nimport {\n  BridgeConfig,\n  chainbridgeConfig,\n  TokenConfig,\n} from \"../chainbridgeConfig\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\nimport {\n  TransactionStatus,\n  useNetworkManager,\n  Vote,\n} from \"./NetworkManagerContext\";\nimport { useHomeBridge } from \"./HomeBridgeContext\";\nimport NetworkSelectModal from \"../Modules/NetworkSelectModal\";\n\ninterface IChainbridgeContextProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\ntype ChainbridgeContext = {\n  homeConfig: BridgeConfig | undefined;\n  connect: () => Promise<void>;\n  handleSetHomeChain: (chainId: number) => void;\n  setDestinationChain: (chainId: number | undefined) => void;\n  destinationChains: Array<{ chainId: number; name: string }>;\n  destinationChainConfig?: BridgeConfig;\n  deposit(\n    amount: number,\n    recipient: string,\n    tokenAddress: string\n  ): Promise<void>;\n  resetDeposit(): void;\n  depositVotes: number;\n  relayerThreshold?: number;\n  depositNonce?: string;\n  depositAmount?: number;\n  bridgeFee?: number;\n  inTransitMessages: Array<string | Vote>;\n  transferTxHash?: string;\n  selectedToken?: string;\n  transactionStatus?: TransactionStatus;\n  wrapToken: (value: number) => Promise<string>;\n  unwrapToken: (value: number) => Promise<string>;\n  wrapTokenConfig: TokenConfig | undefined;\n  tokens: Tokens;\n  nativeTokenBalance: number | undefined;\n  isReady: boolean | undefined;\n  address: string | undefined;\n  chainId?: number;\n  checkSupplies?: (\n    amount: number,\n    tokenAddress: string,\n    destinationChainId: number\n  ) => Promise<boolean | undefined>;\n};\n\nconst ChainbridgeContext = React.createContext<ChainbridgeContext | undefined>(\n  undefined\n);\n\nconst ChainbridgeProvider = ({ children }: IChainbridgeContextProps) => {\n  const {\n    handleSetHomeChain,\n    destinationChainConfig,\n    setTransactionStatus,\n    setDestinationChain,\n    setDepositNonce,\n    setDepositVotes,\n    transferTxHash,\n    inTransitMessages,\n    tokensDispatch,\n    transactionStatus,\n    depositNonce,\n    depositVotes,\n    homeChainConfig,\n    destinationChains,\n    chainId,\n  } = useNetworkManager();\n\n  const {\n    connect,\n    setDepositAmount,\n    setSelectedToken,\n    chainConfig,\n    deposit,\n    relayerThreshold,\n    nativeTokenBalance,\n    address,\n    selectedToken,\n    bridgeFee,\n    depositAmount,\n    isReady,\n    wrapTokenConfig,\n    tokens,\n    wrapToken,\n    unwrapToken,\n    handleCheckSupplies,\n  } = useHomeBridge();\n\n  const resetDeposit = () => {\n    chainbridgeConfig.chains.length > 2 && setDestinationChain(undefined);\n    setTransactionStatus(undefined);\n    setDepositNonce(undefined);\n    setDepositVotes(0);\n    setDepositAmount(undefined);\n    tokensDispatch({\n      type: \"resetMessages\",\n    });\n    setSelectedToken(\"\");\n  };\n\n  const handleDeposit = useCallback(\n    async (amount: number, recipient: string, tokenAddress: string) => {\n      if (chainConfig && destinationChainConfig) {\n        return await deposit(\n          amount,\n          recipient,\n          tokenAddress,\n          destinationChainConfig.chainId\n        );\n      }\n    },\n    [deposit, destinationChainConfig, chainConfig]\n  );\n\n  const checkSupplies = async (\n    amount: number,\n    tokenAddress: string,\n    destinationChainId: number\n  ) => {\n    if (handleCheckSupplies && chainConfig && destinationChainConfig) {\n      return await handleCheckSupplies(\n        amount,\n        tokenAddress,\n        destinationChainId\n      );\n    }\n  };\n\n  return (\n    <ChainbridgeContext.Provider\n      value={{\n        homeConfig: homeChainConfig,\n        connect,\n        destinationChains,\n        handleSetHomeChain,\n        setDestinationChain,\n        resetDeposit,\n        deposit: handleDeposit,\n        destinationChainConfig,\n        depositVotes,\n        relayerThreshold,\n        depositNonce,\n        bridgeFee,\n        transactionStatus,\n        inTransitMessages,\n        depositAmount: depositAmount,\n        transferTxHash: transferTxHash,\n        selectedToken: selectedToken,\n        // TODO: Confirm if EVM specific\n        wrapToken,\n        wrapTokenConfig: wrapTokenConfig,\n        unwrapToken,\n        isReady: isReady,\n        nativeTokenBalance: nativeTokenBalance,\n        tokens,\n        address,\n        chainId,\n        checkSupplies,\n      }}\n    >\n      <NetworkSelectModal />\n      {children}\n    </ChainbridgeContext.Provider>\n  );\n};\n\nconst useChainbridge = () => {\n  const context = useContext(ChainbridgeContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useChainbridge must be called within a ChainbridgeProvider\"\n    );\n  }\n  return context;\n};\n\nexport { ChainbridgeProvider, useChainbridge };\n","import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport {\n  Button,\n  ExclamationCircleSvg,\n  ProgressBar,\n  Typography,\n} from \"@chainsafe/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\nimport { EvmBridgeConfig } from \"../chainbridgeConfig\";\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, typography }: ITheme) =>\n    createStyles({\n      root: {\n        width: \"100%\",\n      },\n      inner: {\n        width: \"100% !important\",\n        maxWidth: \"unset !important\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: `${constants.generalUnit * 5}px ${\n          constants.generalUnit * 3.5\n        }px`,\n        bottom: 0,\n        top: \"unset\",\n        transform: \"unset\",\n        left: 0,\n        border: \"none\",\n        borderRadius: 0,\n        transitionDuration: `${animation.transform}ms`,\n      },\n      heading: {\n        marginBottom: constants.generalUnit,\n        whiteSpace: \"nowrap\",\n      },\n      stepIndicator: {\n        ...typography.h4,\n        height: 40,\n        width: 40,\n        marginRight: constants.generalUnit * 2,\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: `1px solid ${palette.additional[\"transactionModal\"][2]}`,\n        color: palette.additional[\"transactionModal\"][3],\n        \"& svg\": {\n          height: 20,\n          width: 20,\n          display: \"block\",\n        },\n      },\n      content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      buttons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit * 5,\n        \"& > *\": {\n          textDecoration: \"none\",\n          marginRight: constants.generalUnit,\n        },\n      },\n      button: {\n        borderColor: `${palette.additional[\"gray\"][8]} !important`,\n        color: `${palette.additional[\"gray\"][8]} !important`,\n        textDecoration: \"none\",\n        \"&:hover\": {\n          borderColor: `${palette.additional[\"gray\"][8]} !important`,\n          backgroundColor: `${palette.additional[\"gray\"][8]} !important`,\n          color: `${palette.common.white.main} !important`,\n          textDecoration: \"none\",\n        },\n      },\n      initCopy: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        \"& > *:first-child\": {\n          marginTop: constants.generalUnit * 3.5,\n          marginBottom: constants.generalUnit * 8,\n        },\n      },\n      sendingCopy: {},\n      vote: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit,\n        \"& > *\": {\n          \"&:first-child\": {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            maxWidth: 240,\n          },\n          \"&:last-child\": {\n            marginLeft: constants.generalUnit * 3.5,\n            fontStyle: \"italic\",\n          },\n        },\n      },\n      warning: {\n        marginTop: constants.generalUnit * 3.5,\n        display: \"block\",\n        fontWeight: 600,\n      },\n      receipt: {\n        marginTop: constants.generalUnit * 3.5,\n        marginBottom: constants.generalUnit * 8,\n      },\n      weighted: {\n        fontWeight: 600,\n      },\n      progress: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        \"& > *\": {\n          borderRadius: \"0 !important\",\n          \"&  >  *\": {\n            borderRadius: \"0 !important\",\n            background: `${palette.additional[\"transactionModal\"][1]} !important`,\n          },\n        },\n      },\n    })\n);\n\ninterface ITransferActiveModalProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst TransferActiveModal: React.FC<ITransferActiveModalProps> = ({\n  open,\n  close,\n}: ITransferActiveModalProps) => {\n  const classes = useStyles();\n  const {\n    transactionStatus,\n    depositVotes,\n    relayerThreshold,\n    inTransitMessages,\n    homeConfig,\n    destinationChainConfig,\n    depositAmount,\n    transferTxHash,\n    selectedToken,\n    tokens,\n  } = useChainbridge();\n  const tokenSymbol = selectedToken && tokens[selectedToken]?.symbol;\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <ProgressBar\n        className={classes.progress}\n        size=\"small\"\n        variant=\"primary\"\n        progress={transactionStatus !== \"Transfer Completed\" ? -1 : 100}\n      />\n      <section>\n        <div className={classes.stepIndicator}>\n          {transactionStatus === \"Initializing Transfer\" ? (\n            \"1\"\n          ) : transactionStatus === \"In Transit\" ? (\n            \"2\"\n          ) : transactionStatus === \"Transfer Completed\" ? (\n            \"3\"\n          ) : (\n            <ExclamationCircleSvg />\n          )}\n        </div>\n      </section>\n      <section className={classes.content}>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          {transactionStatus === \"Initializing Transfer\"\n            ? \"Initializing Transfer\"\n            : transactionStatus === \"In Transit\"\n            ? `In Transit (${\n                depositVotes < (relayerThreshold || 0)\n                  ? `${depositVotes}/${relayerThreshold} signatures needed`\n                  : \"Executing proposal\"\n              })`\n            : transactionStatus === \"Transfer Completed\"\n            ? \"Transfer completed\"\n            : \"Transfer aborted\"}\n        </Typography>\n        {transactionStatus === \"Initializing Transfer\" ? (\n          <div className={classes.initCopy}>\n            <Typography>Deposit pending...</Typography>\n            <Typography className={classes.weighted}>\n              This should take a few minutes.\n              <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : transactionStatus === \"In Transit\" ? (\n          <div className={classes.sendingCopy}>\n            {inTransitMessages.map((m, i) => {\n              if (typeof m === \"string\") {\n                return (\n                  <Typography className={classes.vote} component=\"p\" key={i}>\n                    {m}\n                  </Typography>\n                );\n              } else {\n                return (\n                  <Typography className={classes.vote} component=\"p\" key={i}>\n                    <span>Vote casted by {m.address}</span>\n                    <span>{m.signed}</span>\n                  </Typography>\n                );\n              }\n            })}\n            <Typography className={classes.warning}>\n              This should take a few minutes. <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : transactionStatus === \"Transfer Completed\" ? (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              Successfully transferred{\" \"}\n              <strong>\n                {depositAmount} {tokenSymbol}\n                <br /> from {homeConfig?.name} to {destinationChainConfig?.name}\n                .\n              </strong>\n            </Typography>\n            <section className={classes.buttons}>\n              <Button\n                onClick={() =>\n                  destinationChainConfig &&\n                  (destinationChainConfig as EvmBridgeConfig).blockExplorer &&\n                  transferTxHash &&\n                  window.open(\n                    `${\n                      (destinationChainConfig as EvmBridgeConfig).blockExplorer\n                    }/${transferTxHash}`,\n                    \"_blank\"\n                  )\n                }\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                // disabled={\n                //   !destinationChain ||\n                //   !destinationChain.blockExplorer ||\n                //   !transferTxHash\n                // }\n              >\n                View transaction\n              </Button>\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={close}\n              >\n                Start new transfer\n              </Button>\n            </section>\n          </>\n        ) : (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              Something went wrong and we could not complete your transfer.\n            </Typography>\n            {homeConfig &&\n              (homeConfig as EvmBridgeConfig).blockExplorer &&\n              transferTxHash && (\n                <Button\n                  onClick={() =>\n                    window.open(\n                      `${\n                        (homeConfig as EvmBridgeConfig).blockExplorer\n                      }/${transferTxHash}`,\n                      \"_blank\"\n                    )\n                  }\n                  size=\"small\"\n                  className={classes.button}\n                  variant=\"outline\"\n                  disabled\n                >\n                  View transaction\n                </Button>\n              )}\n            <section className={classes.buttons}>\n              <Button\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n                onClick={close}\n              >\n                Start new transfer\n              </Button>\n              <a\n                rel=\"noopener noreferrer\"\n                href={process.env.REACT_APP_SUPPORT_URL}\n                target=\"_blank\"\n              >\n                <Button variant=\"outline\">\n                  Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n                </Button>\n              </a>\n            </section>\n          </>\n        )}\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default TransferActiveModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  IFormikSelectInputProps,\n  FormikSelectInput,\n} from \"@chainsafe/common-components\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\ninterface ITokenSelectInput extends IFormikSelectInputProps {\n  tokens: Tokens;\n  sync?: (value: string) => void;\n}\n\nconst TokenSelectInput: React.FC<ITokenSelectInput> = ({\n  className,\n  label,\n  name,\n  tokens,\n  sync,\n  ...rest\n}: ITokenSelectInput) => {\n  const [field, , helpers] = useField(name);\n  const labelParsed = tokens[field.value]\n    ? `${label} ${tokens[field.value]?.balance} ${tokens[field.value]?.symbol}`\n    : \"Please select token\";\n\n  const [synced, setSynced] = useState();\n  useEffect(() => {\n    if (sync && field.value !== synced) {\n      setSynced(field.value);\n      if (field.value !== \"\") {\n        sync(field.value);\n      }\n    }\n    // eslint-disable-next-line\n  }, [field]);\n\n  useEffect(() => {\n    // If there is only one token, auto select\n    if (Object.keys(tokens).length === 1 && field.value === \"\") {\n      helpers.setValue(Object.keys(tokens)[0]);\n    }\n  }, [tokens, helpers, field.value]);\n\n  return (\n    <FormikSelectInput\n      name={name}\n      className={className}\n      label={labelParsed}\n      {...rest}\n    />\n  );\n};\n\nexport default TokenSelectInput;\n","import React from \"react\";\n\nimport { useField, useFormikContext } from \"formik\";\nimport { Button, FormikTextInput } from \"@chainsafe/common-components\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\n\ninterface ITokenInput {\n  disabled?: boolean;\n  label: string;\n  name: string;\n  tokens: Tokens;\n  tokenSelectorKey: string;\n  classNames?: {\n    input?: string;\n    button?: string;\n  };\n}\n\nconst TokenInput: React.FC<ITokenInput> = ({\n  classNames,\n  disabled,\n  label,\n  tokens,\n  tokenSelectorKey,\n  name,\n}: ITokenInput) => {\n  const [, , helpers] = useField(name);\n\n  const { values } = useFormikContext();\n  return (\n    <>\n      <FormikTextInput\n        className={classNames?.input}\n        disabled={disabled}\n        name={name}\n        label={label}\n      />\n      <Button\n        disabled={\n          disabled || !tokens[(values as Record<string, any>)[tokenSelectorKey]]\n        }\n        className={classNames?.button}\n        onClick={() => {\n          helpers.setValue(\n            tokens[(values as Record<string, any>)[tokenSelectorKey]].balance\n          );\n        }}\n        variant=\"outline\"\n        type=\"button\"\n      >\n        MAX\n      </Button>\n    </>\n  );\n};\n\nexport default TokenInput;\n","import React from \"react\";\n\nimport { Typography } from \"@chainsafe/common-components\";\nimport { useFormikContext } from \"formik\";\n\ninterface IFeesFormikWrapped {\n  className?: string;\n  symbol?: string;\n  fee?: number;\n  feeSymbol?: string;\n  amountFormikName: string;\n}\n\nconst FeesFormikWrapped: React.FC<IFeesFormikWrapped> = ({\n  className,\n  symbol,\n  fee,\n  feeSymbol,\n  amountFormikName,\n}: IFeesFormikWrapped) => {\n  const { values } = useFormikContext();\n\n  return (\n    <section className={className}>\n      {fee !== undefined && feeSymbol !== undefined && (\n        <>\n          <Typography component=\"p\">Bridge Fee</Typography>\n          <Typography component=\"p\">\n            {fee} {feeSymbol}\n          </Typography>\n        </>\n      )}\n      {symbol !== undefined && (\n        <>\n          <Typography component=\"p\">Transfer Amount:</Typography>\n          <Typography component=\"p\">\n            {Number((values as Record<string, any>)[amountFormikName])?.toFixed(\n              3\n            )}{\" \"}\n            {symbol}\n          </Typography>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default FeesFormikWrapped;\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport {\n  Button,\n  ExclamationCircleInverseSvg,\n  Typography,\n  useLocation,\n} from \"@chainsafe/common-components\";\nimport { useNetworkManager } from \"../Contexts/NetworkManagerContext\";\nimport { ROUTE_LINKS } from \"../Components/Routes\";\nimport { useHomeBridge } from \"../Contexts/HomeBridgeContext\";\nimport { chainbridgeConfig } from \"../chainbridgeConfig\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    inner: {\n      width: \"100% !important\",\n      maxWidth: \"unset !important\",\n      borderRadius: \"4px\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n    },\n    heading: {\n      marginBottom: constants.generalUnit,\n    },\n    icon: {\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 0.8,\n      marginRight: constants.generalUnit * 2,\n      fill: palette.additional[\"gray\"][7],\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: constants.generalUnit * 5,\n      \"& > *\": {\n        textDecoration: \"none\",\n        marginRight: constants.generalUnit,\n      },\n    },\n    button: {\n      borderColor: palette.additional[\"gray\"][8],\n      color: palette.additional[\"gray\"][8],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][8],\n        backgroundColor: palette.additional[\"gray\"][8],\n        color: palette.common.white.main,\n      },\n    },\n  })\n);\n\nconst NetworkUnsupportedModal = () => {\n  const classes = useStyles();\n  const { homeChainConfig, networkId } = useNetworkManager();\n  const { getNetworkName, wrapTokenConfig, isReady } = useHomeBridge();\n  const { pathname } = useLocation();\n\n  const [open, setOpen] = useState(false);\n  const [supportedNetworks, setSupportedNetworks] = useState<number[]>([]);\n\n  useEffect(() => {\n    if (pathname === ROUTE_LINKS.Transfer) {\n      setOpen(!homeChainConfig && !!isReady);\n      setSupportedNetworks(\n        chainbridgeConfig.chains\n          .filter((bc) => bc.networkId !== undefined)\n          .map((bc) => Number(bc.networkId))\n      );\n      // } else if (pathname === ROUTE_LINKS.Wrap) {\n      //   setOpen(!wrapTokenConfig && !!isReady);\n      //   setSupportedNetworks(\n      //     chainbridgeConfig.chains\n      //       .filter((bc) => bc.networkId !== undefined)\n      //       .filter((bc) => bc.tokens.find((t) => t.isNativeWrappedToken))\n      //       .map((bc) => Number(bc.networkId))\n      //   );\n    } else {\n      setOpen(false);\n      setSupportedNetworks([]);\n    }\n  }, [pathname, setOpen, homeChainConfig, isReady, wrapTokenConfig]);\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <section>\n        <ExclamationCircleInverseSvg className={classes.icon} />\n      </section>\n      <section>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          Network Unsupported\n        </Typography>\n        <Typography component=\"p\" variant=\"body1\">\n          This app does not currently support transfers on{\" \"}\n          {getNetworkName(networkId)}. Please change networks from within your\n          browser wallet.\n        </Typography>\n        <br />\n        <Typography component=\"p\" variant=\"body1\">\n          This app is configured to work on{\" \"}\n          {supportedNetworks.map(\n            (n, i) =>\n              `${getNetworkName(n)}${\n                i < supportedNetworks.length - 1 ? \", \" : \"\"\n              }`\n          )}{\" \"}\n          networks\n        </Typography>\n        <section className={classes.buttons}>\n          <a\n            rel=\"noopener noreferrer\"\n            href={process.env.REACT_APP_SUPPORT_URL}\n            target=\"_blank\"\n          >\n            <Button variant=\"outline\">\n              Ask a question on {process.env.REACT_APP_SUPPORT_SERVICE}\n            </Button>\n          </a>\n        </section>\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default NetworkUnsupportedModal;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport PreflightModalTransfer from \"../../Modules/PreflightModalTransfer\";\nimport {\n  Button,\n  Typography,\n  QuestionCircleSvg,\n  SelectInput,\n} from \"@chainsafe/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport clsx from \"clsx\";\nimport TransferActiveModal from \"../../Modules/TransferActiveModal\";\nimport { useChainbridge } from \"../../Contexts/ChainbridgeContext\";\nimport TokenSelectInput from \"../Custom/TokenSelectInput\";\nimport TokenInput from \"../Custom/TokenInput\";\nimport { object, string } from \"yup\";\nimport { utils } from \"ethers\";\nimport FeesFormikWrapped from \"./FormikContextElements/Fees\";\nimport { useNetworkManager } from \"../../Contexts/NetworkManagerContext\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport { isValidSubstrateAddress } from \"../../Utils/Helpers\";\nimport { useHomeBridge } from \"../../Contexts/HomeBridgeContext\";\nimport ETHIcon from \"../../media/tokens/eth.svg\";\nimport WETHIcon from \"../../media/tokens/weth.svg\";\nimport DAIIcon from \"../../media/tokens/dai.svg\";\nimport celoUSD from \"../../media/tokens/cusd.svg\";\nimport { chainbridgeConfig } from \"../../chainbridgeConfig\";\n\nconst PredefinedIcons: any = {\n  ETHIcon: ETHIcon,\n  WETHIcon: WETHIcon,\n  DAIIcon: DAIIcon,\n  celoUSD: celoUSD,\n};\n\nconst showImageUrl = (url?: string) =>\n  url && PredefinedIcons[url] ? PredefinedIcons[url] : url;\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      padding: constants.generalUnit * 6,\n      position: \"relative\",\n    },\n    walletArea: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    connectButton: {\n      margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`,\n    },\n    connecting: {\n      textAlign: \"center\",\n      marginBottom: constants.generalUnit * 2,\n    },\n    connected: {\n      width: \"100%\",\n      \"& > *:first-child\": {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      },\n    },\n    changeButton: {\n      cursor: \"pointer\",\n    },\n    networkName: {\n      padding: `${constants.generalUnit * 2}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      borderRadius: 2,\n      color: palette.additional[\"gray\"][9],\n      marginTop: constants.generalUnit,\n      marginBottom: constants.generalUnit * 3,\n    },\n    formArea: {\n      \"&.disabled\": {\n        opacity: 0.4,\n      },\n    },\n    currencySection: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n    tokenInputArea: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\",\n      justifyContent: \"space-around\",\n    },\n    tokenInputSection: {\n      width: \"60%\",\n    },\n    tokenInput: {\n      margin: 0,\n      \"& > div\": {\n        height: 32,\n        \"& input\": {\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0,\n          borderRight: 0,\n        },\n      },\n      \"& span:last-child.error\": {\n        position: \"absolute\",\n        width: \"calc(100% + 62px)\",\n      },\n    },\n    maxButton: {\n      height: 32,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n      left: -1,\n      color: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][3],\n      borderColor: palette.additional[\"gray\"][6],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][6],\n        backgroundColor: palette.additional[\"gray\"][7],\n        color: palette.common.white.main,\n      },\n      \"&:focus\": {\n        borderColor: palette.additional[\"gray\"][6],\n      },\n    },\n    currencySelector: {\n      width: \"40%\",\n      paddingRight: constants.generalUnit,\n      \"& *\": {\n        cursor: \"pointer\",\n      },\n    },\n    token: {},\n    address: {\n      margin: 0,\n      marginBottom: constants.generalUnit * 3,\n    },\n    addressInput: {},\n    generalInput: {\n      \"& > span\": {\n        marginBottom: constants.generalUnit,\n      },\n    },\n    faqButton: {\n      cursor: \"pointer\",\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 5,\n      fill: `${palette.additional[\"transferUi\"][1]} !important`,\n    },\n    tokenItem: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n      \"& img, & svg\": {\n        display: \"block\",\n        height: 14,\n        width: 14,\n        marginRight: 10,\n      },\n      \"& span\": {\n        minWidth: `calc(100% - 20px)`,\n        textAlign: \"left\",\n      },\n    },\n    fees: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      marginBottom: constants.generalUnit,\n      \"& > *\": {\n        display: \"block\",\n        width: \"50%\",\n        color: palette.additional[\"gray\"][8],\n        marginBottom: constants.generalUnit / 2,\n        \"&:nth-child(even)\": {\n          textAlign: \"right\",\n        },\n      },\n    },\n    accountSelector: {\n      marginBottom: 24,\n    },\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n  token: string;\n  tokenSymbol: string;\n  receiver: string;\n};\n\nconst TransferPage = () => {\n  const classes = useStyles();\n  const { walletType, setWalletType } = useNetworkManager();\n\n  const {\n    deposit,\n    setDestinationChain,\n    transactionStatus,\n    resetDeposit,\n    bridgeFee,\n    tokens,\n    isReady,\n    homeConfig,\n    destinationChainConfig,\n    destinationChains,\n    address,\n    checkSupplies,\n  } = useChainbridge();\n\n  const { accounts, selectAccount } = useHomeBridge();\n  const [aboutOpen, setAboutOpen] = useState<boolean>(false);\n  const [walletConnecting, setWalletConnecting] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState<boolean>(false);\n  const [preflightModalOpen, setPreflightModalOpen] = useState<boolean>(false);\n\n  const [preflightDetails, setPreflightDetails] = useState<PreflightDetails>({\n    receiver: \"\",\n    token: \"\",\n    tokenAmount: 0,\n    tokenSymbol: \"\",\n  });\n\n  useEffect(() => {\n    if (walletType !== \"select\" && walletConnecting === true) {\n      setWalletConnecting(false);\n    } else if (walletType === \"select\") {\n      setWalletConnecting(true);\n    }\n  }, [walletType, walletConnecting]);\n\n  const DECIMALS =\n    preflightDetails && tokens[preflightDetails.token]\n      ? tokens[preflightDetails.token].decimals\n      : 18;\n\n  const REGEX =\n    DECIMALS > 0\n      ? new RegExp(`^[0-9]{1,18}(.[0-9]{1,${DECIMALS}})?$`)\n      : new RegExp(`^[0-9]{1,18}?$`);\n\n  const transferSchema = object().shape({\n    tokenAmount: string()\n      .test(\"Token selected\", \"Please select a token\", (value) => {\n        if (\n          !!value &&\n          preflightDetails &&\n          tokens[preflightDetails.token] &&\n          tokens[preflightDetails.token].balance !== undefined\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n      .test(\"InputValid\", \"Input invalid\", (value) => {\n        try {\n          return REGEX.test(`${value}`);\n        } catch (error) {\n          console.error(error);\n          return false;\n        }\n      })\n      .test(\"Max\", \"Insufficent funds\", (value) => {\n        if (\n          value &&\n          preflightDetails &&\n          tokens[preflightDetails.token] &&\n          tokens[preflightDetails.token].balance\n        ) {\n          if (homeConfig?.type === \"Ethereum\") {\n            return parseFloat(value) <= tokens[preflightDetails.token].balance;\n          } else {\n            return (\n              parseFloat(value) + (bridgeFee || 0) <=\n              tokens[preflightDetails.token].balance\n            );\n          }\n        }\n        return false;\n      })\n      .test(\n        \"Bridge Supplies\",\n        \"Not enough tokens on the destination chain. Please contact support.\",\n        async (value) => {\n          if (checkSupplies && destinationChainConfig && value) {\n            const supplies = await checkSupplies(\n              parseFloat(value),\n              preflightDetails.token,\n              destinationChainConfig.chainId\n            );\n            return Boolean(supplies);\n          }\n          return false;\n        }\n      )\n      .test(\"Min\", \"Less than minimum\", (value) => {\n        if (value) {\n          if (destinationChainConfig?.type === \"Substrate\") {\n            const existential = chainbridgeConfig.chains.find(\n              (c) => c.type === \"Substrate\"\n            )?.existential;\n            if (existential) {\n              return parseFloat(value) > existential;\n            }\n          }\n          return parseFloat(value) > 0;\n        }\n        return false;\n      })\n      .required(\"Please set a value\"),\n    token: string().required(\"Please select a token\"),\n    receiver: string()\n      .test(\"Valid address\", \"Please add a valid address\", (value) => {\n        if (destinationChainConfig?.type === \"Substrate\") {\n          return isValidSubstrateAddress(value as string);\n        }\n        return utils.isAddress(value as string);\n      })\n      .required(\"Please add a receiving address\"),\n  });\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.walletArea}>\n        {!isReady ? (\n          <Button\n            className={classes.connectButton}\n            fullsize\n            onClick={() => {\n              setWalletType(\"select\");\n            }}\n          >\n            Connect\n          </Button>\n        ) : walletConnecting ? (\n          <section className={classes.connecting}>\n            <Typography component=\"p\" variant=\"h5\">\n              This app requires access to your wallet, <br />\n              please login and authorize access to continue.\n            </Typography>\n          </section>\n        ) : (\n          <section className={classes.connected}>\n            <div>\n              <Typography variant=\"body1\">Home network</Typography>\n              <Typography\n                className={classes.changeButton}\n                variant=\"body1\"\n                onClick={() => setChangeNetworkOpen(true)}\n              >\n                Change\n              </Typography>\n            </div>\n            <Typography\n              component=\"h2\"\n              variant=\"h2\"\n              className={classes.networkName}\n            >\n              {homeConfig?.name}\n            </Typography>\n          </section>\n        )}\n      </div>\n      {isReady &&\n        walletType === \"Substrate\" &&\n        accounts &&\n        accounts.length > 0 && (\n          <div>\n            <section className={classes.accountSelector}>\n              <SelectInput\n                label=\"Select account\"\n                className={classes.generalInput}\n                options={accounts.map((acc, i) => ({\n                  label: acc.address,\n                  value: i,\n                }))}\n                onChange={(value) => selectAccount && selectAccount(value)}\n                value={accounts.findIndex((v) => v.address === address)}\n                placeholder=\"Select an account\"\n              />\n            </section>\n          </div>\n        )}\n      <Formik\n        initialValues={{\n          tokenAmount: 0,\n          token: \"\",\n          receiver: \"\",\n        }}\n        validateOnChange={false}\n        validationSchema={transferSchema}\n        onSubmit={(values) => {\n          setPreflightDetails({\n            ...values,\n            tokenSymbol: tokens[values.token].symbol || \"\",\n          });\n          setPreflightModalOpen(true);\n        }}\n      >\n        {(props) => (\n          <Form\n            className={clsx(classes.formArea, {\n              disabled: !homeConfig || !address || props.isValidating,\n            })}\n          >\n            <section>\n              <SelectInput\n                label=\"Destination Network\"\n                className={classes.generalInput}\n                disabled={!homeConfig}\n                options={destinationChains.map((dc) => ({\n                  label: dc.name,\n                  value: dc.chainId,\n                }))}\n                onChange={(value) => setDestinationChain(value)}\n                value={destinationChainConfig?.chainId}\n              />\n            </section>\n            <section className={classes.currencySection}>\n              {/* <section>\n              <div\n                className={clsx(classes.tokenInputArea, classes.generalInput)}\n              >\n                <TokenInput\n                  classNames={{\n                    input: clsx(classes.tokenInput, classes.generalInput),\n                    button: classes.maxButton,\n                  }}\n                  tokenSelectorKey=\"token\"\n                  tokens={tokens}\n                  disabled={\n                    !destinationChainConfig ||\n                    !preflightDetails.token ||\n                    preflightDetails.token === \"\"\n                  }\n                  name=\"tokenAmount\"\n                  label=\"I want to send\"\n                />\n              </div>\n            </section> */}\n              <section className={classes.currencySelector}>\n                <TokenSelectInput\n                  tokens={tokens}\n                  name=\"token\"\n                  disabled={!destinationChainConfig}\n                  label={`Balance: `}\n                  className={classes.generalInput}\n                  placeholder=\"\"\n                  sync={(tokenAddress) => {\n                    setPreflightDetails({\n                      ...preflightDetails,\n                      token: tokenAddress,\n                      receiver: \"\",\n                      tokenAmount: 0,\n                      tokenSymbol: \"\",\n                    });\n                  }}\n                  options={\n                    Object.keys(tokens).map((t) => ({\n                      value: t,\n                      label: (\n                        <div className={classes.tokenItem}>\n                          {tokens[t]?.imageUri && (\n                            <img\n                              src={showImageUrl(tokens[t]?.imageUri)}\n                              alt={tokens[t]?.symbol}\n                            />\n                          )}\n                          <span>{tokens[t]?.symbol || t}</span>\n                        </div>\n                      ),\n                    })) || []\n                  }\n                />\n              </section>\n              <section className={classes.tokenInputSection}>\n                <div\n                  className={clsx(classes.tokenInputArea, classes.generalInput)}\n                >\n                  <TokenInput\n                    classNames={{\n                      input: clsx(classes.tokenInput, classes.generalInput),\n                      button: classes.maxButton,\n                    }}\n                    tokenSelectorKey=\"token\"\n                    tokens={tokens}\n                    disabled={\n                      !destinationChainConfig ||\n                      !preflightDetails.token ||\n                      preflightDetails.token === \"\"\n                    }\n                    name=\"tokenAmount\"\n                    label=\"I want to send\"\n                  />\n                </div>\n              </section>\n            </section>\n            <section>\n              <AddressInput\n                disabled={!destinationChainConfig}\n                name=\"receiver\"\n                label=\"Destination Address\"\n                placeholder=\"Please enter the receiving address\"\n                className={classes.address}\n                classNames={{\n                  input: classes.addressInput,\n                }}\n                senderAddress={`${address}`}\n                sendToSameAccountHelper={\n                  destinationChainConfig?.type === homeConfig?.type\n                }\n              />\n            </section>\n            <FeesFormikWrapped\n              amountFormikName=\"tokenAmount\"\n              className={classes.fees}\n              fee={bridgeFee}\n              feeSymbol={homeConfig?.nativeTokenSymbol}\n              symbol={\n                preflightDetails && tokens[preflightDetails.token]\n                  ? tokens[preflightDetails.token].symbol\n                  : undefined\n              }\n            />\n            <section>\n              <Button type=\"submit\" fullsize variant=\"primary\">\n                Start transfer\n              </Button>\n            </section>\n            <section>\n              <QuestionCircleSvg\n                onClick={() => setAboutOpen(true)}\n                className={classes.faqButton}\n              />\n            </section>\n          </Form>\n        )}\n      </Formik>\n      <AboutDrawer open={aboutOpen} close={() => setAboutOpen(false)} />\n      <ChangeNetworkDrawer\n        open={changeNetworkOpen}\n        close={() => setChangeNetworkOpen(false)}\n      />\n      <PreflightModalTransfer\n        open={preflightModalOpen}\n        close={() => setPreflightModalOpen(false)}\n        receiver={preflightDetails?.receiver || \"\"}\n        sender={address || \"\"}\n        start={() => {\n          setPreflightModalOpen(false);\n          preflightDetails &&\n            deposit(\n              preflightDetails.tokenAmount,\n              preflightDetails.receiver,\n              preflightDetails.token\n            );\n        }}\n        sourceNetwork={homeConfig?.name || \"\"}\n        targetNetwork={destinationChainConfig?.name || \"\"}\n        tokenSymbol={preflightDetails?.tokenSymbol || \"\"}\n        value={preflightDetails?.tokenAmount || 0}\n      />\n      <TransferActiveModal open={!!transactionStatus} close={resetDeposit} />\n      {/* This is here due to requiring router */}\n      <NetworkUnsupportedModal />\n    </article>\n  );\n};\nexport default TransferPage;\n","import React from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@chainsafe/common-theme\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      padding: constants.generalUnit * 6,\n      position: \"relative\",\n    },\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n  token: string;\n  tokenSymbol: string;\n  receiver: string;\n};\n\nconst ExplorerPage = () => {\n  const classes = useStyles();\n\n  return <article className={classes.root}>Explorer</article>;\n};\nexport default ExplorerPage;\n","import React, { useContext, useEffect, useReducer } from \"react\";\nimport {\n  Bridge,\n  BridgeFactory,\n  Erc20HandlerFactory,\n} from \"@chainsafe/chainbridge-contracts\";\nimport { BigNumber, ethers, Event, providers } from \"ethers\";\nimport { chainbridgeConfig, EvmBridgeConfig } from \"../chainbridgeConfig\";\nimport { Transfers, transfersReducer } from \"./Reducers/TransfersReducer\";\n\ninterface IExplorerContextProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\ntype ExplorerContext = {\n  transfers: Transfers;\n};\n\nconst ExplorerContext = React.createContext<ExplorerContext | undefined>(\n  undefined\n);\n\nconst ExplorerProvider = ({ children }: IExplorerContextProps) => {\n  const [transfers, transfersDispatch] = useReducer(transfersReducer, {});\n\n  const fetchTransfersAndListen = async () => {\n    const bridges = await Promise.all(\n      chainbridgeConfig.chains\n        .filter((c) => c.type === \"Substrate\")\n        .map(async (bridge) => {\n          console.log(`Checking events for ${bridge.name}`);\n\n          const provider = new providers.JsonRpcProvider(\n            bridge.rpcUrl,\n            bridge.networkId\n          );\n          const bridgeContract = BridgeFactory.connect(\n            (bridge as EvmBridgeConfig).bridgeAddress,\n            provider\n          );\n          const erc20HandlerContract = Erc20HandlerFactory.connect(\n            (bridge as EvmBridgeConfig).erc20HandlerAddress,\n            provider\n          );\n          const depositFilter = bridgeContract.filters.Deposit(\n            null,\n            null,\n            null\n          );\n          const depositLogs = await provider.getLogs({\n            ...depositFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          depositLogs.forEach(async (dl) => {\n            const parsedLog = bridgeContract.interface.parseLog(dl);\n            const depositRecord = await erc20HandlerContract.getDepositRecord(\n              parsedLog.args.depositNonce,\n              parsedLog.args.destinationChainID\n            );\n\n            transfersDispatch({\n              type: \"addTransfer\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  fromAddress: depositRecord._depositer,\n                  depositBlockNumber: dl.blockNumber,\n                  depositTransactionHash: dl.transactionHash,\n                  fromChainId: bridge.chainId,\n                  fromNetworkName: bridge.name,\n                  timestamp: (await provider.getBlock(dl.blockNumber))\n                    .timestamp,\n                  toChainId: parsedLog.args.destinationChainID,\n                  toNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.destinationChainID\n                    )?.name || \"\",\n                  toAddress: depositRecord._destinationRecipientAddress,\n                  tokenAddress: depositRecord._tokenAddress,\n                  amount: depositRecord._amount,\n                  resourceId: parsedLog.args.resourceID,\n                },\n              },\n            });\n          });\n          console.log(`Added ${bridge.name} ${depositLogs.length} deposits`);\n          bridgeContract.on(\n            depositFilter,\n            async (\n              destChainId: number,\n              resourceId: string,\n              depositNonce: ethers.BigNumber,\n              tx: Event\n            ) => {\n              const depositRecord = await erc20HandlerContract.getDepositRecord(\n                depositNonce,\n                destChainId\n              );\n\n              transfersDispatch({\n                type: \"addTransfer\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    fromAddress: depositRecord._depositer,\n                    depositBlockNumber: tx.blockNumber,\n                    depositTransactionHash: tx.transactionHash,\n                    fromChainId: bridge.chainId,\n                    fromNetworkName: bridge.name,\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    toChainId: destChainId,\n                    toNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === destChainId\n                      )?.name || \"\",\n                    toAddress: depositRecord._destinationRecipientAddress,\n                    tokenAddress: depositRecord._tokenAddress,\n                    amount: depositRecord._amount,\n                    resourceId: resourceId,\n                  },\n                },\n              });\n            }\n          );\n          const proposalEventFilter = bridgeContract.filters.ProposalEvent(\n            null,\n            null,\n            null,\n            null,\n            null\n          );\n\n          const proposalEventLogs = await provider.getLogs({\n            ...proposalEventFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          proposalEventLogs.forEach(async (pel) => {\n            const parsedLog = bridgeContract.interface.parseLog(pel);\n            transfersDispatch({\n              type: \"addProposalEvent\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  resourceId: parsedLog.args.resourceID,\n                  fromChainId: parsedLog.args.originChainID,\n                  fromNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.originChainID\n                    )?.name || \"\",\n                  toChainId: bridge.chainId,\n                  toNetworkName: bridge.name,\n                },\n                proposalEventDetails: {\n                  proposalEventBlockNumber: pel.blockNumber,\n                  proposalEventTransactionHash: pel.transactionHash,\n                  dataHash: parsedLog.args.dataHash,\n                  timestamp: (await provider.getBlock(pel.blockNumber))\n                    .timestamp,\n                  proposalStatus: parsedLog.args.status,\n                },\n              },\n            });\n          });\n          console.log(\n            `Added ${bridge.name} ${proposalEventLogs.length} proposal events`\n          );\n          bridgeContract.on(\n            proposalEventFilter,\n            async (\n              originChainId: number,\n              depositNonce: BigNumber,\n              status: number,\n              resourceId: string,\n              dataHash: string,\n              tx: Event\n            ) => {\n              transfersDispatch({\n                type: \"addProposalEvent\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    resourceId: resourceId,\n                    fromChainId: originChainId,\n                    fromNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === originChainId\n                      )?.name || \"\",\n                    toChainId: bridge.chainId,\n                    toNetworkName: bridge.name,\n                  },\n                  proposalEventDetails: {\n                    proposalEventBlockNumber: tx.blockNumber,\n                    proposalEventTransactionHash: tx.transactionHash,\n                    dataHash: dataHash,\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    proposalStatus: status,\n                  },\n                },\n              });\n            }\n          );\n          const proposalVoteFilter = bridgeContract.filters.ProposalVote(\n            null,\n            null,\n            null,\n            null\n          );\n\n          const proposalVoteLogs = await provider.getLogs({\n            ...proposalVoteFilter,\n            fromBlock: (bridge as EvmBridgeConfig).deployedBlockNumber,\n          });\n          proposalVoteLogs.forEach(async (pvl) => {\n            const parsedLog = bridgeContract.interface.parseLog(pvl);\n\n            transfersDispatch({\n              type: \"addVote\",\n              payload: {\n                depositNonce: parsedLog.args.depositNonce.toNumber(),\n                transferDetails: {\n                  resourceId: parsedLog.args.resourceID,\n                  fromChainId: parsedLog.args.originChainID,\n                  fromNetworkName:\n                    chainbridgeConfig.chains.find(\n                      (c) => c.chainId === parsedLog.args.originChainID\n                    )?.name || \"\",\n                  toChainId: bridge.chainId,\n                  toNetworkName: bridge.name,\n                },\n                voteDetails: {\n                  voteBlockNumber: pvl.blockNumber,\n                  voteTransactionHash: pvl.transactionHash,\n                  dataHash: parsedLog.args.dataHash,\n                  timestamp: (await provider.getBlock(pvl.blockNumber))\n                    .timestamp,\n                  voteStatus: parsedLog.args.status,\n                },\n              },\n            });\n          });\n          console.log(\n            `Added ${bridge.name} ${proposalVoteLogs.length} proposal votes`\n          );\n          bridgeContract.on(\n            proposalVoteFilter,\n            async (\n              originChainId: number,\n              depositNonce: BigNumber,\n              status: number, // TODO: Confirm wether this is actually being used\n              resourceId: string,\n              tx: Event\n            ) => {\n              transfersDispatch({\n                type: \"addVote\",\n                payload: {\n                  depositNonce: depositNonce.toNumber(),\n                  transferDetails: {\n                    resourceId: resourceId,\n                    fromChainId: originChainId,\n                    fromNetworkName:\n                      chainbridgeConfig.chains.find(\n                        (c) => c.chainId === originChainId\n                      )?.name || \"\",\n                    toChainId: bridge.chainId,\n                    toNetworkName: bridge.name,\n                  },\n                  voteDetails: {\n                    voteBlockNumber: tx.blockNumber,\n                    voteTransactionHash: tx.transactionHash,\n                    dataHash: \"\", // TODO: Confirm whether this is available\n                    timestamp: (await provider.getBlock(tx.blockNumber))\n                      .timestamp,\n                    voteStatus: status === 1 ? true : false, // TODO: Confirm whether this is the correct status\n                  },\n                },\n              });\n            }\n          );\n          return bridgeContract;\n        })\n    );\n    return bridges;\n  };\n\n  useEffect(() => {\n    let bridgeContracts: Bridge[] = [];\n\n    const handler = async () => {\n      bridgeContracts = await fetchTransfersAndListen();\n    };\n\n    handler();\n\n    return () => {\n      if (bridgeContracts.length > 0) {\n        bridgeContracts.forEach((bc) => {\n          // @ts-ignore\n          bc.removeAllListeners();\n        });\n      }\n    };\n  }, []);\n\n  return (\n    <ExplorerContext.Provider\n      value={{\n        transfers,\n      }}\n    >\n      {children}\n    </ExplorerContext.Provider>\n  );\n};\n\nconst useExplorer = () => {\n  const context = useContext(ExplorerContext);\n  if (context === undefined) {\n    throw new Error(\"useExplorer must be called within a ExplorerProvider\");\n  }\n  return context;\n};\n\nexport { ExplorerProvider, useExplorer };\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"@chainsafe/common-components\";\nimport TransferPage from \"./Pages/TransferPage\";\n// import WrapperPage from \"./Pages/WrapperPage\";\nimport ExplorerPage from \"./Pages/ExplorerPage\";\nimport { ExplorerProvider } from \"../Contexts/ExplorerContext\";\n\nexport const ROUTE_LINKS = {\n  Transfer: \"/transfer\",\n  // Wrap: \"/wrap\",\n  Explore: \"/explore\",\n};\n\nconst FilesRoutes = () => {\n  return (\n    <Switch>\n      <Route exact path={ROUTE_LINKS.Transfer} component={TransferPage} />\n      {/* <Route exact path={ROUTE_LINKS.Wrap} component={WrapperPage} /> */}\n      <Route exact path={ROUTE_LINKS.Explore}>\n        <ExplorerProvider>\n          <ExplorerPage />\n        </ExplorerProvider>\n      </Route>\n      <Route exact path=\"/\">\n        <Redirect to={ROUTE_LINKS.Transfer} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default FilesRoutes;\n","import { createTheme } from \"@chainsafe/common-theme\";\n\nexport const lightTheme = createTheme({\n  globalStyling: {\n    body: {\n      backgroundColor: \"#F5F5F5\",\n    },\n  },\n  themeConfig: {\n    constants: {\n      navItemHeight: 42,\n    },\n    palette: {\n      additional: {\n        general: {\n          1: \"#85A5FF\", // Accents //geekblue4\n        },\n        transferUi: {\n          1: \"#595959\", // FAQ button // gray8\n        },\n        header: {\n          1: \"#F5F5F5\", // Background\n          2: \"#595959\", // Text color //gray8\n          3: \"#BFBFBF\", // border // gray6\n        },\n        preflight: {\n          1: \"#85A5FF\", // Button bg color\n          2: \"#262626\", // Button color\n        },\n        transactionModal: {\n          1: \"#597EF7\", // border //geekblue5\n          2: \"#85A5FF\", // indicator border //geekblue4\n          3: \"#2F54EB\", // indicator text //geekblue6\n        },\n      },\n    },\n    overrides: {\n      CheckboxInput: {\n        root: {\n          alignItems: \"center\",\n        },\n      },\n      Button: {\n        variants: {\n          primary: {\n            root: {\n              backgroundColor: \"#262626\",\n              color: \"#ffffff\",\n              border: `1px solid #262626`,\n              \"& svg\": {\n                fill: \"#ffffff\",\n              },\n            },\n            active: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            hover: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            focus: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n          },\n          outline: {\n            root: {\n              backgroundColor: \"transparent\",\n              color: \"#ffffff\",\n              border: `1px solid #ffffff`,\n              \"& svg\": {\n                fill: \"#ffffff\",\n              },\n            },\n            active: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            hover: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n            focus: {\n              backgroundColor: \"#ffffff\",\n              color: \"#262626\",\n              borderColor: \"#ffffff\",\n              \"& svg\": {\n                fill: \"#262626\",\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n});\n","import { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Typography } from \"@chainsafe/common-components\";\nimport { shortenAddress } from \"../Utils/Helpers\";\nimport { useChainbridge } from \"../Contexts/ChainbridgeContext\";\n\nconst useStyles = makeStyles(\n  ({ constants, palette, zIndex, breakpoints }: ITheme) => {\n    return createStyles({\n      root: {\n        display: \"flex\",\n        position: \"fixed\",\n        justifyContent: \"space-between\",\n        padding: `${constants.generalUnit * 2}px ${\n          constants.generalUnit * 4\n        }px`,\n        width: \"100%\",\n        top: 0,\n        left: 0,\n        backgroundColor: palette.additional[\"header\"][1],\n        borderBottom: `1px solid ${palette.additional[\"header\"][3]}`,\n        color: palette.additional[\"header\"][2],\n        alignItems: \"center\",\n        zIndex: zIndex?.layer2,\n        [breakpoints.down(\"sm\")]: {\n          flexDirection: \"column\",\n        },\n      },\n      left: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n      },\n      logo: {\n        height: constants.generalUnit * 5,\n        width: constants.generalUnit * 5,\n        \"& svg, & img\": {\n          maxHeight: \"100%\",\n          maxWidth: \"100%\",\n        },\n      },\n      state: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n      },\n      indicator: {\n        display: \"block\",\n        height: 10,\n        width: 10,\n        borderRadius: \"50%\",\n        backgroundColor: palette.additional[\"green\"][6],\n        marginRight: constants.generalUnit,\n      },\n      address: {\n        marginRight: constants.generalUnit,\n      },\n      network: {},\n      accountInfo: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      mainInfo: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n    });\n  }\n);\n\ninterface IAppHeader {}\n\nconst AppHeader: React.FC<IAppHeader> = () => {\n  const classes = useStyles();\n  const { homeConfig, isReady, address } = useChainbridge();\n  return (\n    <header className={clsx(classes.root)}>\n      <div className={classes.left}>\n        {/* ADD LOGO HERE */}\n        {/* <div className={classes.logo}>\n        </div> */}\n        <Typography variant=\"h4\">ChainBridge Token Swap</Typography>\n      </div>\n      <section className={classes.state}>\n        {!isReady ? (\n          <Typography variant=\"h5\">No wallet connected</Typography>\n        ) : (\n          <>\n            <div className={classes.mainInfo}>\n              <div className={classes.accountInfo}>\n                <span className={classes.indicator} />\n                <Typography variant=\"h5\" className={classes.address}>\n                  {address && shortenAddress(address)}\n                </Typography>\n              </div>\n              <Typography variant=\"h5\" className={classes.address}>\n                <div>\n                  <span>connected to </span>\n                  <span>\n                    <strong>{homeConfig?.name}</strong>\n                  </span>\n                </div>\n              </Typography>\n            </div>\n          </>\n        )}\n      </section>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.35 11.5141C12.3531 11.5094 12.3578 11.5047 12.3609 11.5C13.3844 10.2828 14 8.71406 14 7C14 5.28594 13.3844 3.71719 12.3625 2.5C12.3594 2.49531 12.3547 2.49219 12.3516 2.4875C12.3344 2.46719 12.3187 2.44844 12.3016 2.42969C12.2953 2.42188 12.2891 2.41563 12.2828 2.40781L12.2188 2.33437L12.2172 2.33281C12.1938 2.30625 12.1687 2.27969 12.1453 2.25312L12.1438 2.25156C12.0938 2.19844 12.0437 2.14531 11.9922 2.09375L11.9906 2.09219L11.9156 2.01719L11.9109 2.0125C11.8875 1.98906 11.8641 1.96719 11.8406 1.94531C11.8328 1.9375 11.825 1.92969 11.8156 1.92188C11.8 1.90625 11.7844 1.89219 11.7688 1.87812C11.7641 1.87344 11.7578 1.86875 11.7531 1.8625C10.5063 0.70625 8.83594 0 7 0C5.16406 0 3.49375 0.70625 2.24531 1.8625C2.24062 1.86719 2.23438 1.87187 2.22969 1.87812C2.21406 1.89219 2.19844 1.90781 2.18281 1.92344C2.175 1.93125 2.16719 1.93906 2.15781 1.94688C2.13438 1.96875 2.11094 1.99219 2.0875 2.01406L2.08281 2.01875L2.00781 2.09375L2.00625 2.09531C1.95469 2.14688 1.90469 2.2 1.85469 2.25312L1.85313 2.25469C1.82813 2.28125 1.80469 2.30781 1.78125 2.33437L1.77969 2.33594C1.75781 2.35938 1.73594 2.38437 1.71563 2.40937C1.70938 2.41719 1.70313 2.42344 1.69688 2.43125C1.67969 2.45 1.66406 2.47031 1.64687 2.48906C1.64375 2.49375 1.63906 2.49688 1.63594 2.50156C0.615625 3.71719 0 5.28594 0 7C0 8.71406 0.615625 10.2828 1.6375 11.5C1.64062 11.5047 1.64531 11.5094 1.64844 11.5141L1.69688 11.5719C1.70313 11.5797 1.70938 11.5859 1.71563 11.5938L1.77969 11.6672C1.77969 11.6687 1.78125 11.6688 1.78125 11.6703C1.80469 11.6969 1.82813 11.7234 1.85313 11.7484L1.85469 11.75C1.90469 11.8031 1.95469 11.8562 2.00469 11.9078L2.00625 11.9094C2.03125 11.9344 2.05469 11.9594 2.07969 11.9828L2.08437 11.9875C2.13594 12.0391 2.18906 12.0891 2.24219 12.1375C3.49375 13.2937 5.16406 14 7 14C8.83594 14 10.5062 13.2937 11.7547 12.1375C11.8079 12.0887 11.86 12.0387 11.9109 11.9875L11.9156 11.9828C11.9406 11.9578 11.9656 11.9344 11.9891 11.9094L11.9906 11.9078C12.0422 11.8562 12.0922 11.8031 12.1406 11.75L12.1422 11.7484C12.1656 11.7219 12.1906 11.6969 12.2141 11.6703C12.2141 11.6688 12.2156 11.6687 12.2156 11.6672C12.2375 11.6438 12.2594 11.6187 12.2797 11.5938C12.2859 11.5859 12.2922 11.5797 12.2984 11.5719C12.3161 11.553 12.3333 11.5338 12.35 11.5141ZM12.4141 9.28594C12.1984 9.79531 11.9141 10.2672 11.5672 10.6953C11.1765 10.3577 10.7494 10.0647 10.2937 9.82187C10.475 9.08906 10.5875 8.28438 10.6172 7.4375H12.8594C12.8125 8.07656 12.6625 8.69687 12.4141 9.28594ZM12.8594 6.5625H10.6172C10.5875 5.71562 10.475 4.91094 10.2937 4.17812C10.7516 3.93437 11.1781 3.64062 11.5672 3.30469C12.3212 4.23277 12.7722 5.3699 12.8594 6.5625ZM9.28594 1.58594C9.90625 1.84844 10.4703 2.21094 10.9672 2.66719C10.6785 2.91296 10.3679 3.13159 10.0391 3.32031C9.79375 2.61719 9.47969 2.00625 9.11406 1.51719C9.17188 1.53906 9.22969 1.5625 9.28594 1.58594ZM7.87031 12.5328C7.72656 12.6453 7.58281 12.7312 7.4375 12.7891V9.89062C8.05749 9.93388 8.66717 10.0719 9.24531 10.3C9.11563 10.6844 8.96562 11.0391 8.79219 11.3594C8.52031 11.8656 8.20156 12.2703 7.87031 12.5328ZM8.79219 2.64062C8.96406 2.9625 9.11563 3.31719 9.24531 3.7C8.66717 3.92806 8.05749 4.06612 7.4375 4.10938V1.2125C7.58125 1.27031 7.72656 1.35469 7.87031 1.46875C8.20156 1.72969 8.52031 2.13438 8.79219 2.64062ZM7.4375 9.01406V7.4375H9.74219C9.71719 8.12813 9.63125 8.79844 9.4875 9.43437L9.48281 9.45312C8.82708 9.20447 8.13751 9.05644 7.4375 9.01406ZM7.4375 6.5625V4.98594C8.15312 4.94219 8.84063 4.79063 9.48281 4.54688L9.4875 4.56563C9.63125 5.20156 9.71719 5.87031 9.74219 6.5625H7.4375ZM6.5625 7.4375V9.01406C5.84688 9.05781 5.15938 9.20938 4.51719 9.45312L4.5125 9.43437C4.36875 8.79844 4.28281 8.12969 4.25781 7.4375H6.5625ZM4.25781 6.5625C4.28281 5.87187 4.36875 5.20156 4.5125 4.56563L4.51719 4.54688C5.15938 4.79063 5.84531 4.94219 6.5625 4.98594V6.5625H4.25781ZM6.5625 9.89062V12.7875C6.41875 12.7297 6.27344 12.6453 6.12969 12.5312C5.79844 12.2703 5.47813 11.8641 5.20625 11.3578C5.03438 11.0359 4.88281 10.6812 4.75313 10.2984C5.33438 10.0703 5.93906 9.93437 6.5625 9.89062ZM6.5625 4.10938C5.94251 4.06612 5.33283 3.92806 4.75469 3.7C4.88437 3.31562 5.03437 2.96094 5.20781 2.64062C5.47969 2.13438 5.79844 1.72812 6.13125 1.46719C6.275 1.35469 6.41875 1.26875 6.56406 1.21094V4.10938H6.5625ZM4.71406 1.58594C4.77188 1.5625 4.82812 1.53906 4.88594 1.51719C4.52031 2.00625 4.20625 2.61719 3.96094 3.32031C3.63281 3.13281 3.32188 2.91406 3.03281 2.66719C3.52969 2.21094 4.09375 1.84844 4.71406 1.58594ZM1.58594 4.71406C1.80156 4.20469 2.08594 3.73281 2.43281 3.30469C2.82187 3.64062 3.24844 3.93437 3.70625 4.17812C3.525 4.91094 3.4125 5.71562 3.38281 6.5625H1.14062C1.1875 5.92344 1.3375 5.30313 1.58594 4.71406ZM1.14062 7.4375H3.38281C3.4125 8.28438 3.525 9.08906 3.70625 9.82187C3.25059 10.0647 2.82347 10.3577 2.43281 10.6953C1.6788 9.76723 1.22776 8.6301 1.14062 7.4375ZM4.71406 12.4141C4.09375 12.1516 3.52969 11.7891 3.03281 11.3328C3.32188 11.0859 3.63281 10.8687 3.96094 10.6797C4.20625 11.3828 4.52031 11.9938 4.88594 12.4828C4.82812 12.4609 4.77031 12.4375 4.71406 12.4141ZM9.28594 12.4141C9.22812 12.4375 9.17188 12.4609 9.11406 12.4828C9.47969 11.9938 9.79375 11.3828 10.0391 10.6797C10.3672 10.8672 10.6781 11.0859 10.9672 11.3328C10.4731 11.7872 9.90432 12.1529 9.28594 12.4141Z\"\n});\n\nvar SvgGlobal = function SvgGlobal(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 14 14\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGlobal, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/global.e2e61665.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink, Typography } from \"@chainsafe/common-components\";\nimport { createStyles, ITheme, makeStyles } from \"@chainsafe/common-theme\";\nimport React from \"react\";\nimport { ReactNode } from \"react\";\nimport AppHeader from \"./AppHeader\";\nimport { ReactComponent as GlobalSvg } from \"../media/Icons/global.svg\";\n// import { ReactComponent as GiftSvg } from \"../media/Icons/gift.svg\";\nimport { ROUTE_LINKS } from \"../Components/Routes\";\ninterface IAppWrapper {\n  children: ReactNode | ReactNode[];\n}\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, breakpoints }: ITheme) => {\n    return createStyles({\n      root: {\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        paddingTop: 30,\n        marginTop: 10,\n        [breakpoints.between(\"sm\", \"xl\")]: {\n          paddingTop: 20,\n          marginTop: 55,\n        },\n      },\n      inner: {\n        paddingTop: (constants.navItemHeight as number) * 2,\n        paddingBottom: (constants.navItemHeight as number) * 2,\n      },\n      cta: {\n        display: \"block\",\n        maxWidth: 200,\n        maxHeight: 200,\n        position: \"fixed\",\n        bottom: constants.generalUnit * 3,\n        right: constants.generalUnit * 3,\n      },\n      content: {\n        // position: \"absolute\",\n        // top: \"50%\",\n        // left: \"50%\",\n        // transform: \"translate(-50%, -50%)\",\n        margin: `30px auto`,\n        maxWidth: 460,\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        borderRadius: 4,\n      },\n      pageArea: {\n        height: \"100%\",\n        width: \"100%\",\n        overflow: \"hidden\",\n        border: `1px solid ${palette.additional[\"gray\"][7]}`,\n        borderRadius: 4,\n      },\n      navTabs: {\n        // position: \"absolute\",\n        // top: 0,\n        // left: 0,\n        width: \"100%\",\n        // transform: \"translate(0,-100%)\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: `0 ${constants.generalUnit}px`,\n        transform: \"translateY(1px)\",\n        \"& > a\": {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          padding: `${constants.generalUnit}px ${\n            constants.generalUnit * 1.5\n          }px`,\n          border: `1px solid ${palette.additional[\"gray\"][7]}`,\n          textDecoration: \"none\",\n          marginRight: constants.generalUnit,\n          transitionDuration: `${animation.transform}ms`,\n          color: palette.additional[\"gray\"][8],\n          maxHeight: constants.navItemHeight,\n          \"& svg\": {\n            transitionDuration: `${animation.transform}ms`,\n            fill: palette.additional[\"gray\"][8],\n          },\n          \"&.active\": {\n            color: palette.additional[\"gray\"][9],\n            textDecoration: \"underline\",\n            \"& svg\": {\n              fill: palette.additional[\"geekblue\"][5],\n            },\n          },\n          \"& > *:first-child\": {\n            marginRight: constants.generalUnit,\n          },\n        },\n        \"& svg\": {\n          height: 14,\n          width: 14,\n        },\n      },\n    });\n  }\n);\n\nconst AppWrapper: React.FC<IAppWrapper> = ({ children }: IAppWrapper) => {\n  const classes = useStyles();\n\n  return (\n    <section className={classes.root}>\n      <section className={classes.inner}>\n        <AppHeader />\n        <section className={classes.content}>\n          <section className={classes.navTabs}>\n            <NavLink activeClassName=\"active\" to={ROUTE_LINKS.Transfer}>\n              <GlobalSvg />\n              <Typography variant=\"h5\">Transfer</Typography>\n            </NavLink>\n            {/* <NavLink activeClassName=\"active\" to={ROUTE_LINKS.Wrap}>\n              <GiftSvg />\n              <Typography variant=\"h5\">Wrap token</Typography>\n            </NavLink> */}\n          </section>\n          <div className={classes.pageArea}>{children}</div>\n        </section>\n\n        {/* Put CTA here */}\n        {/* <a className={classes.cta} rel=\"noopener noreferrer\" target=\"_blank\" href=\"#\">\n        </a> */}\n      </section>\n    </section>\n  );\n};\n\nexport default AppWrapper;\n","import React from \"react\";\nimport { init, ErrorBoundary, showReportDialog } from \"@sentry/react\";\nimport { ThemeSwitcher } from \"@chainsafe/common-theme\";\nimport {\n  CssBaseline,\n  Router,\n  ToasterProvider,\n} from \"@chainsafe/common-components\";\n\nimport Routes from \"./Components/Routes\";\nimport { lightTheme } from \"./Themes/LightTheme\";\nimport { ChainbridgeProvider } from \"./Contexts/ChainbridgeContext\";\nimport AppWrapper from \"./Layouts/AppWrapper\";\nimport { NetworkManagerProvider } from \"./Contexts/NetworkManagerContext\";\nimport { chainbridgeConfig } from \"./chainbridgeConfig\";\nimport { Web3Provider } from \"@chainsafe/web3-context\";\nimport { utils } from \"ethers\";\nimport \"@chainsafe/common-theme/dist/font-faces.css\";\n\nif (\n  process.env.NODE_ENV === \"production\" &&\n  process.env.REACT_APP_SENTRY_DSN_URL &&\n  process.env.REACT_APP_SENTRY_RELEASE\n) {\n  init({\n    dsn: process.env.REACT_APP_SENTRY_DSN_URL,\n    release: process.env.REACT_APP_SENTRY_RELEASE,\n  });\n}\n\nconst App: React.FC<{}> = () => {\n  const tokens = chainbridgeConfig.chains\n    .filter((c) => c.type === \"Ethereum\")\n    .reduce((tca, bc: any) => {\n      if (bc.networkId) {\n        return {\n          ...tca,\n          [bc.networkId]: bc.tokens,\n        };\n      } else {\n        return tca;\n      }\n    }, {});\n\n  return (\n    <ErrorBoundary\n      fallback={({ error, componentStack, eventId, resetError }) => (\n        <div>\n          <p>\n            An error occurred and has been logged. If you would like to provide\n            additional info to help us debug and resolve the issue, click the\n            \"Provide Additional Details\" button\n          </p>\n          <p>{error?.message.toString()}</p>\n          <p>{componentStack}</p>\n          <p>{eventId}</p>\n          <button onClick={() => showReportDialog({ eventId: eventId || \"\" })}>\n            Provide Additional Details\n          </button>\n          <button onClick={resetError}>Reset error</button>\n        </div>\n      )}\n      onReset={() => window.location.reload()}\n    >\n      <ThemeSwitcher themes={{ light: lightTheme }}>\n        <CssBaseline />\n        <ToasterProvider autoDismiss>\n          <Web3Provider\n            tokensToWatch={tokens}\n            networkIds={[5]}\n            onboardConfig={{\n              dappId: process.env.REACT_APP_BLOCKNATIVE_DAPP_ID,\n              walletSelect: {\n                wallets: [{ walletName: \"metamask\", preferred: true }],\n              },\n              subscriptions: {\n                network: (network) =>\n                  network && console.log(\"chainId: \", network),\n                balance: (amount) =>\n                  amount && console.log(\"balance: \", utils.formatEther(amount)),\n              },\n            }}\n            checkNetwork={false}\n            gasPricePollingInterval={120}\n            gasPriceSetting=\"fast\"\n          >\n            <NetworkManagerProvider>\n              <ChainbridgeProvider>\n                <Router>\n                  <AppWrapper>\n                    <Routes />\n                  </AppWrapper>\n                </Router>\n              </ChainbridgeProvider>\n            </NetworkManagerProvider>\n          </Web3Provider>\n        </ToasterProvider>\n      </ThemeSwitcher>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext } from \"react\";\nimport { HomeChainAdaptorContext } from \"./Adaptors/interfaces\";\n\nconst HomeBridgeContext = React.createContext<\n  HomeChainAdaptorContext | undefined\n>(undefined);\n\nconst useHomeBridge = () => {\n  const context = useContext(HomeBridgeContext);\n  if (context === undefined) {\n    throw new Error(\"useHomeBridge must be called within a HomeBridgeProvider\");\n  }\n  return context;\n};\n\nexport { HomeBridgeContext, useHomeBridge };\n","import React from \"react\";\nimport { Bridge, BridgeFactory } from \"@chainsafe/chainbridge-contracts\";\nimport { BigNumber } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { EvmBridgeConfig } from \"../../../chainbridgeConfig\";\nimport { useNetworkManager } from \"../../NetworkManagerContext\";\nimport { IDestinationBridgeProviderProps } from \"../interfaces\";\nimport { DestinationBridgeContext } from \"../../DestinationBridgeContext\";\n\nimport { getProvider } from \"./helpers\";\n\nexport const EVMDestinationAdaptorProvider = ({\n  children,\n}: IDestinationBridgeProviderProps) => {\n  const {\n    depositNonce,\n    destinationChainConfig,\n    homeChainConfig,\n    tokensDispatch,\n    setTransactionStatus,\n    setTransferTxHash,\n    setDepositVotes,\n    depositVotes,\n  } = useNetworkManager();\n\n  const [destinationBridge, setDestinationBridge] = useState<\n    Bridge | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (destinationBridge) return;\n    const provider = getProvider(destinationChainConfig);\n\n    if (destinationChainConfig && provider) {\n      const bridge = BridgeFactory.connect(\n        (destinationChainConfig as EvmBridgeConfig).bridgeAddress,\n        provider\n      );\n      setDestinationBridge(bridge);\n    }\n  }, [destinationChainConfig, destinationBridge]);\n\n  useEffect(() => {\n    if (\n      destinationChainConfig &&\n      homeChainConfig?.chainId !== null &&\n      homeChainConfig?.chainId !== undefined &&\n      destinationBridge &&\n      depositNonce\n    ) {\n      destinationBridge.on(\n        destinationBridge.filters.ProposalEvent(\n          homeChainConfig.chainId,\n          BigNumber.from(depositNonce),\n          null,\n          null,\n          null\n        ),\n        (originChainId, depositNonce, status, resourceId, dataHash, tx) => {\n          switch (BigNumber.from(status).toNumber()) {\n            case 1:\n              tokensDispatch({\n                type: \"addMessage\",\n                payload: `Proposal created on ${destinationChainConfig.name}`,\n              });\n              break;\n            case 2:\n              tokensDispatch({\n                type: \"addMessage\",\n                payload: `Proposal has passed. Executing...`,\n              });\n              break;\n            case 3:\n              setTransactionStatus(\"Transfer Completed\");\n              setTransferTxHash(tx.transactionHash);\n              break;\n            case 4:\n              setTransactionStatus(\"Transfer Aborted\");\n              setTransferTxHash(tx.transactionHash);\n              break;\n          }\n        }\n      );\n\n      destinationBridge.on(\n        destinationBridge.filters.ProposalVote(\n          homeChainConfig.chainId,\n          BigNumber.from(depositNonce),\n          null,\n          null\n        ),\n        async (originChainId, depositNonce, status, resourceId, tx) => {\n          const txReceipt = await tx.getTransactionReceipt();\n          if (txReceipt.status === 1) {\n            setDepositVotes(depositVotes + 1);\n          }\n          tokensDispatch({\n            type: \"addMessage\",\n            payload: {\n              address: String(txReceipt.from),\n              signed: txReceipt.status === 1 ? \"Confirmed\" : \"Rejected\",\n            },\n          });\n        }\n      );\n    }\n    return () => {\n      //@ts-ignore\n      destinationBridge?.removeAllListeners();\n    };\n  }, [\n    depositNonce,\n    homeChainConfig,\n    destinationBridge,\n    depositVotes,\n    destinationChainConfig,\n    setDepositVotes,\n    setTransactionStatus,\n    setTransferTxHash,\n    tokensDispatch,\n  ]);\n\n  return (\n    <DestinationBridgeContext.Provider\n      value={{\n        disconnect: async () => {},\n      }}\n    >\n      {children}\n    </DestinationBridgeContext.Provider>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { DestinationBridgeContext } from \"../DestinationBridgeContext\";\nimport { HomeBridgeContext } from \"../HomeBridgeContext\";\nimport { useNetworkManager } from \"../NetworkManagerContext\";\nimport { createApi, submitDeposit } from \"./SubstrateApis/ChainBridgeAPI\";\nimport {\n  IDestinationBridgeProviderProps,\n  IHomeBridgeProviderProps,\n  InjectedAccountType,\n} from \"./interfaces\";\n\nimport { ApiPromise } from \"@polkadot/api\";\nimport {\n  web3Accounts,\n  web3Enable,\n  web3FromSource,\n} from \"@polkadot/extension-dapp\";\nimport { TypeRegistry } from \"@polkadot/types\";\nimport { Tokens } from \"@chainsafe/web3-context/dist/context/tokensReducer\";\nimport { BigNumber as BN } from \"bignumber.js\";\nimport { UnsubscribePromise, VoidFn } from \"@polkadot/api/types\";\nimport { utils } from \"ethers\";\nimport {\n  SubstrateBridgeConfig,\n  chainbridgeConfig,\n} from \"../../chainbridgeConfig\";\nimport { hasTokenSupplies } from \"./EVMAdaptors/helpers\";\n\nexport const SubstrateHomeAdaptorProvider = ({\n  children,\n}: IHomeBridgeProviderProps) => {\n  const registry = new TypeRegistry();\n  const [api, setApi] = useState<ApiPromise | undefined>();\n  const [isReady, setIsReady] = useState(false);\n  const [accounts, setAccounts] = useState<InjectedAccountType[]>([]);\n  const [address, setAddress] = useState<string | undefined>(undefined);\n\n  const {\n    homeChainConfig,\n    setTransactionStatus,\n    setDepositNonce,\n    handleSetHomeChain,\n    homeChains,\n  } = useNetworkManager();\n\n  const [relayerThreshold, setRelayerThreshold] = useState<number | undefined>(\n    undefined\n  );\n  const [bridgeFee, setBridgeFee] = useState<number | undefined>(undefined);\n\n  const [depositAmount, setDepositAmount] = useState<number | undefined>();\n  const [selectedToken, setSelectedToken] = useState<string>(\"CSS\");\n\n  const [tokens, setTokens] = useState<Tokens>({});\n\n  useEffect(() => {\n    // Attempt connect on load\n    handleConnect();\n  });\n\n  const [initiaising, setInitialising] = useState(false);\n  useEffect(() => {\n    // Once the chain ID has been set in the network context, the homechain configuration will be automatically set thus triggering this\n    if (!homeChainConfig || initiaising || api) return;\n    setInitialising(true);\n    createApi(homeChainConfig.rpcUrl)\n      .then((api) => {\n        setApi(api);\n        setInitialising(false);\n      })\n      .catch(console.error);\n  }, [homeChainConfig, registry, api, initiaising]);\n\n  const getRelayerThreshold = useCallback(async () => {\n    if (api) {\n      const relayerThreshold = await api.query[\n        (homeChainConfig as SubstrateBridgeConfig).chainbridgePalletName\n      ].relayerThreshold();\n      setRelayerThreshold(Number(relayerThreshold.toHuman()));\n    }\n  }, [api, homeChainConfig]);\n\n  const getBridgeFee = useCallback(async () => {\n    if (api) {\n      const config = homeChainConfig as SubstrateBridgeConfig;\n\n      const fee = config.bridgeFeeFunctionName\n        ? new BN(\n            Number(\n              await api.query[config.transferPalletName][\n                config.bridgeFeeFunctionName\n              ]()\n            )\n          )\n            .shiftedBy(-config.decimals)\n            .toNumber()\n        : config.bridgeFeeValue\n        ? config.bridgeFeeValue\n        : 0;\n\n      setBridgeFee(fee);\n    }\n  }, [api, homeChainConfig]);\n\n  const confirmChainID = useCallback(async () => {\n    if (api) {\n      const currentId = Number(\n        api.consts[\n          (homeChainConfig as SubstrateBridgeConfig).chainbridgePalletName\n        ].bridgeChainId.toHuman()\n      );\n      if (homeChainConfig?.chainId !== currentId) {\n        const correctConfig = homeChains.find(\n          (item) => item.chainId === currentId\n        );\n        if (correctConfig) {\n          handleSetHomeChain(currentId);\n        }\n      }\n    }\n  }, [api, handleSetHomeChain, homeChainConfig, homeChains]);\n\n  useEffect(() => {\n    // For all constants & essential values like:\n    // Relayer Threshold, resources IDs & Bridge Fees\n    // It is recommended to collect state at this point\n    if (api) {\n      if (api.isConnected && homeChainConfig) {\n        getRelayerThreshold();\n        confirmChainID();\n        getBridgeFee();\n      }\n    }\n  }, [api, getRelayerThreshold, getBridgeFee, confirmChainID, homeChainConfig]);\n\n  useEffect(() => {\n    if (!homeChainConfig || !address) return;\n    let unsubscribe: VoidFn | undefined;\n    if (api) {\n      api.query.system\n        .account(address, (result) => {\n          const {\n            data: { free: balance },\n          } = result.toJSON() as any;\n          setTokens({\n            [homeChainConfig.tokens[0].symbol || \"TOKEN\"]: {\n              decimals: homeChainConfig.decimals,\n              balance: parseInt(\n                utils.formatUnits(balance, homeChainConfig.decimals)\n              ),\n              balanceBN: new BN(balance).shiftedBy(-homeChainConfig.decimals),\n              name: homeChainConfig.tokens[0].name,\n              symbol: homeChainConfig.tokens[0].symbol,\n            },\n          });\n        })\n        .then((unsub) => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n    }\n    return () => {\n      unsubscribe && unsubscribe();\n    };\n  }, [api, address, homeChainConfig]);\n\n  const handleConnect = useCallback(async () => {\n    // Requests permission to inject the wallet\n    if (!isReady) {\n      web3Enable(\"chainbridge-ui\")\n        .then(() => {\n          // web3Account resolves with the injected accounts\n          // or an empty array\n          web3Accounts()\n            .then((accounts) => {\n              return accounts.map(({ address, meta }) => ({\n                address,\n                meta: {\n                  ...meta,\n                  name: `${meta.name} (${meta.source})`,\n                },\n              }));\n            })\n            .then((injectedAccounts) => {\n              // This is where the correct chain configuration is set to the network context\n              // Any operations before presenting the accounts to the UI or providing the config\n              // to the rest of the dapp should be done here\n              setAccounts(injectedAccounts);\n              if (injectedAccounts.length === 1) {\n                setAddress(injectedAccounts[0].address);\n              }\n              handleSetHomeChain(\n                homeChains.find((item) => item.type === \"Substrate\")?.chainId\n              );\n            })\n            .catch(console.error);\n        })\n        .catch(console.error);\n    }\n  }, [isReady, handleSetHomeChain, homeChains]);\n\n  useEffect(() => {\n    // This is a simple check\n    // The reason for having a isReady is that the UI can lazy load data from this point\n    api?.isReady.then(() => setIsReady(true));\n  }, [api, setIsReady]);\n\n  const selectAccount = useCallback(\n    (index: number) => {\n      setAddress(accounts[index].address);\n    },\n    [accounts]\n  );\n\n  const deposit = useCallback(\n    async (\n      amount: number,\n      recipient: string,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (api && address) {\n        const allAccounts = await web3Accounts();\n        const targetAccount = allAccounts.find(\n          (item) => item.address === address\n        );\n        if (targetAccount) {\n          const transferExtrinsic = submitDeposit(\n            api,\n            amount,\n            recipient,\n            destinationChainId\n          );\n\n          const injector = await web3FromSource(targetAccount.meta.source);\n          setTransactionStatus(\"Initializing Transfer\");\n          setDepositAmount(amount);\n          transferExtrinsic\n            .signAndSend(\n              address,\n              { signer: injector.signer },\n              ({ status, events }) => {\n                status.isInBlock &&\n                  console.log(\n                    `Completed at block hash #${status.isInBlock.toString()}`\n                  );\n\n                if (status.isFinalized) {\n                  events.filter(({ event }) => {\n                    return api.events[\n                      (homeChainConfig as SubstrateBridgeConfig)\n                        .chainbridgePalletName\n                    ].FungibleTransfer.is(event);\n                  });\n                  api.query[\n                    (homeChainConfig as SubstrateBridgeConfig)\n                      .chainbridgePalletName\n                  ]\n                    .chainNonces(destinationChainId)\n                    .then((response) => {\n                      setDepositNonce(`${response.toJSON()}`);\n                      setTransactionStatus(\"In Transit\");\n                    })\n                    .catch((error) => {\n                      console.error(error);\n                    });\n                } else {\n                  console.log(`Current status: ${status.type}`);\n                }\n              }\n            )\n            .catch((error: any) => {\n              console.log(\":( transaction failed\", error);\n              setTransactionStatus(\"Transfer Aborted\");\n            });\n        }\n      }\n    },\n    [api, setDepositNonce, setTransactionStatus, address, homeChainConfig]\n  );\n\n  // Required for adaptor however not needed for substrate\n  const wrapToken = async (value: number): Promise<string> => {\n    return \"Not implemented\";\n  };\n\n  // Required for adaptor however not needed for substrate\n  const unwrapToken = async (value: number): Promise<string> => {\n    return \"Not implemented\";\n  };\n\n  const handleCheckSupplies = useCallback(\n    async (\n      amount: number,\n      tokenAddress: string,\n      destinationChainId: number\n    ) => {\n      if (homeChainConfig) {\n        const destinationChain = chainbridgeConfig.chains.find(\n          (c) => c.chainId === destinationChainId\n        );\n\n        const token = homeChainConfig.tokens.find(\n          (token) => token.address === tokenAddress\n        );\n\n        if (destinationChain?.type === \"Ethereum\" && token) {\n          const hasSupplies = await hasTokenSupplies(\n            destinationChain,\n            tokens,\n            token,\n            amount,\n            tokenAddress\n          );\n          if (!hasSupplies) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n    [homeChainConfig, tokens]\n  );\n\n  return (\n    <HomeBridgeContext.Provider\n      value={{\n        connect: handleConnect,\n        disconnect: async () => {\n          await api?.disconnect();\n        },\n        getNetworkName: () => homeChainConfig?.name || \"undefined\",\n        bridgeFee,\n        deposit,\n        depositAmount,\n        selectedToken,\n        setDepositAmount,\n        setSelectedToken,\n        tokens: tokens,\n        relayerThreshold,\n        wrapTokenConfig: undefined, // Not implemented\n        wrapper: undefined, // Not implemented\n        wrapToken, // Not implemented\n        unwrapToken, // Not implemented\n        isReady: isReady,\n        chainConfig: homeChainConfig,\n        address: address,\n        nativeTokenBalance: 0,\n        accounts: accounts,\n        selectAccount: selectAccount,\n        handleCheckSupplies,\n      }}\n    >\n      {children}\n    </HomeBridgeContext.Provider>\n  );\n};\n\nexport const SubstrateDestinationAdaptorProvider = ({\n  children,\n}: IDestinationBridgeProviderProps) => {\n  const {\n    depositNonce,\n    destinationChainConfig,\n    setDepositVotes,\n    depositVotes,\n    tokensDispatch,\n    setTransactionStatus,\n  } = useNetworkManager();\n\n  const [api, setApi] = useState<ApiPromise | undefined>();\n\n  const [initiaising, setInitialising] = useState(false);\n  useEffect(() => {\n    // Once the chain ID has been set in the network context, the destination configuration will be automatically\n    // set thus triggering this\n    if (!destinationChainConfig || initiaising || api) return;\n    setInitialising(true);\n    createApi(destinationChainConfig.rpcUrl)\n      .then((api) => {\n        setApi(api);\n        setInitialising(false);\n      })\n      .catch(console.error);\n  }, [destinationChainConfig, api, initiaising]);\n\n  const [listenerActive, setListenerActive] = useState<\n    UnsubscribePromise | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (api && !listenerActive && depositNonce) {\n      // Wire up event listeners\n      // Subscribe to system events via storage\n      const unsubscribe = api.query.system.events((events) => {\n        console.log(\"----- Received \" + events.length + \" event(s): -----\");\n        // loop through the Vec<EventRecord>\n        events.forEach((record) => {\n          // extract the phase, event and the event types\n          const { event, phase } = record;\n          const types = event.typeDef;\n          // show what we are busy with\n          console.log(\n            event.section +\n              \":\" +\n              event.method +\n              \"::\" +\n              \"phase=\" +\n              phase.toString()\n          );\n          // console.log(event.meta.documentation.toString());\n          // loop through each of the parameters, displaying the type and data\n          event.data.forEach((data, index) => {\n            console.log(types[index].type + \";\" + data.toString());\n          });\n\n          if (\n            event.section ===\n              (destinationChainConfig as SubstrateBridgeConfig)\n                .chainbridgePalletName &&\n            event.method === \"VoteFor\"\n          ) {\n            setDepositVotes(depositVotes + 1);\n            tokensDispatch({\n              type: \"addMessage\",\n              payload: {\n                address: \"Substrate Relayer\",\n                signed: \"Confirmed\",\n              },\n            });\n          }\n\n          if (\n            event.section ===\n              (destinationChainConfig as SubstrateBridgeConfig)\n                .chainbridgePalletName &&\n            event.method === \"ProposalApproved\"\n          ) {\n            setDepositVotes(depositVotes + 1);\n            setTransactionStatus(\"Transfer Completed\");\n          }\n        });\n      });\n      setListenerActive(unsubscribe);\n    } else if (listenerActive && !depositNonce) {\n      const unsubscribeCall = async () => {\n        setListenerActive(undefined);\n      };\n      unsubscribeCall();\n    }\n  }, [\n    api,\n    depositNonce,\n    depositVotes,\n    destinationChainConfig,\n    listenerActive,\n    setDepositVotes,\n    setTransactionStatus,\n    tokensDispatch,\n  ]);\n\n  return (\n    <DestinationBridgeContext.Provider\n      value={{\n        disconnect: async () => {\n          await api?.disconnect();\n        },\n      }}\n    >\n      {children}\n    </DestinationBridgeContext.Provider>\n  );\n};\n","import { Vote } from \"../NetworkManagerContext\";\n\nexport type AddMessageAction = { type: \"addMessage\"; payload: string | Vote };\nexport type ResetAction = { type: \"resetMessages\" };\n\nexport function transitMessageReducer(\n  transitMessage: Array<string | Vote>,\n  action: AddMessageAction | ResetAction\n) {\n  switch (action.type) {\n    case \"addMessage\":\n      return [...transitMessage, action.payload];\n    case \"resetMessages\":\n      return [];\n    default:\n      return transitMessage;\n  }\n}\n","import React, {\n  Dispatch,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport {\n  BridgeConfig,\n  chainbridgeConfig,\n  ChainType,\n} from \"../chainbridgeConfig\";\nimport {\n  EVMDestinationAdaptorProvider,\n  EVMHomeAdaptorProvider,\n} from \"./Adaptors/EVMAdaptors\";\nimport { IDestinationBridgeProviderProps } from \"./Adaptors/interfaces\";\nimport {\n  SubstrateDestinationAdaptorProvider,\n  SubstrateHomeAdaptorProvider,\n} from \"./Adaptors/SubstrateAdaptors\";\nimport { DestinationBridgeContext } from \"./DestinationBridgeContext\";\nimport { HomeBridgeContext } from \"./HomeBridgeContext\";\nimport {\n  AddMessageAction,\n  ResetAction,\n  transitMessageReducer,\n} from \"./Reducers/TransitMessageReducer\";\n\ninterface INetworkManagerProviderProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport type WalletType = ChainType | \"select\" | \"unset\";\n\nexport type Vote = {\n  address: string;\n  signed: \"Confirmed\" | \"Rejected\";\n};\n\nexport type TransactionStatus =\n  | \"Initializing Transfer\"\n  | \"In Transit\"\n  | \"Transfer Completed\"\n  | \"Transfer Aborted\";\n\ninterface NetworkManagerContext {\n  walletType: WalletType;\n  setWalletType: (walletType: WalletType) => void;\n\n  networkId: number;\n  setNetworkId: (id: number) => void;\n\n  chainId?: number;\n\n  homeChainConfig: BridgeConfig | undefined;\n  destinationChainConfig: BridgeConfig | undefined;\n\n  destinationChains: Array<{ chainId: number; name: string }>;\n  homeChains: BridgeConfig[];\n  handleSetHomeChain: (chainId: number | undefined) => void;\n  setDestinationChain: (chainId: number | undefined) => void;\n\n  transactionStatus?: TransactionStatus;\n  setTransactionStatus: (message: TransactionStatus | undefined) => void;\n  inTransitMessages: Array<string | Vote>;\n\n  setDepositVotes: (input: number) => void;\n  depositVotes: number;\n\n  setDepositNonce: (input: string | undefined) => void;\n  depositNonce: string | undefined;\n\n  tokensDispatch: Dispatch<AddMessageAction | ResetAction>;\n\n  setTransferTxHash: (input: string) => void;\n  transferTxHash: string;\n}\n\nconst NetworkManagerContext = React.createContext<\n  NetworkManagerContext | undefined\n>(undefined);\n\nconst NetworkManagerProvider = ({ children }: INetworkManagerProviderProps) => {\n  const [walletType, setWalletType] = useState<WalletType>(\"unset\");\n\n  const [networkId, setNetworkId] = useState(0);\n\n  const [homeChainConfig, setHomeChainConfig] = useState<\n    BridgeConfig | undefined\n  >();\n  const [homeChains, setHomeChains] = useState<BridgeConfig[]>([]);\n  const [destinationChainConfig, setDestinationChain] = useState<\n    BridgeConfig | undefined\n  >();\n  const [destinationChains, setDestinationChains] = useState<BridgeConfig[]>(\n    []\n  );\n\n  const [transferTxHash, setTransferTxHash] = useState<string>(\"\");\n  const [transactionStatus, setTransactionStatus] = useState<\n    TransactionStatus | undefined\n  >(undefined);\n  const [depositNonce, setDepositNonce] = useState<string | undefined>(\n    undefined\n  );\n  const [depositVotes, setDepositVotes] = useState<number>(0);\n  const [inTransitMessages, tokensDispatch] = useReducer(\n    transitMessageReducer,\n    []\n  );\n\n  const handleSetHomeChain = useCallback(\n    (chainId: number | undefined) => {\n      if (!chainId && chainId !== 0) {\n        setHomeChainConfig(undefined);\n        return;\n      }\n      const chain = homeChains.find((c) => c.chainId === chainId);\n\n      if (chain) {\n        setHomeChainConfig(chain);\n        setDestinationChains(\n          chainbridgeConfig.chains.filter(\n            (bridgeConfig: BridgeConfig) =>\n              bridgeConfig.chainId !== chain.chainId\n          )\n        );\n        if (chainbridgeConfig.chains.length === 2) {\n          setDestinationChain(\n            chainbridgeConfig.chains.find(\n              (bridgeConfig: BridgeConfig) =>\n                bridgeConfig.chainId !== chain.chainId\n            )\n          );\n        }\n      }\n    },\n    [homeChains, setHomeChainConfig]\n  );\n\n  useEffect(() => {\n    if (walletType !== \"unset\") {\n      if (walletType === \"select\") {\n        setHomeChains(chainbridgeConfig.chains);\n      } else {\n        setHomeChains(\n          chainbridgeConfig.chains.filter(\n            (bridgeConfig: BridgeConfig) => bridgeConfig.type === walletType\n          )\n        );\n      }\n    } else {\n      setHomeChains([]);\n    }\n  }, [walletType]);\n\n  const handleSetDestination = useCallback(\n    (chainId: number | undefined) => {\n      if (chainId === undefined) {\n        setDestinationChain(undefined);\n      } else if (homeChainConfig && !depositNonce) {\n        const chain = destinationChains.find((c) => c.chainId === chainId);\n        if (!chain) {\n          throw new Error(\"Invalid destination chain selected\");\n        }\n        setDestinationChain(chain);\n      } else {\n        throw new Error(\"Home chain not selected\");\n      }\n    },\n    [depositNonce, destinationChains, homeChainConfig]\n  );\n\n  const DestinationProvider = ({\n    children,\n  }: IDestinationBridgeProviderProps) => {\n    if (destinationChainConfig?.type === \"Ethereum\") {\n      return (\n        <EVMDestinationAdaptorProvider>\n          {children}\n        </EVMDestinationAdaptorProvider>\n      );\n    } else if (destinationChainConfig?.type === \"Substrate\") {\n      return (\n        <SubstrateDestinationAdaptorProvider>\n          {children}\n        </SubstrateDestinationAdaptorProvider>\n      );\n    } else {\n      return (\n        <DestinationBridgeContext.Provider\n          value={{\n            disconnect: async () => {},\n          }}\n        >\n          {children}\n        </DestinationBridgeContext.Provider>\n      );\n    }\n  };\n\n  return (\n    <NetworkManagerContext.Provider\n      value={{\n        chainId: homeChainConfig?.chainId,\n        networkId,\n        setNetworkId,\n        homeChainConfig,\n        setWalletType,\n        walletType,\n        homeChains: homeChains,\n        destinationChains,\n        inTransitMessages,\n        handleSetHomeChain,\n        setDestinationChain: handleSetDestination,\n        destinationChainConfig,\n        transactionStatus,\n        setTransactionStatus,\n        depositNonce,\n        depositVotes,\n        setDepositNonce,\n        setDepositVotes,\n        tokensDispatch,\n        setTransferTxHash,\n        transferTxHash,\n      }}\n    >\n      {walletType === \"Ethereum\" ? (\n        <EVMHomeAdaptorProvider>\n          <DestinationProvider>{children}</DestinationProvider>\n        </EVMHomeAdaptorProvider>\n      ) : walletType === \"Substrate\" ? (\n        <SubstrateHomeAdaptorProvider>\n          <DestinationProvider>{children}</DestinationProvider>\n        </SubstrateHomeAdaptorProvider>\n      ) : (\n        <HomeBridgeContext.Provider\n          value={{\n            connect: async () => undefined,\n            disconnect: async () => {},\n            getNetworkName: (id: any) => \"\",\n            isReady: false,\n            selectedToken: \"\",\n            deposit: async (\n              amount: number,\n              recipient: string,\n              tokenAddress: string,\n              destinationChainId: number\n            ) => undefined,\n            setDepositAmount: () => undefined,\n            tokens: {},\n            setSelectedToken: (input: string) => undefined,\n            address: undefined,\n            bridgeFee: undefined,\n            chainConfig: undefined,\n            depositAmount: undefined,\n            nativeTokenBalance: undefined,\n            relayerThreshold: undefined,\n            wrapTokenConfig: undefined,\n            wrapper: undefined,\n            wrapToken: async (value: number) => \"\",\n            unwrapToken: async (value: number) => \"\",\n          }}\n        >\n          <DestinationProvider>{children}</DestinationProvider>\n        </HomeBridgeContext.Provider>\n      )}\n    </NetworkManagerContext.Provider>\n  );\n};\n\nconst useNetworkManager = () => {\n  const context = useContext(NetworkManagerContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useNetworkManager must be called within a HomeNetworkProvider\"\n    );\n  }\n  return context;\n};\n\nexport { NetworkManagerProvider, useNetworkManager };\n"],"sourceRoot":""}